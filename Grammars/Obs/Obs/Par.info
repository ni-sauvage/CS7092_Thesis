-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Obs/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pObsList -> ObsList                         (0)
	%start_pObs -> Obs                                 (1)
	%start_pScalar -> Scalar                           (2)
	%start_pEnd -> End                                 (3)
	%start_pArgs -> Args                               (4)
	%start_pLMsg -> LMsg                               (5)
	%start_pTaskname -> Taskname                       (6)
	%start_pVarname -> Varname                         (7)
	%start_pVarval -> Varval                           (8)
	%start_pTypename -> Typename                       (9)
	%start_pState -> State                             (10)
	%start_pVarindex -> Varindex                       (11)
	%start_pThreadId -> ThreadId                       (12)
	%start_pSizeDcl -> SizeDcl                         (13)
	Double -> L_doubl                                  (14)
	Integer -> L_integ                                 (15)
	ObsIdent -> L_ObsIdent                             (16)
	ObsStr -> L_ObsStr                                 (17)
	ObsList -> '@@@' Obs ObsList                       (18)
	ObsList -> '@@@' Obs                               (19)
	Obs -> ThreadId 'NAME' ObsIdent                    (20)
	Obs -> ThreadId 'LOG' LMsg                         (21)
	Obs -> ThreadId 'INIT'                             (22)
	Obs -> ThreadId 'TASK' Taskname                    (23)
	Obs -> ThreadId 'SIGNAL' Integer                   (24)
	Obs -> ThreadId 'DEF' Varname Varval               (25)
	Obs -> ThreadId 'DECL' Typename Varname            (26)
	Obs -> ThreadId 'DECL' Typename Varname Varval     (27)
	Obs -> ThreadId 'DCLARRAY' Typename Varname SizeDcl   (28)
	Obs -> ThreadId 'CALL' ObsIdent Args               (29)
	Obs -> ThreadId 'STATE' Integer State              (30)
	Obs -> ThreadId 'STRUCT' Varname                   (31)
	Obs -> ThreadId 'SEQ' Varname Scalar               (32)
	Obs -> ThreadId 'PTR' Varname Varval               (33)
	Obs -> ThreadId 'SCALAR' Varname Varval            (34)
	Obs -> ThreadId 'SCALAR' Varname Varindex Varval   (35)
	Obs -> ThreadId 'END' Varname                      (36)
	Scalar -> End                                      (37)
	Scalar -> '@@@' ThreadId 'SCALAR' '_' Varval Scalar   (38)
	End -> '@@@' ThreadId 'END' Varname                (39)
	Args -> ObsStr Args                                (40)
	Args -> Integer Args                               (41)
	Args -> Double Args                                (42)
	Args ->                                            (43)
	LMsg -> ObsStr LMsg                                (44)
	LMsg ->                                            (45)
	Taskname -> ObsIdent                               (46)
	Varname -> ObsIdent                                (47)
	Varval -> Integer                                  (48)
	Varval -> Double                                   (49)
	Varval -> 'NULL'                                   (50)
	Varval -> ObsStr                                   (51)
	Typename -> ObsIdent                               (52)
	State -> ObsIdent                                  (53)
	Varindex -> Integer                                (54)
	ThreadId -> Integer                                (55)
	SizeDcl -> Varval                                  (56)
	SizeDcl -> ObsIdent                                (57)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'@@@'          { PT _ (TS _ 1) }
	'CALL'         { PT _ (TS _ 2) }
	'DCLARRAY'     { PT _ (TS _ 3) }
	'DECL'         { PT _ (TS _ 4) }
	'DEF'          { PT _ (TS _ 5) }
	'END'          { PT _ (TS _ 6) }
	'INIT'         { PT _ (TS _ 7) }
	'LOG'          { PT _ (TS _ 8) }
	'NAME'         { PT _ (TS _ 9) }
	'NULL'         { PT _ (TS _ 10) }
	'PTR'          { PT _ (TS _ 11) }
	'SCALAR'       { PT _ (TS _ 12) }
	'SEQ'          { PT _ (TS _ 13) }
	'SIGNAL'       { PT _ (TS _ 14) }
	'STATE'        { PT _ (TS _ 15) }
	'STRUCT'       { PT _ (TS _ 16) }
	'TASK'         { PT _ (TS _ 17) }
	'_'            { PT _ (TS _ 18) }
	L_doubl        { PT _ (TD $$) }
	L_integ        { PT _ (TI $$) }
	L_ObsIdent     { PT _ (T_ObsIdent $$) }
	L_ObsStr       { PT _ (T_ObsStr $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pObsList rule  0
	%start_pObs     rule  1
	%start_pScalar  rule  2
	%start_pEnd     rule  3
	%start_pArgs    rule  4
	%start_pLMsg    rule  5
	%start_pTaskname rule  6
	%start_pVarname rule  7
	%start_pVarval  rule  8
	%start_pTypename rule  9
	%start_pState   rule  10
	%start_pVarindex rule  11
	%start_pThreadId rule  12
	%start_pSizeDcl rule  13
	Double          rule  14
	Integer         rule  15
	ObsIdent        rule  16
	ObsStr          rule  17
	ObsList         rules 18, 19
	Obs             rules 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36
	Scalar          rules 37, 38
	End             rule  39
	Args            rules 40, 41, 42, 43
	LMsg            rules 44, 45
	Taskname        rule  46
	Varname         rule  47
	Varval          rules 48, 49, 50, 51
	Typename        rule  52
	State           rule  53
	Varindex        rule  54
	ThreadId        rule  55
	SizeDcl         rules 56, 57

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pObsList -> . ObsList                        (rule 0)

	'@@@'          shift, and enter state 53

	ObsList        goto state 52

State 1

	%start_pObs -> . Obs                                (rule 1)

	L_integ        shift, and enter state 23

	Integer        goto state 26
	Obs            goto state 50
	ThreadId       goto state 51

State 2

	%start_pScalar -> . Scalar                          (rule 2)

	'@@@'          shift, and enter state 49

	Scalar         goto state 47
	End            goto state 48

State 3

	%start_pEnd -> . End                                (rule 3)

	'@@@'          shift, and enter state 46

	End            goto state 45

State 4

	%start_pArgs -> . Args                              (rule 4)

	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsStr       shift, and enter state 25
	%eof           reduce using rule 43

	Double         goto state 41
	Integer        goto state 42
	ObsStr         goto state 43
	Args           goto state 44

State 5

	%start_pLMsg -> . LMsg                              (rule 5)

	L_ObsStr       shift, and enter state 25
	%eof           reduce using rule 45

	ObsStr         goto state 39
	LMsg           goto state 40

State 6

	%start_pTaskname -> . Taskname                      (rule 6)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 37
	Taskname       goto state 38

State 7

	%start_pVarname -> . Varname                        (rule 7)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 35
	Varname        goto state 36

State 8

	%start_pVarval -> . Varval                          (rule 8)

	'NULL'         shift, and enter state 22
	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsStr       shift, and enter state 25

	Double         goto state 16
	Integer        goto state 17
	ObsStr         goto state 19
	Varval         goto state 34

State 9

	%start_pTypename -> . Typename                      (rule 9)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 32
	Typename       goto state 33

State 10

	%start_pState -> . State                            (rule 10)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 30
	State          goto state 31

State 11

	%start_pVarindex -> . Varindex                      (rule 11)

	L_integ        shift, and enter state 23

	Integer        goto state 28
	Varindex       goto state 29

State 12

	%start_pThreadId -> . ThreadId                      (rule 12)

	L_integ        shift, and enter state 23

	Integer        goto state 26
	ThreadId       goto state 27

State 13

	%start_pSizeDcl -> . SizeDcl                        (rule 13)

	'NULL'         shift, and enter state 22
	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsIdent     shift, and enter state 24
	L_ObsStr       shift, and enter state 25

	Double         goto state 16
	Integer        goto state 17
	ObsIdent       goto state 18
	ObsStr         goto state 19
	Varval         goto state 20
	SizeDcl        goto state 21

State 14

	Double -> . L_doubl                                 (rule 14)

	L_doubl        shift, and enter state 15


State 15

	Double -> L_doubl .                                 (rule 14)

	'@@@'          reduce using rule 14
	L_doubl        reduce using rule 14
	L_integ        reduce using rule 14
	L_ObsStr       reduce using rule 14
	%eof           reduce using rule 14


State 16

	Varval -> Double .                                  (rule 49)

	'@@@'          reduce using rule 49
	%eof           reduce using rule 49


State 17

	Varval -> Integer .                                 (rule 48)

	'@@@'          reduce using rule 48
	%eof           reduce using rule 48


State 18

	SizeDcl -> ObsIdent .                               (rule 57)

	'@@@'          reduce using rule 57
	%eof           reduce using rule 57


State 19

	Varval -> ObsStr .                                  (rule 51)

	'@@@'          reduce using rule 51
	%eof           reduce using rule 51


State 20

	SizeDcl -> Varval .                                 (rule 56)

	'@@@'          reduce using rule 56
	%eof           reduce using rule 56


State 21

	%start_pSizeDcl -> SizeDcl .                        (rule 13)

	%eof           accept


State 22

	Varval -> 'NULL' .                                  (rule 50)

	'@@@'          reduce using rule 50
	%eof           reduce using rule 50


State 23

	Integer -> L_integ .                                (rule 15)

	'@@@'          reduce using rule 15
	'CALL'         reduce using rule 15
	'DCLARRAY'     reduce using rule 15
	'DECL'         reduce using rule 15
	'DEF'          reduce using rule 15
	'END'          reduce using rule 15
	'INIT'         reduce using rule 15
	'LOG'          reduce using rule 15
	'NAME'         reduce using rule 15
	'NULL'         reduce using rule 15
	'PTR'          reduce using rule 15
	'SCALAR'       reduce using rule 15
	'SEQ'          reduce using rule 15
	'SIGNAL'       reduce using rule 15
	'STATE'        reduce using rule 15
	'STRUCT'       reduce using rule 15
	'TASK'         reduce using rule 15
	L_doubl        reduce using rule 15
	L_integ        reduce using rule 15
	L_ObsIdent     reduce using rule 15
	L_ObsStr       reduce using rule 15
	%eof           reduce using rule 15


State 24

	ObsIdent -> L_ObsIdent .                            (rule 16)

	'@@@'          reduce using rule 16
	'NULL'         reduce using rule 16
	L_doubl        reduce using rule 16
	L_integ        reduce using rule 16
	L_ObsIdent     reduce using rule 16
	L_ObsStr       reduce using rule 16
	%eof           reduce using rule 16


State 25

	ObsStr -> L_ObsStr .                                (rule 17)

	'@@@'          reduce using rule 17
	L_doubl        reduce using rule 17
	L_integ        reduce using rule 17
	L_ObsStr       reduce using rule 17
	%eof           reduce using rule 17


State 26

	ThreadId -> Integer .                               (rule 55)

	'CALL'         reduce using rule 55
	'DCLARRAY'     reduce using rule 55
	'DECL'         reduce using rule 55
	'DEF'          reduce using rule 55
	'END'          reduce using rule 55
	'INIT'         reduce using rule 55
	'LOG'          reduce using rule 55
	'NAME'         reduce using rule 55
	'PTR'          reduce using rule 55
	'SCALAR'       reduce using rule 55
	'SEQ'          reduce using rule 55
	'SIGNAL'       reduce using rule 55
	'STATE'        reduce using rule 55
	'STRUCT'       reduce using rule 55
	'TASK'         reduce using rule 55
	%eof           reduce using rule 55


State 27

	%start_pThreadId -> ThreadId .                      (rule 12)

	%eof           accept


State 28

	Varindex -> Integer .                               (rule 54)

	%eof           reduce using rule 54


State 29

	%start_pVarindex -> Varindex .                      (rule 11)

	%eof           accept


State 30

	State -> ObsIdent .                                 (rule 53)

	'@@@'          reduce using rule 53
	%eof           reduce using rule 53


State 31

	%start_pState -> State .                            (rule 10)

	%eof           accept


State 32

	Typename -> ObsIdent .                              (rule 52)

	L_ObsIdent     reduce using rule 52
	%eof           reduce using rule 52


State 33

	%start_pTypename -> Typename .                      (rule 9)

	%eof           accept


State 34

	%start_pVarval -> Varval .                          (rule 8)

	%eof           accept


State 35

	Varname -> ObsIdent .                               (rule 47)

	'@@@'          reduce using rule 47
	'NULL'         reduce using rule 47
	L_doubl        reduce using rule 47
	L_integ        reduce using rule 47
	L_ObsIdent     reduce using rule 47
	L_ObsStr       reduce using rule 47
	%eof           reduce using rule 47


State 36

	%start_pVarname -> Varname .                        (rule 7)

	%eof           accept


State 37

	Taskname -> ObsIdent .                              (rule 46)

	'@@@'          reduce using rule 46
	%eof           reduce using rule 46


State 38

	%start_pTaskname -> Taskname .                      (rule 6)

	%eof           accept


State 39

	LMsg -> ObsStr . LMsg                               (rule 44)

	'@@@'          reduce using rule 45
	L_ObsStr       shift, and enter state 25
	%eof           reduce using rule 45

	ObsStr         goto state 39
	LMsg           goto state 75

State 40

	%start_pLMsg -> LMsg .                              (rule 5)

	%eof           accept


State 41

	Args -> Double . Args                               (rule 42)

	'@@@'          reduce using rule 43
	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsStr       shift, and enter state 25
	%eof           reduce using rule 43

	Double         goto state 41
	Integer        goto state 42
	ObsStr         goto state 43
	Args           goto state 74

State 42

	Args -> Integer . Args                              (rule 41)

	'@@@'          reduce using rule 43
	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsStr       shift, and enter state 25
	%eof           reduce using rule 43

	Double         goto state 41
	Integer        goto state 42
	ObsStr         goto state 43
	Args           goto state 73

State 43

	Args -> ObsStr . Args                               (rule 40)

	'@@@'          reduce using rule 43
	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsStr       shift, and enter state 25
	%eof           reduce using rule 43

	Double         goto state 41
	Integer        goto state 42
	ObsStr         goto state 43
	Args           goto state 72

State 44

	%start_pArgs -> Args .                              (rule 4)

	%eof           accept


State 45

	%start_pEnd -> End .                                (rule 3)

	%eof           accept


State 46

	End -> '@@@' . ThreadId 'END' Varname               (rule 39)

	L_integ        shift, and enter state 23

	Integer        goto state 26
	ThreadId       goto state 71

State 47

	%start_pScalar -> Scalar .                          (rule 2)

	%eof           accept


State 48

	Scalar -> End .                                     (rule 37)

	'@@@'          reduce using rule 37
	%eof           reduce using rule 37


State 49

	Scalar -> '@@@' . ThreadId 'SCALAR' '_' Varval Scalar    (rule 38)
	End -> '@@@' . ThreadId 'END' Varname               (rule 39)

	L_integ        shift, and enter state 23

	Integer        goto state 26
	ThreadId       goto state 70

State 50

	%start_pObs -> Obs .                                (rule 1)

	%eof           accept


State 51

	Obs -> ThreadId . 'NAME' ObsIdent                   (rule 20)
	Obs -> ThreadId . 'LOG' LMsg                        (rule 21)
	Obs -> ThreadId . 'INIT'                            (rule 22)
	Obs -> ThreadId . 'TASK' Taskname                   (rule 23)
	Obs -> ThreadId . 'SIGNAL' Integer                  (rule 24)
	Obs -> ThreadId . 'DEF' Varname Varval              (rule 25)
	Obs -> ThreadId . 'DECL' Typename Varname           (rule 26)
	Obs -> ThreadId . 'DECL' Typename Varname Varval    (rule 27)
	Obs -> ThreadId . 'DCLARRAY' Typename Varname SizeDcl    (rule 28)
	Obs -> ThreadId . 'CALL' ObsIdent Args              (rule 29)
	Obs -> ThreadId . 'STATE' Integer State             (rule 30)
	Obs -> ThreadId . 'STRUCT' Varname                  (rule 31)
	Obs -> ThreadId . 'SEQ' Varname Scalar              (rule 32)
	Obs -> ThreadId . 'PTR' Varname Varval              (rule 33)
	Obs -> ThreadId . 'SCALAR' Varname Varval           (rule 34)
	Obs -> ThreadId . 'SCALAR' Varname Varindex Varval    (rule 35)
	Obs -> ThreadId . 'END' Varname                     (rule 36)

	'CALL'         shift, and enter state 55
	'DCLARRAY'     shift, and enter state 56
	'DECL'         shift, and enter state 57
	'DEF'          shift, and enter state 58
	'END'          shift, and enter state 59
	'INIT'         shift, and enter state 60
	'LOG'          shift, and enter state 61
	'NAME'         shift, and enter state 62
	'PTR'          shift, and enter state 63
	'SCALAR'       shift, and enter state 64
	'SEQ'          shift, and enter state 65
	'SIGNAL'       shift, and enter state 66
	'STATE'        shift, and enter state 67
	'STRUCT'       shift, and enter state 68
	'TASK'         shift, and enter state 69


State 52

	%start_pObsList -> ObsList .                        (rule 0)

	%eof           accept


State 53

	ObsList -> '@@@' . Obs ObsList                      (rule 18)
	ObsList -> '@@@' . Obs                              (rule 19)

	L_integ        shift, and enter state 23

	Integer        goto state 26
	Obs            goto state 54
	ThreadId       goto state 51

State 54

	ObsList -> '@@@' Obs . ObsList                      (rule 18)
	ObsList -> '@@@' Obs .                              (rule 19)

	'@@@'          shift, and enter state 53
	%eof           reduce using rule 19

	ObsList        goto state 92

State 55

	Obs -> ThreadId 'CALL' . ObsIdent Args              (rule 29)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 91

State 56

	Obs -> ThreadId 'DCLARRAY' . Typename Varname SizeDcl    (rule 28)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 32
	Typename       goto state 90

State 57

	Obs -> ThreadId 'DECL' . Typename Varname           (rule 26)
	Obs -> ThreadId 'DECL' . Typename Varname Varval    (rule 27)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 32
	Typename       goto state 89

State 58

	Obs -> ThreadId 'DEF' . Varname Varval              (rule 25)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 35
	Varname        goto state 88

State 59

	Obs -> ThreadId 'END' . Varname                     (rule 36)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 35
	Varname        goto state 87

State 60

	Obs -> ThreadId 'INIT' .                            (rule 22)

	'@@@'          reduce using rule 22
	%eof           reduce using rule 22


State 61

	Obs -> ThreadId 'LOG' . LMsg                        (rule 21)

	'@@@'          reduce using rule 45
	L_ObsStr       shift, and enter state 25
	%eof           reduce using rule 45

	ObsStr         goto state 39
	LMsg           goto state 86

State 62

	Obs -> ThreadId 'NAME' . ObsIdent                   (rule 20)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 85

State 63

	Obs -> ThreadId 'PTR' . Varname Varval              (rule 33)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 35
	Varname        goto state 84

State 64

	Obs -> ThreadId 'SCALAR' . Varname Varval           (rule 34)
	Obs -> ThreadId 'SCALAR' . Varname Varindex Varval    (rule 35)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 35
	Varname        goto state 83

State 65

	Obs -> ThreadId 'SEQ' . Varname Scalar              (rule 32)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 35
	Varname        goto state 82

State 66

	Obs -> ThreadId 'SIGNAL' . Integer                  (rule 24)

	L_integ        shift, and enter state 23

	Integer        goto state 81

State 67

	Obs -> ThreadId 'STATE' . Integer State             (rule 30)

	L_integ        shift, and enter state 23

	Integer        goto state 80

State 68

	Obs -> ThreadId 'STRUCT' . Varname                  (rule 31)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 35
	Varname        goto state 79

State 69

	Obs -> ThreadId 'TASK' . Taskname                   (rule 23)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 37
	Taskname       goto state 78

State 70

	Scalar -> '@@@' ThreadId . 'SCALAR' '_' Varval Scalar    (rule 38)
	End -> '@@@' ThreadId . 'END' Varname               (rule 39)

	'END'          shift, and enter state 76
	'SCALAR'       shift, and enter state 77


State 71

	End -> '@@@' ThreadId . 'END' Varname               (rule 39)

	'END'          shift, and enter state 76


State 72

	Args -> ObsStr Args .                               (rule 40)

	'@@@'          reduce using rule 40
	%eof           reduce using rule 40


State 73

	Args -> Integer Args .                              (rule 41)

	'@@@'          reduce using rule 41
	%eof           reduce using rule 41


State 74

	Args -> Double Args .                               (rule 42)

	'@@@'          reduce using rule 42
	%eof           reduce using rule 42


State 75

	LMsg -> ObsStr LMsg .                               (rule 44)

	'@@@'          reduce using rule 44
	%eof           reduce using rule 44


State 76

	End -> '@@@' ThreadId 'END' . Varname               (rule 39)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 35
	Varname        goto state 104

State 77

	Scalar -> '@@@' ThreadId 'SCALAR' . '_' Varval Scalar    (rule 38)

	'_'            shift, and enter state 103


State 78

	Obs -> ThreadId 'TASK' Taskname .                   (rule 23)

	'@@@'          reduce using rule 23
	%eof           reduce using rule 23


State 79

	Obs -> ThreadId 'STRUCT' Varname .                  (rule 31)

	'@@@'          reduce using rule 31
	%eof           reduce using rule 31


State 80

	Obs -> ThreadId 'STATE' Integer . State             (rule 30)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 30
	State          goto state 102

State 81

	Obs -> ThreadId 'SIGNAL' Integer .                  (rule 24)

	'@@@'          reduce using rule 24
	%eof           reduce using rule 24


State 82

	Obs -> ThreadId 'SEQ' Varname . Scalar              (rule 32)

	'@@@'          shift, and enter state 49

	Scalar         goto state 101
	End            goto state 48

State 83

	Obs -> ThreadId 'SCALAR' Varname . Varval           (rule 34)
	Obs -> ThreadId 'SCALAR' Varname . Varindex Varval    (rule 35)

	'NULL'         shift, and enter state 22
	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsStr       shift, and enter state 25

	Double         goto state 16
	Integer        goto state 98
	ObsStr         goto state 19
	Varval         goto state 99
	Varindex       goto state 100

State 84

	Obs -> ThreadId 'PTR' Varname . Varval              (rule 33)

	'NULL'         shift, and enter state 22
	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsStr       shift, and enter state 25

	Double         goto state 16
	Integer        goto state 17
	ObsStr         goto state 19
	Varval         goto state 97

State 85

	Obs -> ThreadId 'NAME' ObsIdent .                   (rule 20)

	'@@@'          reduce using rule 20
	%eof           reduce using rule 20


State 86

	Obs -> ThreadId 'LOG' LMsg .                        (rule 21)

	'@@@'          reduce using rule 21
	%eof           reduce using rule 21


State 87

	Obs -> ThreadId 'END' Varname .                     (rule 36)

	'@@@'          reduce using rule 36
	%eof           reduce using rule 36


State 88

	Obs -> ThreadId 'DEF' Varname . Varval              (rule 25)

	'NULL'         shift, and enter state 22
	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsStr       shift, and enter state 25

	Double         goto state 16
	Integer        goto state 17
	ObsStr         goto state 19
	Varval         goto state 96

State 89

	Obs -> ThreadId 'DECL' Typename . Varname           (rule 26)
	Obs -> ThreadId 'DECL' Typename . Varname Varval    (rule 27)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 35
	Varname        goto state 95

State 90

	Obs -> ThreadId 'DCLARRAY' Typename . Varname SizeDcl    (rule 28)

	L_ObsIdent     shift, and enter state 24

	ObsIdent       goto state 35
	Varname        goto state 94

State 91

	Obs -> ThreadId 'CALL' ObsIdent . Args              (rule 29)

	'@@@'          reduce using rule 43
	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsStr       shift, and enter state 25
	%eof           reduce using rule 43

	Double         goto state 41
	Integer        goto state 42
	ObsStr         goto state 43
	Args           goto state 93

State 92

	ObsList -> '@@@' Obs ObsList .                      (rule 18)

	%eof           reduce using rule 18


State 93

	Obs -> ThreadId 'CALL' ObsIdent Args .              (rule 29)

	'@@@'          reduce using rule 29
	%eof           reduce using rule 29


State 94

	Obs -> ThreadId 'DCLARRAY' Typename Varname . SizeDcl    (rule 28)

	'NULL'         shift, and enter state 22
	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsIdent     shift, and enter state 24
	L_ObsStr       shift, and enter state 25

	Double         goto state 16
	Integer        goto state 17
	ObsIdent       goto state 18
	ObsStr         goto state 19
	Varval         goto state 20
	SizeDcl        goto state 108

State 95

	Obs -> ThreadId 'DECL' Typename Varname .           (rule 26)
	Obs -> ThreadId 'DECL' Typename Varname . Varval    (rule 27)

	'@@@'          reduce using rule 26
	'NULL'         shift, and enter state 22
	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsStr       shift, and enter state 25
	%eof           reduce using rule 26

	Double         goto state 16
	Integer        goto state 17
	ObsStr         goto state 19
	Varval         goto state 107

State 96

	Obs -> ThreadId 'DEF' Varname Varval .              (rule 25)

	'@@@'          reduce using rule 25
	%eof           reduce using rule 25


State 97

	Obs -> ThreadId 'PTR' Varname Varval .              (rule 33)

	'@@@'          reduce using rule 33
	%eof           reduce using rule 33


State 98

	Varval -> Integer .                                 (rule 48)
	Varindex -> Integer .                               (rule 54)

	'@@@'          reduce using rule 48
	'NULL'         reduce using rule 54
	L_doubl        reduce using rule 54
	L_integ        reduce using rule 54
	L_ObsStr       reduce using rule 54
	%eof           reduce using rule 48


State 99

	Obs -> ThreadId 'SCALAR' Varname Varval .           (rule 34)

	'@@@'          reduce using rule 34
	%eof           reduce using rule 34


State 100

	Obs -> ThreadId 'SCALAR' Varname Varindex . Varval    (rule 35)

	'NULL'         shift, and enter state 22
	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsStr       shift, and enter state 25

	Double         goto state 16
	Integer        goto state 17
	ObsStr         goto state 19
	Varval         goto state 106

State 101

	Obs -> ThreadId 'SEQ' Varname Scalar .              (rule 32)

	'@@@'          reduce using rule 32
	%eof           reduce using rule 32


State 102

	Obs -> ThreadId 'STATE' Integer State .             (rule 30)

	'@@@'          reduce using rule 30
	%eof           reduce using rule 30


State 103

	Scalar -> '@@@' ThreadId 'SCALAR' '_' . Varval Scalar    (rule 38)

	'NULL'         shift, and enter state 22
	L_doubl        shift, and enter state 15
	L_integ        shift, and enter state 23
	L_ObsStr       shift, and enter state 25

	Double         goto state 16
	Integer        goto state 17
	ObsStr         goto state 19
	Varval         goto state 105

State 104

	End -> '@@@' ThreadId 'END' Varname .               (rule 39)

	'@@@'          reduce using rule 39
	%eof           reduce using rule 39


State 105

	Scalar -> '@@@' ThreadId 'SCALAR' '_' Varval . Scalar    (rule 38)

	'@@@'          shift, and enter state 49

	Scalar         goto state 109
	End            goto state 48

State 106

	Obs -> ThreadId 'SCALAR' Varname Varindex Varval .    (rule 35)

	'@@@'          reduce using rule 35
	%eof           reduce using rule 35


State 107

	Obs -> ThreadId 'DECL' Typename Varname Varval .    (rule 27)

	'@@@'          reduce using rule 27
	%eof           reduce using rule 27


State 108

	Obs -> ThreadId 'DCLARRAY' Typename Varname SizeDcl .    (rule 28)

	'@@@'          reduce using rule 28
	%eof           reduce using rule 28


State 109

	Scalar -> '@@@' ThreadId 'SCALAR' '_' Varval Scalar .    (rule 38)

	'@@@'          reduce using rule 38
	%eof           reduce using rule 38


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 58
Number of terminals: 22
Number of non-terminals: 32
Number of states: 110
