-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Obs/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pListObs -> ListObs                         (0)
	%start_pObs -> Obs                                 (1)
	%start_pScalar -> Scalar                           (2)
	%start_pEnd -> End                                 (3)
	%start_pArgs -> Args                               (4)
	%start_pTaskname -> Taskname                       (5)
	%start_pVarname -> Varname                         (6)
	%start_pVarval -> Varval                           (7)
	%start_pTypename -> Typename                       (8)
	%start_pStateObs -> StateObs                       (9)
	%start_pVarindex -> Varindex                       (10)
	%start_pThreadId -> ThreadId                       (11)
	%start_pSizeDcl -> SizeDcl                         (12)
	Double -> L_doubl                                  (13)
	Integer -> L_integ                                 (14)
	ObsIdent -> L_ObsIdent                             (15)
	ObsStr -> L_ObsStr                                 (16)
	ListObs -> '@@@' Obs ListObs                       (17)
	ListObs -> '@@@' Obs                               (18)
	Obs -> ThreadId 'NAME' ObsIdent                    (19)
	Obs -> ThreadId 'INIT'                             (20)
	Obs -> ThreadId 'TASK' Taskname                    (21)
	Obs -> ThreadId 'SIGNAL' Integer                   (22)
	Obs -> ThreadId 'DEF' Varname Varval               (23)
	Obs -> ThreadId 'DECL' Typename Varname            (24)
	Obs -> ThreadId 'DECL' Typename Varname Varval     (25)
	Obs -> ThreadId 'DCLARRAY' Typename Varname SizeDcl   (26)
	Obs -> ThreadId 'CALL' ObsIdent Args               (27)
	Obs -> ThreadId 'STATE' Integer StateObs           (28)
	Obs -> ThreadId 'STRUCT' Varname                   (29)
	Obs -> ThreadId 'SEQ' Varname Scalar               (30)
	Obs -> ThreadId 'PTR' Varname Varval               (31)
	Obs -> ThreadId 'SCALAR' Varname Varval            (32)
	Obs -> ThreadId 'SCALAR' Varname Varindex Varval   (33)
	Obs -> ThreadId 'END' Varname                      (34)
	Scalar -> End                                      (35)
	Scalar -> '@@@' ThreadId 'SCALAR' '_' Varval Scalar   (36)
	End -> '@@@' ThreadId 'END' Varname                (37)
	Args -> ObsStr Args                                (38)
	Args -> Integer Args                               (39)
	Args -> Double Args                                (40)
	Args ->                                            (41)
	Taskname -> ObsIdent                               (42)
	Varname -> ObsIdent                                (43)
	Varval -> Integer                                  (44)
	Varval -> Double                                   (45)
	Varval -> 'NULL'                                   (46)
	Varval -> ObsStr                                   (47)
	Typename -> ObsIdent                               (48)
	StateObs -> ObsIdent                               (49)
	Varindex -> Integer                                (50)
	ThreadId -> Integer                                (51)
	SizeDcl -> Varval                                  (52)
	SizeDcl -> ObsIdent                                (53)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'@@@'          { PT _ (TS _ 1) }
	'CALL'         { PT _ (TS _ 2) }
	'DCLARRAY'     { PT _ (TS _ 3) }
	'DECL'         { PT _ (TS _ 4) }
	'DEF'          { PT _ (TS _ 5) }
	'END'          { PT _ (TS _ 6) }
	'INIT'         { PT _ (TS _ 7) }
	'NAME'         { PT _ (TS _ 8) }
	'NULL'         { PT _ (TS _ 9) }
	'PTR'          { PT _ (TS _ 10) }
	'SCALAR'       { PT _ (TS _ 11) }
	'SEQ'          { PT _ (TS _ 12) }
	'SIGNAL'       { PT _ (TS _ 13) }
	'STATE'        { PT _ (TS _ 14) }
	'STRUCT'       { PT _ (TS _ 15) }
	'TASK'         { PT _ (TS _ 16) }
	'_'            { PT _ (TS _ 17) }
	L_doubl        { PT _ (TD $$) }
	L_integ        { PT _ (TI $$) }
	L_ObsIdent     { PT _ (T_ObsIdent $$) }
	L_ObsStr       { PT _ (T_ObsStr $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pListObs rule  0
	%start_pObs     rule  1
	%start_pScalar  rule  2
	%start_pEnd     rule  3
	%start_pArgs    rule  4
	%start_pTaskname rule  5
	%start_pVarname rule  6
	%start_pVarval  rule  7
	%start_pTypename rule  8
	%start_pStateObs rule  9
	%start_pVarindex rule  10
	%start_pThreadId rule  11
	%start_pSizeDcl rule  12
	Double          rule  13
	Integer         rule  14
	ObsIdent        rule  15
	ObsStr          rule  16
	ListObs         rules 17, 18
	Obs             rules 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34
	Scalar          rules 35, 36
	End             rule  37
	Args            rules 38, 39, 40, 41
	Taskname        rule  42
	Varname         rule  43
	Varval          rules 44, 45, 46, 47
	Typename        rule  48
	StateObs        rule  49
	Varindex        rule  50
	ThreadId        rule  51
	SizeDcl         rules 52, 53

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pListObs -> . ListObs                        (rule 0)

	'@@@'          shift, and enter state 50

	ListObs        goto state 49

State 1

	%start_pObs -> . Obs                                (rule 1)

	L_integ        shift, and enter state 22

	Integer        goto state 25
	Obs            goto state 47
	ThreadId       goto state 48

State 2

	%start_pScalar -> . Scalar                          (rule 2)

	'@@@'          shift, and enter state 46

	Scalar         goto state 44
	End            goto state 45

State 3

	%start_pEnd -> . End                                (rule 3)

	'@@@'          shift, and enter state 43

	End            goto state 42

State 4

	%start_pArgs -> . Args                              (rule 4)

	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsStr       shift, and enter state 24
	%eof           reduce using rule 41

	Double         goto state 38
	Integer        goto state 39
	ObsStr         goto state 40
	Args           goto state 41

State 5

	%start_pTaskname -> . Taskname                      (rule 5)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 36
	Taskname       goto state 37

State 6

	%start_pVarname -> . Varname                        (rule 6)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 34
	Varname        goto state 35

State 7

	%start_pVarval -> . Varval                          (rule 7)

	'NULL'         shift, and enter state 21
	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsStr       shift, and enter state 24

	Double         goto state 15
	Integer        goto state 16
	ObsStr         goto state 18
	Varval         goto state 33

State 8

	%start_pTypename -> . Typename                      (rule 8)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 31
	Typename       goto state 32

State 9

	%start_pStateObs -> . StateObs                      (rule 9)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 29
	StateObs       goto state 30

State 10

	%start_pVarindex -> . Varindex                      (rule 10)

	L_integ        shift, and enter state 22

	Integer        goto state 27
	Varindex       goto state 28

State 11

	%start_pThreadId -> . ThreadId                      (rule 11)

	L_integ        shift, and enter state 22

	Integer        goto state 25
	ThreadId       goto state 26

State 12

	%start_pSizeDcl -> . SizeDcl                        (rule 12)

	'NULL'         shift, and enter state 21
	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsIdent     shift, and enter state 23
	L_ObsStr       shift, and enter state 24

	Double         goto state 15
	Integer        goto state 16
	ObsIdent       goto state 17
	ObsStr         goto state 18
	Varval         goto state 19
	SizeDcl        goto state 20

State 13

	Double -> . L_doubl                                 (rule 13)

	L_doubl        shift, and enter state 14


State 14

	Double -> L_doubl .                                 (rule 13)

	'@@@'          reduce using rule 13
	L_doubl        reduce using rule 13
	L_integ        reduce using rule 13
	L_ObsStr       reduce using rule 13
	%eof           reduce using rule 13


State 15

	Varval -> Double .                                  (rule 45)

	'@@@'          reduce using rule 45
	%eof           reduce using rule 45


State 16

	Varval -> Integer .                                 (rule 44)

	'@@@'          reduce using rule 44
	%eof           reduce using rule 44


State 17

	SizeDcl -> ObsIdent .                               (rule 53)

	'@@@'          reduce using rule 53
	%eof           reduce using rule 53


State 18

	Varval -> ObsStr .                                  (rule 47)

	'@@@'          reduce using rule 47
	%eof           reduce using rule 47


State 19

	SizeDcl -> Varval .                                 (rule 52)

	'@@@'          reduce using rule 52
	%eof           reduce using rule 52


State 20

	%start_pSizeDcl -> SizeDcl .                        (rule 12)

	%eof           accept


State 21

	Varval -> 'NULL' .                                  (rule 46)

	'@@@'          reduce using rule 46
	%eof           reduce using rule 46


State 22

	Integer -> L_integ .                                (rule 14)

	'@@@'          reduce using rule 14
	'CALL'         reduce using rule 14
	'DCLARRAY'     reduce using rule 14
	'DECL'         reduce using rule 14
	'DEF'          reduce using rule 14
	'END'          reduce using rule 14
	'INIT'         reduce using rule 14
	'NAME'         reduce using rule 14
	'NULL'         reduce using rule 14
	'PTR'          reduce using rule 14
	'SCALAR'       reduce using rule 14
	'SEQ'          reduce using rule 14
	'SIGNAL'       reduce using rule 14
	'STATE'        reduce using rule 14
	'STRUCT'       reduce using rule 14
	'TASK'         reduce using rule 14
	L_doubl        reduce using rule 14
	L_integ        reduce using rule 14
	L_ObsIdent     reduce using rule 14
	L_ObsStr       reduce using rule 14
	%eof           reduce using rule 14


State 23

	ObsIdent -> L_ObsIdent .                            (rule 15)

	'@@@'          reduce using rule 15
	'NULL'         reduce using rule 15
	L_doubl        reduce using rule 15
	L_integ        reduce using rule 15
	L_ObsIdent     reduce using rule 15
	L_ObsStr       reduce using rule 15
	%eof           reduce using rule 15


State 24

	ObsStr -> L_ObsStr .                                (rule 16)

	'@@@'          reduce using rule 16
	L_doubl        reduce using rule 16
	L_integ        reduce using rule 16
	L_ObsStr       reduce using rule 16
	%eof           reduce using rule 16


State 25

	ThreadId -> Integer .                               (rule 51)

	'CALL'         reduce using rule 51
	'DCLARRAY'     reduce using rule 51
	'DECL'         reduce using rule 51
	'DEF'          reduce using rule 51
	'END'          reduce using rule 51
	'INIT'         reduce using rule 51
	'NAME'         reduce using rule 51
	'PTR'          reduce using rule 51
	'SCALAR'       reduce using rule 51
	'SEQ'          reduce using rule 51
	'SIGNAL'       reduce using rule 51
	'STATE'        reduce using rule 51
	'STRUCT'       reduce using rule 51
	'TASK'         reduce using rule 51
	%eof           reduce using rule 51


State 26

	%start_pThreadId -> ThreadId .                      (rule 11)

	%eof           accept


State 27

	Varindex -> Integer .                               (rule 50)

	%eof           reduce using rule 50


State 28

	%start_pVarindex -> Varindex .                      (rule 10)

	%eof           accept


State 29

	StateObs -> ObsIdent .                              (rule 49)

	'@@@'          reduce using rule 49
	%eof           reduce using rule 49


State 30

	%start_pStateObs -> StateObs .                      (rule 9)

	%eof           accept


State 31

	Typename -> ObsIdent .                              (rule 48)

	L_ObsIdent     reduce using rule 48
	%eof           reduce using rule 48


State 32

	%start_pTypename -> Typename .                      (rule 8)

	%eof           accept


State 33

	%start_pVarval -> Varval .                          (rule 7)

	%eof           accept


State 34

	Varname -> ObsIdent .                               (rule 43)

	'@@@'          reduce using rule 43
	'NULL'         reduce using rule 43
	L_doubl        reduce using rule 43
	L_integ        reduce using rule 43
	L_ObsIdent     reduce using rule 43
	L_ObsStr       reduce using rule 43
	%eof           reduce using rule 43


State 35

	%start_pVarname -> Varname .                        (rule 6)

	%eof           accept


State 36

	Taskname -> ObsIdent .                              (rule 42)

	'@@@'          reduce using rule 42
	%eof           reduce using rule 42


State 37

	%start_pTaskname -> Taskname .                      (rule 5)

	%eof           accept


State 38

	Args -> Double . Args                               (rule 40)

	'@@@'          reduce using rule 41
	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsStr       shift, and enter state 24
	%eof           reduce using rule 41

	Double         goto state 38
	Integer        goto state 39
	ObsStr         goto state 40
	Args           goto state 70

State 39

	Args -> Integer . Args                              (rule 39)

	'@@@'          reduce using rule 41
	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsStr       shift, and enter state 24
	%eof           reduce using rule 41

	Double         goto state 38
	Integer        goto state 39
	ObsStr         goto state 40
	Args           goto state 69

State 40

	Args -> ObsStr . Args                               (rule 38)

	'@@@'          reduce using rule 41
	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsStr       shift, and enter state 24
	%eof           reduce using rule 41

	Double         goto state 38
	Integer        goto state 39
	ObsStr         goto state 40
	Args           goto state 68

State 41

	%start_pArgs -> Args .                              (rule 4)

	%eof           accept


State 42

	%start_pEnd -> End .                                (rule 3)

	%eof           accept


State 43

	End -> '@@@' . ThreadId 'END' Varname               (rule 37)

	L_integ        shift, and enter state 22

	Integer        goto state 25
	ThreadId       goto state 67

State 44

	%start_pScalar -> Scalar .                          (rule 2)

	%eof           accept


State 45

	Scalar -> End .                                     (rule 35)

	'@@@'          reduce using rule 35
	%eof           reduce using rule 35


State 46

	Scalar -> '@@@' . ThreadId 'SCALAR' '_' Varval Scalar    (rule 36)
	End -> '@@@' . ThreadId 'END' Varname               (rule 37)

	L_integ        shift, and enter state 22

	Integer        goto state 25
	ThreadId       goto state 66

State 47

	%start_pObs -> Obs .                                (rule 1)

	%eof           accept


State 48

	Obs -> ThreadId . 'NAME' ObsIdent                   (rule 19)
	Obs -> ThreadId . 'INIT'                            (rule 20)
	Obs -> ThreadId . 'TASK' Taskname                   (rule 21)
	Obs -> ThreadId . 'SIGNAL' Integer                  (rule 22)
	Obs -> ThreadId . 'DEF' Varname Varval              (rule 23)
	Obs -> ThreadId . 'DECL' Typename Varname           (rule 24)
	Obs -> ThreadId . 'DECL' Typename Varname Varval    (rule 25)
	Obs -> ThreadId . 'DCLARRAY' Typename Varname SizeDcl    (rule 26)
	Obs -> ThreadId . 'CALL' ObsIdent Args              (rule 27)
	Obs -> ThreadId . 'STATE' Integer StateObs          (rule 28)
	Obs -> ThreadId . 'STRUCT' Varname                  (rule 29)
	Obs -> ThreadId . 'SEQ' Varname Scalar              (rule 30)
	Obs -> ThreadId . 'PTR' Varname Varval              (rule 31)
	Obs -> ThreadId . 'SCALAR' Varname Varval           (rule 32)
	Obs -> ThreadId . 'SCALAR' Varname Varindex Varval    (rule 33)
	Obs -> ThreadId . 'END' Varname                     (rule 34)

	'CALL'         shift, and enter state 52
	'DCLARRAY'     shift, and enter state 53
	'DECL'         shift, and enter state 54
	'DEF'          shift, and enter state 55
	'END'          shift, and enter state 56
	'INIT'         shift, and enter state 57
	'NAME'         shift, and enter state 58
	'PTR'          shift, and enter state 59
	'SCALAR'       shift, and enter state 60
	'SEQ'          shift, and enter state 61
	'SIGNAL'       shift, and enter state 62
	'STATE'        shift, and enter state 63
	'STRUCT'       shift, and enter state 64
	'TASK'         shift, and enter state 65


State 49

	%start_pListObs -> ListObs .                        (rule 0)

	%eof           accept


State 50

	ListObs -> '@@@' . Obs ListObs                      (rule 17)
	ListObs -> '@@@' . Obs                              (rule 18)

	L_integ        shift, and enter state 22

	Integer        goto state 25
	Obs            goto state 51
	ThreadId       goto state 48

State 51

	ListObs -> '@@@' Obs . ListObs                      (rule 17)
	ListObs -> '@@@' Obs .                              (rule 18)

	'@@@'          shift, and enter state 50
	%eof           reduce using rule 18

	ListObs        goto state 86

State 52

	Obs -> ThreadId 'CALL' . ObsIdent Args              (rule 27)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 85

State 53

	Obs -> ThreadId 'DCLARRAY' . Typename Varname SizeDcl    (rule 26)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 31
	Typename       goto state 84

State 54

	Obs -> ThreadId 'DECL' . Typename Varname           (rule 24)
	Obs -> ThreadId 'DECL' . Typename Varname Varval    (rule 25)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 31
	Typename       goto state 83

State 55

	Obs -> ThreadId 'DEF' . Varname Varval              (rule 23)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 34
	Varname        goto state 82

State 56

	Obs -> ThreadId 'END' . Varname                     (rule 34)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 34
	Varname        goto state 81

State 57

	Obs -> ThreadId 'INIT' .                            (rule 20)

	'@@@'          reduce using rule 20
	%eof           reduce using rule 20


State 58

	Obs -> ThreadId 'NAME' . ObsIdent                   (rule 19)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 80

State 59

	Obs -> ThreadId 'PTR' . Varname Varval              (rule 31)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 34
	Varname        goto state 79

State 60

	Obs -> ThreadId 'SCALAR' . Varname Varval           (rule 32)
	Obs -> ThreadId 'SCALAR' . Varname Varindex Varval    (rule 33)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 34
	Varname        goto state 78

State 61

	Obs -> ThreadId 'SEQ' . Varname Scalar              (rule 30)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 34
	Varname        goto state 77

State 62

	Obs -> ThreadId 'SIGNAL' . Integer                  (rule 22)

	L_integ        shift, and enter state 22

	Integer        goto state 76

State 63

	Obs -> ThreadId 'STATE' . Integer StateObs          (rule 28)

	L_integ        shift, and enter state 22

	Integer        goto state 75

State 64

	Obs -> ThreadId 'STRUCT' . Varname                  (rule 29)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 34
	Varname        goto state 74

State 65

	Obs -> ThreadId 'TASK' . Taskname                   (rule 21)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 36
	Taskname       goto state 73

State 66

	Scalar -> '@@@' ThreadId . 'SCALAR' '_' Varval Scalar    (rule 36)
	End -> '@@@' ThreadId . 'END' Varname               (rule 37)

	'END'          shift, and enter state 71
	'SCALAR'       shift, and enter state 72


State 67

	End -> '@@@' ThreadId . 'END' Varname               (rule 37)

	'END'          shift, and enter state 71


State 68

	Args -> ObsStr Args .                               (rule 38)

	'@@@'          reduce using rule 38
	%eof           reduce using rule 38


State 69

	Args -> Integer Args .                              (rule 39)

	'@@@'          reduce using rule 39
	%eof           reduce using rule 39


State 70

	Args -> Double Args .                               (rule 40)

	'@@@'          reduce using rule 40
	%eof           reduce using rule 40


State 71

	End -> '@@@' ThreadId 'END' . Varname               (rule 37)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 34
	Varname        goto state 98

State 72

	Scalar -> '@@@' ThreadId 'SCALAR' . '_' Varval Scalar    (rule 36)

	'_'            shift, and enter state 97


State 73

	Obs -> ThreadId 'TASK' Taskname .                   (rule 21)

	'@@@'          reduce using rule 21
	%eof           reduce using rule 21


State 74

	Obs -> ThreadId 'STRUCT' Varname .                  (rule 29)

	'@@@'          reduce using rule 29
	%eof           reduce using rule 29


State 75

	Obs -> ThreadId 'STATE' Integer . StateObs          (rule 28)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 29
	StateObs       goto state 96

State 76

	Obs -> ThreadId 'SIGNAL' Integer .                  (rule 22)

	'@@@'          reduce using rule 22
	%eof           reduce using rule 22


State 77

	Obs -> ThreadId 'SEQ' Varname . Scalar              (rule 30)

	'@@@'          shift, and enter state 46

	Scalar         goto state 95
	End            goto state 45

State 78

	Obs -> ThreadId 'SCALAR' Varname . Varval           (rule 32)
	Obs -> ThreadId 'SCALAR' Varname . Varindex Varval    (rule 33)

	'NULL'         shift, and enter state 21
	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsStr       shift, and enter state 24

	Double         goto state 15
	Integer        goto state 92
	ObsStr         goto state 18
	Varval         goto state 93
	Varindex       goto state 94

State 79

	Obs -> ThreadId 'PTR' Varname . Varval              (rule 31)

	'NULL'         shift, and enter state 21
	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsStr       shift, and enter state 24

	Double         goto state 15
	Integer        goto state 16
	ObsStr         goto state 18
	Varval         goto state 91

State 80

	Obs -> ThreadId 'NAME' ObsIdent .                   (rule 19)

	'@@@'          reduce using rule 19
	%eof           reduce using rule 19


State 81

	Obs -> ThreadId 'END' Varname .                     (rule 34)

	'@@@'          reduce using rule 34
	%eof           reduce using rule 34


State 82

	Obs -> ThreadId 'DEF' Varname . Varval              (rule 23)

	'NULL'         shift, and enter state 21
	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsStr       shift, and enter state 24

	Double         goto state 15
	Integer        goto state 16
	ObsStr         goto state 18
	Varval         goto state 90

State 83

	Obs -> ThreadId 'DECL' Typename . Varname           (rule 24)
	Obs -> ThreadId 'DECL' Typename . Varname Varval    (rule 25)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 34
	Varname        goto state 89

State 84

	Obs -> ThreadId 'DCLARRAY' Typename . Varname SizeDcl    (rule 26)

	L_ObsIdent     shift, and enter state 23

	ObsIdent       goto state 34
	Varname        goto state 88

State 85

	Obs -> ThreadId 'CALL' ObsIdent . Args              (rule 27)

	'@@@'          reduce using rule 41
	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsStr       shift, and enter state 24
	%eof           reduce using rule 41

	Double         goto state 38
	Integer        goto state 39
	ObsStr         goto state 40
	Args           goto state 87

State 86

	ListObs -> '@@@' Obs ListObs .                      (rule 17)

	%eof           reduce using rule 17


State 87

	Obs -> ThreadId 'CALL' ObsIdent Args .              (rule 27)

	'@@@'          reduce using rule 27
	%eof           reduce using rule 27


State 88

	Obs -> ThreadId 'DCLARRAY' Typename Varname . SizeDcl    (rule 26)

	'NULL'         shift, and enter state 21
	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsIdent     shift, and enter state 23
	L_ObsStr       shift, and enter state 24

	Double         goto state 15
	Integer        goto state 16
	ObsIdent       goto state 17
	ObsStr         goto state 18
	Varval         goto state 19
	SizeDcl        goto state 102

State 89

	Obs -> ThreadId 'DECL' Typename Varname .           (rule 24)
	Obs -> ThreadId 'DECL' Typename Varname . Varval    (rule 25)

	'@@@'          reduce using rule 24
	'NULL'         shift, and enter state 21
	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsStr       shift, and enter state 24
	%eof           reduce using rule 24

	Double         goto state 15
	Integer        goto state 16
	ObsStr         goto state 18
	Varval         goto state 101

State 90

	Obs -> ThreadId 'DEF' Varname Varval .              (rule 23)

	'@@@'          reduce using rule 23
	%eof           reduce using rule 23


State 91

	Obs -> ThreadId 'PTR' Varname Varval .              (rule 31)

	'@@@'          reduce using rule 31
	%eof           reduce using rule 31


State 92

	Varval -> Integer .                                 (rule 44)
	Varindex -> Integer .                               (rule 50)

	'@@@'          reduce using rule 44
	'NULL'         reduce using rule 50
	L_doubl        reduce using rule 50
	L_integ        reduce using rule 50
	L_ObsStr       reduce using rule 50
	%eof           reduce using rule 44


State 93

	Obs -> ThreadId 'SCALAR' Varname Varval .           (rule 32)

	'@@@'          reduce using rule 32
	%eof           reduce using rule 32


State 94

	Obs -> ThreadId 'SCALAR' Varname Varindex . Varval    (rule 33)

	'NULL'         shift, and enter state 21
	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsStr       shift, and enter state 24

	Double         goto state 15
	Integer        goto state 16
	ObsStr         goto state 18
	Varval         goto state 100

State 95

	Obs -> ThreadId 'SEQ' Varname Scalar .              (rule 30)

	'@@@'          reduce using rule 30
	%eof           reduce using rule 30


State 96

	Obs -> ThreadId 'STATE' Integer StateObs .          (rule 28)

	'@@@'          reduce using rule 28
	%eof           reduce using rule 28


State 97

	Scalar -> '@@@' ThreadId 'SCALAR' '_' . Varval Scalar    (rule 36)

	'NULL'         shift, and enter state 21
	L_doubl        shift, and enter state 14
	L_integ        shift, and enter state 22
	L_ObsStr       shift, and enter state 24

	Double         goto state 15
	Integer        goto state 16
	ObsStr         goto state 18
	Varval         goto state 99

State 98

	End -> '@@@' ThreadId 'END' Varname .               (rule 37)

	'@@@'          reduce using rule 37
	%eof           reduce using rule 37


State 99

	Scalar -> '@@@' ThreadId 'SCALAR' '_' Varval . Scalar    (rule 36)

	'@@@'          shift, and enter state 46

	Scalar         goto state 103
	End            goto state 45

State 100

	Obs -> ThreadId 'SCALAR' Varname Varindex Varval .    (rule 33)

	'@@@'          reduce using rule 33
	%eof           reduce using rule 33


State 101

	Obs -> ThreadId 'DECL' Typename Varname Varval .    (rule 25)

	'@@@'          reduce using rule 25
	%eof           reduce using rule 25


State 102

	Obs -> ThreadId 'DCLARRAY' Typename Varname SizeDcl .    (rule 26)

	'@@@'          reduce using rule 26
	%eof           reduce using rule 26


State 103

	Scalar -> '@@@' ThreadId 'SCALAR' '_' Varval Scalar .    (rule 36)

	'@@@'          reduce using rule 36
	%eof           reduce using rule 36


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 54
Number of terminals: 21
Number of non-terminals: 30
Number of states: 104
