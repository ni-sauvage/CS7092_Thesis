-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Obs/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pListObs -> ListObs                         (0)
	%start_pName -> Name                               (1)
	%start_pArgs -> Args                               (2)
	%start_pLMsg -> LMsg                               (3)
	%start_pTaskname -> Taskname                       (4)
	%start_pVarname -> Varname                         (5)
	%start_pVarval -> Varval                           (6)
	%start_pTypename -> Typename                       (7)
	%start_pState -> State                             (8)
	%start_pVarindex -> Varindex                       (9)
	%start_pObs -> Obs                                 (10)
	%start_pScalar -> Scalar                           (11)
	%start_pEnd -> End                                 (12)
	Integer -> L_integ                                 (13)
	ObsString -> L_ObsString                           (14)
	ListObs ->                                         (15)
	ListObs -> Obs ListObs                             (16)
	Name -> ObsString                                  (17)
	Args -> ObsString                                  (18)
	Args -> ObsString Args                             (19)
	LMsg -> ObsString                                  (20)
	LMsg -> ObsString LMsg                             (21)
	Taskname -> ObsString                              (22)
	Varname -> ObsString                               (23)
	Varval -> ObsString                                (24)
	Typename -> ObsString                              (25)
	State -> ObsString                                 (26)
	Varindex -> Integer                                (27)
	Obs -> '@@@' Integer 'NAME' Name                   (28)
	Obs -> '@@@' Integer 'LOG' LMsg                    (29)
	Obs -> '@@@' Integer 'INIT'                        (30)
	Obs -> '@@@' Integer 'TASK' Taskname               (31)
	Obs -> '@@@' Integer 'SIGNAL' Integer              (32)
	Obs -> '@@@' Integer 'DEF' Varname Varval          (33)
	Obs -> '@@@' Integer 'DECL' Typename Varname Varval   (34)
	Obs -> '@@@' Integer 'DECL' Typename Varname       (35)
	Obs -> '@@@' Integer 'DCLARRAY' Typename Varname Varval   (36)
	Obs -> '@@@' Integer 'CALL' Args                   (37)
	Obs -> '@@@' Integer 'STATE' Integer State         (38)
	Obs -> '@@@' Integer 'STRUCT' Varname              (39)
	Obs -> '@@@' Integer 'SEQ' Varname Scalar          (40)
	Obs -> '@@@' Integer 'PTR' Varname Varval          (41)
	Obs -> '@@@' Integer 'SCALAR' Varname Varval       (42)
	Obs -> '@@@' Integer 'SCALAR' Varname Varindex Varval   (43)
	Obs -> '@@@' Integer 'END' Varname                 (44)
	Scalar -> '@@@' Integer '_' Varval Scalar          (45)
	Scalar -> End                                      (46)
	End -> '@@@' Integer 'END' Varname                 (47)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'@@@'          { PT _ (TS _ 1) }
	'CALL'         { PT _ (TS _ 2) }
	'DCLARRAY'     { PT _ (TS _ 3) }
	'DECL'         { PT _ (TS _ 4) }
	'DEF'          { PT _ (TS _ 5) }
	'END'          { PT _ (TS _ 6) }
	'INIT'         { PT _ (TS _ 7) }
	'LOG'          { PT _ (TS _ 8) }
	'NAME'         { PT _ (TS _ 9) }
	'PTR'          { PT _ (TS _ 10) }
	'SCALAR'       { PT _ (TS _ 11) }
	'SEQ'          { PT _ (TS _ 12) }
	'SIGNAL'       { PT _ (TS _ 13) }
	'STATE'        { PT _ (TS _ 14) }
	'STRUCT'       { PT _ (TS _ 15) }
	'TASK'         { PT _ (TS _ 16) }
	'_'            { PT _ (TS _ 17) }
	L_integ        { PT _ (TI $$) }
	L_ObsString    { PT _ (T_ObsString $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pListObs rule  0
	%start_pName    rule  1
	%start_pArgs    rule  2
	%start_pLMsg    rule  3
	%start_pTaskname rule  4
	%start_pVarname rule  5
	%start_pVarval  rule  6
	%start_pTypename rule  7
	%start_pState   rule  8
	%start_pVarindex rule  9
	%start_pObs     rule  10
	%start_pScalar  rule  11
	%start_pEnd     rule  12
	Integer         rule  13
	ObsString       rule  14
	ListObs         rules 15, 16
	Name            rule  17
	Args            rules 18, 19
	LMsg            rules 20, 21
	Taskname        rule  22
	Varname         rule  23
	Varval          rule  24
	Typename        rule  25
	State           rule  26
	Varindex        rule  27
	Obs             rules 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44
	Scalar          rules 45, 46
	End             rule  47

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pListObs -> . ListObs                        (rule 0)

	'@@@'          shift, and enter state 21
	%eof           reduce using rule 15

	ListObs        goto state 41
	Obs            goto state 42

State 1

	%start_pName -> . Name                              (rule 1)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 39
	Name           goto state 40

State 2

	%start_pArgs -> . Args                              (rule 2)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 37
	Args           goto state 38

State 3

	%start_pLMsg -> . LMsg                              (rule 3)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 35
	LMsg           goto state 36

State 4

	%start_pTaskname -> . Taskname                      (rule 4)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 33
	Taskname       goto state 34

State 5

	%start_pVarname -> . Varname                        (rule 5)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 31
	Varname        goto state 32

State 6

	%start_pVarval -> . Varval                          (rule 6)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 29
	Varval         goto state 30

State 7

	%start_pTypename -> . Typename                      (rule 7)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 27
	Typename       goto state 28

State 8

	%start_pState -> . State                            (rule 8)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 24
	State          goto state 25

State 9

	%start_pVarindex -> . Varindex                      (rule 9)

	L_integ        shift, and enter state 14

	Integer        goto state 22
	Varindex       goto state 23

State 10

	%start_pObs -> . Obs                                (rule 10)

	'@@@'          shift, and enter state 21

	Obs            goto state 20

State 11

	%start_pScalar -> . Scalar                          (rule 11)

	'@@@'          shift, and enter state 19

	Scalar         goto state 17
	End            goto state 18

State 12

	%start_pEnd -> . End                                (rule 12)

	'@@@'          shift, and enter state 16

	End            goto state 15

State 13

	Integer -> . L_integ                                (rule 13)

	L_integ        shift, and enter state 14


State 14

	Integer -> L_integ .                                (rule 13)

	'@@@'          reduce using rule 13
	'CALL'         reduce using rule 13
	'DCLARRAY'     reduce using rule 13
	'DECL'         reduce using rule 13
	'DEF'          reduce using rule 13
	'END'          reduce using rule 13
	'INIT'         reduce using rule 13
	'LOG'          reduce using rule 13
	'NAME'         reduce using rule 13
	'PTR'          reduce using rule 13
	'SCALAR'       reduce using rule 13
	'SEQ'          reduce using rule 13
	'SIGNAL'       reduce using rule 13
	'STATE'        reduce using rule 13
	'STRUCT'       reduce using rule 13
	'TASK'         reduce using rule 13
	'_'            reduce using rule 13
	L_ObsString    reduce using rule 13
	%eof           reduce using rule 13


State 15

	%start_pEnd -> End .                                (rule 12)

	%eof           accept


State 16

	End -> '@@@' . Integer 'END' Varname                (rule 47)

	L_integ        shift, and enter state 14

	Integer        goto state 48

State 17

	%start_pScalar -> Scalar .                          (rule 11)

	%eof           accept


State 18

	Scalar -> End .                                     (rule 46)

	'@@@'          reduce using rule 46
	%eof           reduce using rule 46


State 19

	Scalar -> '@@@' . Integer '_' Varval Scalar         (rule 45)
	End -> '@@@' . Integer 'END' Varname                (rule 47)

	L_integ        shift, and enter state 14

	Integer        goto state 47

State 20

	%start_pObs -> Obs .                                (rule 10)

	%eof           accept


State 21

	Obs -> '@@@' . Integer 'NAME' Name                  (rule 28)
	Obs -> '@@@' . Integer 'LOG' LMsg                   (rule 29)
	Obs -> '@@@' . Integer 'INIT'                       (rule 30)
	Obs -> '@@@' . Integer 'TASK' Taskname              (rule 31)
	Obs -> '@@@' . Integer 'SIGNAL' Integer             (rule 32)
	Obs -> '@@@' . Integer 'DEF' Varname Varval         (rule 33)
	Obs -> '@@@' . Integer 'DECL' Typename Varname Varval    (rule 34)
	Obs -> '@@@' . Integer 'DECL' Typename Varname      (rule 35)
	Obs -> '@@@' . Integer 'DCLARRAY' Typename Varname Varval    (rule 36)
	Obs -> '@@@' . Integer 'CALL' Args                  (rule 37)
	Obs -> '@@@' . Integer 'STATE' Integer State        (rule 38)
	Obs -> '@@@' . Integer 'STRUCT' Varname             (rule 39)
	Obs -> '@@@' . Integer 'SEQ' Varname Scalar         (rule 40)
	Obs -> '@@@' . Integer 'PTR' Varname Varval         (rule 41)
	Obs -> '@@@' . Integer 'SCALAR' Varname Varval      (rule 42)
	Obs -> '@@@' . Integer 'SCALAR' Varname Varindex Varval    (rule 43)
	Obs -> '@@@' . Integer 'END' Varname                (rule 44)

	L_integ        shift, and enter state 14

	Integer        goto state 46

State 22

	Varindex -> Integer .                               (rule 27)

	L_ObsString    reduce using rule 27
	%eof           reduce using rule 27


State 23

	%start_pVarindex -> Varindex .                      (rule 9)

	%eof           accept


State 24

	State -> ObsString .                                (rule 26)

	'@@@'          reduce using rule 26
	%eof           reduce using rule 26


State 25

	%start_pState -> State .                            (rule 8)

	%eof           accept


State 26

	ObsString -> L_ObsString .                          (rule 14)

	'@@@'          reduce using rule 14
	L_integ        reduce using rule 14
	L_ObsString    reduce using rule 14
	%eof           reduce using rule 14


State 27

	Typename -> ObsString .                             (rule 25)

	L_ObsString    reduce using rule 25
	%eof           reduce using rule 25


State 28

	%start_pTypename -> Typename .                      (rule 7)

	%eof           accept


State 29

	Varval -> ObsString .                               (rule 24)

	'@@@'          reduce using rule 24
	%eof           reduce using rule 24


State 30

	%start_pVarval -> Varval .                          (rule 6)

	%eof           accept


State 31

	Varname -> ObsString .                              (rule 23)

	'@@@'          reduce using rule 23
	L_integ        reduce using rule 23
	L_ObsString    reduce using rule 23
	%eof           reduce using rule 23


State 32

	%start_pVarname -> Varname .                        (rule 5)

	%eof           accept


State 33

	Taskname -> ObsString .                             (rule 22)

	'@@@'          reduce using rule 22
	%eof           reduce using rule 22


State 34

	%start_pTaskname -> Taskname .                      (rule 4)

	%eof           accept


State 35

	LMsg -> ObsString .                                 (rule 20)
	LMsg -> ObsString . LMsg                            (rule 21)

	'@@@'          reduce using rule 20
	L_ObsString    shift, and enter state 26
	%eof           reduce using rule 20

	ObsString      goto state 35
	LMsg           goto state 45

State 36

	%start_pLMsg -> LMsg .                              (rule 3)

	%eof           accept


State 37

	Args -> ObsString .                                 (rule 18)
	Args -> ObsString . Args                            (rule 19)

	'@@@'          reduce using rule 18
	L_ObsString    shift, and enter state 26
	%eof           reduce using rule 18

	ObsString      goto state 37
	Args           goto state 44

State 38

	%start_pArgs -> Args .                              (rule 2)

	%eof           accept


State 39

	Name -> ObsString .                                 (rule 17)

	'@@@'          reduce using rule 17
	%eof           reduce using rule 17


State 40

	%start_pName -> Name .                              (rule 1)

	%eof           accept


State 41

	%start_pListObs -> ListObs .                        (rule 0)

	%eof           accept


State 42

	ListObs -> Obs . ListObs                            (rule 16)

	'@@@'          shift, and enter state 21
	%eof           reduce using rule 15

	ListObs        goto state 43
	Obs            goto state 42

State 43

	ListObs -> Obs ListObs .                            (rule 16)

	%eof           reduce using rule 16


State 44

	Args -> ObsString Args .                            (rule 19)

	'@@@'          reduce using rule 19
	%eof           reduce using rule 19


State 45

	LMsg -> ObsString LMsg .                            (rule 21)

	'@@@'          reduce using rule 21
	%eof           reduce using rule 21


State 46

	Obs -> '@@@' Integer . 'NAME' Name                  (rule 28)
	Obs -> '@@@' Integer . 'LOG' LMsg                   (rule 29)
	Obs -> '@@@' Integer . 'INIT'                       (rule 30)
	Obs -> '@@@' Integer . 'TASK' Taskname              (rule 31)
	Obs -> '@@@' Integer . 'SIGNAL' Integer             (rule 32)
	Obs -> '@@@' Integer . 'DEF' Varname Varval         (rule 33)
	Obs -> '@@@' Integer . 'DECL' Typename Varname Varval    (rule 34)
	Obs -> '@@@' Integer . 'DECL' Typename Varname      (rule 35)
	Obs -> '@@@' Integer . 'DCLARRAY' Typename Varname Varval    (rule 36)
	Obs -> '@@@' Integer . 'CALL' Args                  (rule 37)
	Obs -> '@@@' Integer . 'STATE' Integer State        (rule 38)
	Obs -> '@@@' Integer . 'STRUCT' Varname             (rule 39)
	Obs -> '@@@' Integer . 'SEQ' Varname Scalar         (rule 40)
	Obs -> '@@@' Integer . 'PTR' Varname Varval         (rule 41)
	Obs -> '@@@' Integer . 'SCALAR' Varname Varval      (rule 42)
	Obs -> '@@@' Integer . 'SCALAR' Varname Varindex Varval    (rule 43)
	Obs -> '@@@' Integer . 'END' Varname                (rule 44)

	'CALL'         shift, and enter state 51
	'DCLARRAY'     shift, and enter state 52
	'DECL'         shift, and enter state 53
	'DEF'          shift, and enter state 54
	'END'          shift, and enter state 55
	'INIT'         shift, and enter state 56
	'LOG'          shift, and enter state 57
	'NAME'         shift, and enter state 58
	'PTR'          shift, and enter state 59
	'SCALAR'       shift, and enter state 60
	'SEQ'          shift, and enter state 61
	'SIGNAL'       shift, and enter state 62
	'STATE'        shift, and enter state 63
	'STRUCT'       shift, and enter state 64
	'TASK'         shift, and enter state 65


State 47

	Scalar -> '@@@' Integer . '_' Varval Scalar         (rule 45)
	End -> '@@@' Integer . 'END' Varname                (rule 47)

	'END'          shift, and enter state 49
	'_'            shift, and enter state 50


State 48

	End -> '@@@' Integer . 'END' Varname                (rule 47)

	'END'          shift, and enter state 49


State 49

	End -> '@@@' Integer 'END' . Varname                (rule 47)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 31
	Varname        goto state 81

State 50

	Scalar -> '@@@' Integer '_' . Varval Scalar         (rule 45)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 29
	Varval         goto state 80

State 51

	Obs -> '@@@' Integer 'CALL' . Args                  (rule 37)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 37
	Args           goto state 79

State 52

	Obs -> '@@@' Integer 'DCLARRAY' . Typename Varname Varval    (rule 36)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 27
	Typename       goto state 78

State 53

	Obs -> '@@@' Integer 'DECL' . Typename Varname Varval    (rule 34)
	Obs -> '@@@' Integer 'DECL' . Typename Varname      (rule 35)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 27
	Typename       goto state 77

State 54

	Obs -> '@@@' Integer 'DEF' . Varname Varval         (rule 33)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 31
	Varname        goto state 76

State 55

	Obs -> '@@@' Integer 'END' . Varname                (rule 44)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 31
	Varname        goto state 75

State 56

	Obs -> '@@@' Integer 'INIT' .                       (rule 30)

	'@@@'          reduce using rule 30
	%eof           reduce using rule 30


State 57

	Obs -> '@@@' Integer 'LOG' . LMsg                   (rule 29)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 35
	LMsg           goto state 74

State 58

	Obs -> '@@@' Integer 'NAME' . Name                  (rule 28)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 39
	Name           goto state 73

State 59

	Obs -> '@@@' Integer 'PTR' . Varname Varval         (rule 41)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 31
	Varname        goto state 72

State 60

	Obs -> '@@@' Integer 'SCALAR' . Varname Varval      (rule 42)
	Obs -> '@@@' Integer 'SCALAR' . Varname Varindex Varval    (rule 43)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 31
	Varname        goto state 71

State 61

	Obs -> '@@@' Integer 'SEQ' . Varname Scalar         (rule 40)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 31
	Varname        goto state 70

State 62

	Obs -> '@@@' Integer 'SIGNAL' . Integer             (rule 32)

	L_integ        shift, and enter state 14

	Integer        goto state 69

State 63

	Obs -> '@@@' Integer 'STATE' . Integer State        (rule 38)

	L_integ        shift, and enter state 14

	Integer        goto state 68

State 64

	Obs -> '@@@' Integer 'STRUCT' . Varname             (rule 39)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 31
	Varname        goto state 67

State 65

	Obs -> '@@@' Integer 'TASK' . Taskname              (rule 31)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 33
	Taskname       goto state 66

State 66

	Obs -> '@@@' Integer 'TASK' Taskname .              (rule 31)

	'@@@'          reduce using rule 31
	%eof           reduce using rule 31


State 67

	Obs -> '@@@' Integer 'STRUCT' Varname .             (rule 39)

	'@@@'          reduce using rule 39
	%eof           reduce using rule 39


State 68

	Obs -> '@@@' Integer 'STATE' Integer . State        (rule 38)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 24
	State          goto state 90

State 69

	Obs -> '@@@' Integer 'SIGNAL' Integer .             (rule 32)

	'@@@'          reduce using rule 32
	%eof           reduce using rule 32


State 70

	Obs -> '@@@' Integer 'SEQ' Varname . Scalar         (rule 40)

	'@@@'          shift, and enter state 19

	Scalar         goto state 89
	End            goto state 18

State 71

	Obs -> '@@@' Integer 'SCALAR' Varname . Varval      (rule 42)
	Obs -> '@@@' Integer 'SCALAR' Varname . Varindex Varval    (rule 43)

	L_integ        shift, and enter state 14
	L_ObsString    shift, and enter state 26

	Integer        goto state 22
	ObsString      goto state 29
	Varval         goto state 87
	Varindex       goto state 88

State 72

	Obs -> '@@@' Integer 'PTR' Varname . Varval         (rule 41)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 29
	Varval         goto state 86

State 73

	Obs -> '@@@' Integer 'NAME' Name .                  (rule 28)

	'@@@'          reduce using rule 28
	%eof           reduce using rule 28


State 74

	Obs -> '@@@' Integer 'LOG' LMsg .                   (rule 29)

	'@@@'          reduce using rule 29
	%eof           reduce using rule 29


State 75

	Obs -> '@@@' Integer 'END' Varname .                (rule 44)

	'@@@'          reduce using rule 44
	%eof           reduce using rule 44


State 76

	Obs -> '@@@' Integer 'DEF' Varname . Varval         (rule 33)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 29
	Varval         goto state 85

State 77

	Obs -> '@@@' Integer 'DECL' Typename . Varname Varval    (rule 34)
	Obs -> '@@@' Integer 'DECL' Typename . Varname      (rule 35)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 31
	Varname        goto state 84

State 78

	Obs -> '@@@' Integer 'DCLARRAY' Typename . Varname Varval    (rule 36)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 31
	Varname        goto state 83

State 79

	Obs -> '@@@' Integer 'CALL' Args .                  (rule 37)

	'@@@'          reduce using rule 37
	%eof           reduce using rule 37


State 80

	Scalar -> '@@@' Integer '_' Varval . Scalar         (rule 45)

	'@@@'          shift, and enter state 19

	Scalar         goto state 82
	End            goto state 18

State 81

	End -> '@@@' Integer 'END' Varname .                (rule 47)

	'@@@'          reduce using rule 47
	%eof           reduce using rule 47


State 82

	Scalar -> '@@@' Integer '_' Varval Scalar .         (rule 45)

	'@@@'          reduce using rule 45
	%eof           reduce using rule 45


State 83

	Obs -> '@@@' Integer 'DCLARRAY' Typename Varname . Varval    (rule 36)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 29
	Varval         goto state 93

State 84

	Obs -> '@@@' Integer 'DECL' Typename Varname . Varval    (rule 34)
	Obs -> '@@@' Integer 'DECL' Typename Varname .      (rule 35)

	'@@@'          reduce using rule 35
	L_ObsString    shift, and enter state 26
	%eof           reduce using rule 35

	ObsString      goto state 29
	Varval         goto state 92

State 85

	Obs -> '@@@' Integer 'DEF' Varname Varval .         (rule 33)

	'@@@'          reduce using rule 33
	%eof           reduce using rule 33


State 86

	Obs -> '@@@' Integer 'PTR' Varname Varval .         (rule 41)

	'@@@'          reduce using rule 41
	%eof           reduce using rule 41


State 87

	Obs -> '@@@' Integer 'SCALAR' Varname Varval .      (rule 42)

	'@@@'          reduce using rule 42
	%eof           reduce using rule 42


State 88

	Obs -> '@@@' Integer 'SCALAR' Varname Varindex . Varval    (rule 43)

	L_ObsString    shift, and enter state 26

	ObsString      goto state 29
	Varval         goto state 91

State 89

	Obs -> '@@@' Integer 'SEQ' Varname Scalar .         (rule 40)

	'@@@'          reduce using rule 40
	%eof           reduce using rule 40


State 90

	Obs -> '@@@' Integer 'STATE' Integer State .        (rule 38)

	'@@@'          reduce using rule 38
	%eof           reduce using rule 38


State 91

	Obs -> '@@@' Integer 'SCALAR' Varname Varindex Varval .    (rule 43)

	'@@@'          reduce using rule 43
	%eof           reduce using rule 43


State 92

	Obs -> '@@@' Integer 'DECL' Typename Varname Varval .    (rule 34)

	'@@@'          reduce using rule 34
	%eof           reduce using rule 34


State 93

	Obs -> '@@@' Integer 'DCLARRAY' Typename Varname Varval .    (rule 36)

	'@@@'          reduce using rule 36
	%eof           reduce using rule 36


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 48
Number of terminals: 19
Number of non-terminals: 28
Number of states: 94
