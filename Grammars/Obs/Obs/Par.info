-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Obs/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pListObs -> ListObs                         (0)
	%start_pArgs -> Args                               (1)
	%start_pLMsg -> LMsg                               (2)
	%start_pTaskname -> Taskname                       (3)
	%start_pVarname -> Varname                         (4)
	%start_pVarval -> Varval                           (5)
	%start_pTypename -> Typename                       (6)
	%start_pState -> State                             (7)
	%start_pVarindex -> Varindex                       (8)
	%start_pThreadId -> ThreadId                       (9)
	%start_pSizeDcl -> SizeDcl                         (10)
	%start_pObs -> Obs                                 (11)
	%start_pScalar -> Scalar                           (12)
	%start_pEnd -> End                                 (13)
	%start_pPrefix -> Prefix                           (14)
	Double -> L_doubl                                  (15)
	Integer -> L_integ                                 (16)
	String -> L_quoted                                 (17)
	ObsIdent -> L_ObsIdent                             (18)
	ListObs ->                                         (19)
	ListObs -> Obs ListObs                             (20)
	Args ->                                            (21)
	Args -> Integer Args                               (22)
	Args -> Double Args                                (23)
	Args -> String Args                                (24)
	LMsg ->                                            (25)
	LMsg -> String LMsg                                (26)
	LMsg -> Integer LMsg                               (27)
	LMsg -> Double LMsg                                (28)
	Taskname -> ObsIdent                               (29)
	Varname -> ObsIdent                                (30)
	Varval -> Integer                                  (31)
	Varval -> Double                                   (32)
	Varval -> 'NULL'                                   (33)
	Typename -> ObsIdent                               (34)
	State -> ObsIdent                                  (35)
	Varindex -> Integer                                (36)
	ThreadId -> Integer                                (37)
	SizeDcl -> Varval                                  (38)
	SizeDcl -> ObsIdent                                (39)
	Obs -> Prefix ThreadId 'NAME' ObsIdent             (40)
	Obs -> Prefix ThreadId 'LOG' LMsg                  (41)
	Obs -> Prefix ThreadId 'INIT'                      (42)
	Obs -> Prefix ThreadId 'TASK' Taskname             (43)
	Obs -> Prefix ThreadId 'SIGNAL' Integer            (44)
	Obs -> Prefix ThreadId 'DEF' Varname Varval        (45)
	Obs -> Prefix ThreadId 'DECL' Typename Varname     (46)
	Obs -> Prefix ThreadId 'DECL' Typename Varname Varval   (47)
	Obs -> Prefix ThreadId 'DCLARRAY' Typename Varname SizeDcl   (48)
	Obs -> Prefix ThreadId 'CALL' ObsIdent Args        (49)
	Obs -> Prefix ThreadId 'STATE' Integer State       (50)
	Obs -> Prefix ThreadId 'STRUCT' Varname            (51)
	Obs -> Prefix ThreadId 'SEQ' Varname Scalar        (52)
	Obs -> Prefix ThreadId 'PTR' Varname Varval        (53)
	Obs -> Prefix ThreadId 'SCALAR' Varname Varval     (54)
	Obs -> Prefix ThreadId 'SCALAR' Varname Varindex Varval   (55)
	Obs -> Prefix ThreadId 'END' Varname               (56)
	Scalar -> End                                      (57)
	Scalar -> Prefix ThreadId 'SCALAR' '_' Varval Scalar   (58)
	End -> Prefix ThreadId 'END' Varname               (59)
	Prefix -> '@@@'                                    (60)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'@@@'          { PT _ (TS _ 1) }
	'CALL'         { PT _ (TS _ 2) }
	'DCLARRAY'     { PT _ (TS _ 3) }
	'DECL'         { PT _ (TS _ 4) }
	'DEF'          { PT _ (TS _ 5) }
	'END'          { PT _ (TS _ 6) }
	'INIT'         { PT _ (TS _ 7) }
	'LOG'          { PT _ (TS _ 8) }
	'NAME'         { PT _ (TS _ 9) }
	'NULL'         { PT _ (TS _ 10) }
	'PTR'          { PT _ (TS _ 11) }
	'SCALAR'       { PT _ (TS _ 12) }
	'SEQ'          { PT _ (TS _ 13) }
	'SIGNAL'       { PT _ (TS _ 14) }
	'STATE'        { PT _ (TS _ 15) }
	'STRUCT'       { PT _ (TS _ 16) }
	'TASK'         { PT _ (TS _ 17) }
	'_'            { PT _ (TS _ 18) }
	L_doubl        { PT _ (TD $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }
	L_ObsIdent     { PT _ (T_ObsIdent $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pListObs rule  0
	%start_pArgs    rule  1
	%start_pLMsg    rule  2
	%start_pTaskname rule  3
	%start_pVarname rule  4
	%start_pVarval  rule  5
	%start_pTypename rule  6
	%start_pState   rule  7
	%start_pVarindex rule  8
	%start_pThreadId rule  9
	%start_pSizeDcl rule  10
	%start_pObs     rule  11
	%start_pScalar  rule  12
	%start_pEnd     rule  13
	%start_pPrefix  rule  14
	Double          rule  15
	Integer         rule  16
	String          rule  17
	ObsIdent        rule  18
	ListObs         rules 19, 20
	Args            rules 21, 22, 23, 24
	LMsg            rules 25, 26, 27, 28
	Taskname        rule  29
	Varname         rule  30
	Varval          rules 31, 32, 33
	Typename        rule  34
	State           rule  35
	Varindex        rule  36
	ThreadId        rule  37
	SizeDcl         rules 38, 39
	Obs             rules 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56
	Scalar          rules 57, 58
	End             rule  59
	Prefix          rule  60

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pListObs -> . ListObs                        (rule 0)

	'@@@'          shift, and enter state 18
	%eof           reduce using rule 19

	ListObs        goto state 56
	Obs            goto state 57
	Prefix         goto state 25

State 1

	%start_pArgs -> . Args                              (rule 1)

	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 51
	%eof           reduce using rule 21

	Double         goto state 52
	Integer        goto state 53
	String         goto state 54
	Args           goto state 55

State 2

	%start_pLMsg -> . LMsg                              (rule 2)

	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 51
	%eof           reduce using rule 25

	Double         goto state 47
	Integer        goto state 48
	String         goto state 49
	LMsg           goto state 50

State 3

	%start_pTaskname -> . Taskname                      (rule 3)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 45
	Taskname       goto state 46

State 4

	%start_pVarname -> . Varname                        (rule 4)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 43
	Varname        goto state 44

State 5

	%start_pVarval -> . Varval                          (rule 5)

	'NULL'         shift, and enter state 31
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32

	Double         goto state 26
	Integer        goto state 27
	Varval         goto state 42

State 6

	%start_pTypename -> . Typename                      (rule 6)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 40
	Typename       goto state 41

State 7

	%start_pState -> . State                            (rule 7)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 38
	State          goto state 39

State 8

	%start_pVarindex -> . Varindex                      (rule 8)

	L_integ        shift, and enter state 32

	Integer        goto state 36
	Varindex       goto state 37

State 9

	%start_pThreadId -> . ThreadId                      (rule 9)

	L_integ        shift, and enter state 32

	Integer        goto state 34
	ThreadId       goto state 35

State 10

	%start_pSizeDcl -> . SizeDcl                        (rule 10)

	'NULL'         shift, and enter state 31
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32
	L_ObsIdent     shift, and enter state 33

	Double         goto state 26
	Integer        goto state 27
	ObsIdent       goto state 28
	Varval         goto state 29
	SizeDcl        goto state 30

State 11

	%start_pObs -> . Obs                                (rule 11)

	'@@@'          shift, and enter state 18

	Obs            goto state 24
	Prefix         goto state 25

State 12

	%start_pScalar -> . Scalar                          (rule 12)

	'@@@'          shift, and enter state 18

	Scalar         goto state 21
	End            goto state 22
	Prefix         goto state 23

State 13

	%start_pEnd -> . End                                (rule 13)

	'@@@'          shift, and enter state 18

	End            goto state 19
	Prefix         goto state 20

State 14

	%start_pPrefix -> . Prefix                          (rule 14)

	'@@@'          shift, and enter state 18

	Prefix         goto state 17

State 15

	Double -> . L_doubl                                 (rule 15)

	L_doubl        shift, and enter state 16


State 16

	Double -> L_doubl .                                 (rule 15)

	'@@@'          reduce using rule 15
	L_doubl        reduce using rule 15
	L_integ        reduce using rule 15
	L_quoted       reduce using rule 15
	%eof           reduce using rule 15


State 17

	%start_pPrefix -> Prefix .                          (rule 14)

	%eof           accept


State 18

	Prefix -> '@@@' .                                   (rule 60)

	L_integ        reduce using rule 60
	%eof           reduce using rule 60


State 19

	%start_pEnd -> End .                                (rule 13)

	%eof           accept


State 20

	End -> Prefix . ThreadId 'END' Varname              (rule 59)

	L_integ        shift, and enter state 32

	Integer        goto state 34
	ThreadId       goto state 67

State 21

	%start_pScalar -> Scalar .                          (rule 12)

	%eof           accept


State 22

	Scalar -> End .                                     (rule 57)

	'@@@'          reduce using rule 57
	%eof           reduce using rule 57


State 23

	Scalar -> Prefix . ThreadId 'SCALAR' '_' Varval Scalar    (rule 58)
	End -> Prefix . ThreadId 'END' Varname              (rule 59)

	L_integ        shift, and enter state 32

	Integer        goto state 34
	ThreadId       goto state 66

State 24

	%start_pObs -> Obs .                                (rule 11)

	%eof           accept


State 25

	Obs -> Prefix . ThreadId 'NAME' ObsIdent            (rule 40)
	Obs -> Prefix . ThreadId 'LOG' LMsg                 (rule 41)
	Obs -> Prefix . ThreadId 'INIT'                     (rule 42)
	Obs -> Prefix . ThreadId 'TASK' Taskname            (rule 43)
	Obs -> Prefix . ThreadId 'SIGNAL' Integer           (rule 44)
	Obs -> Prefix . ThreadId 'DEF' Varname Varval       (rule 45)
	Obs -> Prefix . ThreadId 'DECL' Typename Varname    (rule 46)
	Obs -> Prefix . ThreadId 'DECL' Typename Varname Varval    (rule 47)
	Obs -> Prefix . ThreadId 'DCLARRAY' Typename Varname SizeDcl    (rule 48)
	Obs -> Prefix . ThreadId 'CALL' ObsIdent Args       (rule 49)
	Obs -> Prefix . ThreadId 'STATE' Integer State      (rule 50)
	Obs -> Prefix . ThreadId 'STRUCT' Varname           (rule 51)
	Obs -> Prefix . ThreadId 'SEQ' Varname Scalar       (rule 52)
	Obs -> Prefix . ThreadId 'PTR' Varname Varval       (rule 53)
	Obs -> Prefix . ThreadId 'SCALAR' Varname Varval    (rule 54)
	Obs -> Prefix . ThreadId 'SCALAR' Varname Varindex Varval    (rule 55)
	Obs -> Prefix . ThreadId 'END' Varname              (rule 56)

	L_integ        shift, and enter state 32

	Integer        goto state 34
	ThreadId       goto state 65

State 26

	Varval -> Double .                                  (rule 32)

	'@@@'          reduce using rule 32
	%eof           reduce using rule 32


State 27

	Varval -> Integer .                                 (rule 31)

	'@@@'          reduce using rule 31
	%eof           reduce using rule 31


State 28

	SizeDcl -> ObsIdent .                               (rule 39)

	'@@@'          reduce using rule 39
	%eof           reduce using rule 39


State 29

	SizeDcl -> Varval .                                 (rule 38)

	'@@@'          reduce using rule 38
	%eof           reduce using rule 38


State 30

	%start_pSizeDcl -> SizeDcl .                        (rule 10)

	%eof           accept


State 31

	Varval -> 'NULL' .                                  (rule 33)

	'@@@'          reduce using rule 33
	%eof           reduce using rule 33


State 32

	Integer -> L_integ .                                (rule 16)

	'@@@'          reduce using rule 16
	'CALL'         reduce using rule 16
	'DCLARRAY'     reduce using rule 16
	'DECL'         reduce using rule 16
	'DEF'          reduce using rule 16
	'END'          reduce using rule 16
	'INIT'         reduce using rule 16
	'LOG'          reduce using rule 16
	'NAME'         reduce using rule 16
	'NULL'         reduce using rule 16
	'PTR'          reduce using rule 16
	'SCALAR'       reduce using rule 16
	'SEQ'          reduce using rule 16
	'SIGNAL'       reduce using rule 16
	'STATE'        reduce using rule 16
	'STRUCT'       reduce using rule 16
	'TASK'         reduce using rule 16
	L_doubl        reduce using rule 16
	L_integ        reduce using rule 16
	L_quoted       reduce using rule 16
	L_ObsIdent     reduce using rule 16
	%eof           reduce using rule 16


State 33

	ObsIdent -> L_ObsIdent .                            (rule 18)

	'@@@'          reduce using rule 18
	'NULL'         reduce using rule 18
	L_doubl        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18
	L_ObsIdent     reduce using rule 18
	%eof           reduce using rule 18


State 34

	ThreadId -> Integer .                               (rule 37)

	'CALL'         reduce using rule 37
	'DCLARRAY'     reduce using rule 37
	'DECL'         reduce using rule 37
	'DEF'          reduce using rule 37
	'END'          reduce using rule 37
	'INIT'         reduce using rule 37
	'LOG'          reduce using rule 37
	'NAME'         reduce using rule 37
	'PTR'          reduce using rule 37
	'SCALAR'       reduce using rule 37
	'SEQ'          reduce using rule 37
	'SIGNAL'       reduce using rule 37
	'STATE'        reduce using rule 37
	'STRUCT'       reduce using rule 37
	'TASK'         reduce using rule 37
	%eof           reduce using rule 37


State 35

	%start_pThreadId -> ThreadId .                      (rule 9)

	%eof           accept


State 36

	Varindex -> Integer .                               (rule 36)

	%eof           reduce using rule 36


State 37

	%start_pVarindex -> Varindex .                      (rule 8)

	%eof           accept


State 38

	State -> ObsIdent .                                 (rule 35)

	'@@@'          reduce using rule 35
	%eof           reduce using rule 35


State 39

	%start_pState -> State .                            (rule 7)

	%eof           accept


State 40

	Typename -> ObsIdent .                              (rule 34)

	L_ObsIdent     reduce using rule 34
	%eof           reduce using rule 34


State 41

	%start_pTypename -> Typename .                      (rule 6)

	%eof           accept


State 42

	%start_pVarval -> Varval .                          (rule 5)

	%eof           accept


State 43

	Varname -> ObsIdent .                               (rule 30)

	'@@@'          reduce using rule 30
	'NULL'         reduce using rule 30
	L_doubl        reduce using rule 30
	L_integ        reduce using rule 30
	L_ObsIdent     reduce using rule 30
	%eof           reduce using rule 30


State 44

	%start_pVarname -> Varname .                        (rule 4)

	%eof           accept


State 45

	Taskname -> ObsIdent .                              (rule 29)

	'@@@'          reduce using rule 29
	%eof           reduce using rule 29


State 46

	%start_pTaskname -> Taskname .                      (rule 3)

	%eof           accept


State 47

	LMsg -> Double . LMsg                               (rule 28)

	'@@@'          reduce using rule 25
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 51
	%eof           reduce using rule 25

	Double         goto state 47
	Integer        goto state 48
	String         goto state 49
	LMsg           goto state 64

State 48

	LMsg -> Integer . LMsg                              (rule 27)

	'@@@'          reduce using rule 25
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 51
	%eof           reduce using rule 25

	Double         goto state 47
	Integer        goto state 48
	String         goto state 49
	LMsg           goto state 63

State 49

	LMsg -> String . LMsg                               (rule 26)

	'@@@'          reduce using rule 25
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 51
	%eof           reduce using rule 25

	Double         goto state 47
	Integer        goto state 48
	String         goto state 49
	LMsg           goto state 62

State 50

	%start_pLMsg -> LMsg .                              (rule 2)

	%eof           accept


State 51

	String -> L_quoted .                                (rule 17)

	'@@@'          reduce using rule 17
	L_doubl        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17
	%eof           reduce using rule 17


State 52

	Args -> Double . Args                               (rule 23)

	'@@@'          reduce using rule 21
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 51
	%eof           reduce using rule 21

	Double         goto state 52
	Integer        goto state 53
	String         goto state 54
	Args           goto state 61

State 53

	Args -> Integer . Args                              (rule 22)

	'@@@'          reduce using rule 21
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 51
	%eof           reduce using rule 21

	Double         goto state 52
	Integer        goto state 53
	String         goto state 54
	Args           goto state 60

State 54

	Args -> String . Args                               (rule 24)

	'@@@'          reduce using rule 21
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 51
	%eof           reduce using rule 21

	Double         goto state 52
	Integer        goto state 53
	String         goto state 54
	Args           goto state 59

State 55

	%start_pArgs -> Args .                              (rule 1)

	%eof           accept


State 56

	%start_pListObs -> ListObs .                        (rule 0)

	%eof           accept


State 57

	ListObs -> Obs . ListObs                            (rule 20)

	'@@@'          shift, and enter state 18
	%eof           reduce using rule 19

	ListObs        goto state 58
	Obs            goto state 57
	Prefix         goto state 25

State 58

	ListObs -> Obs ListObs .                            (rule 20)

	%eof           reduce using rule 20


State 59

	Args -> String Args .                               (rule 24)

	'@@@'          reduce using rule 24
	%eof           reduce using rule 24


State 60

	Args -> Integer Args .                              (rule 22)

	'@@@'          reduce using rule 22
	%eof           reduce using rule 22


State 61

	Args -> Double Args .                               (rule 23)

	'@@@'          reduce using rule 23
	%eof           reduce using rule 23


State 62

	LMsg -> String LMsg .                               (rule 26)

	'@@@'          reduce using rule 26
	%eof           reduce using rule 26


State 63

	LMsg -> Integer LMsg .                              (rule 27)

	'@@@'          reduce using rule 27
	%eof           reduce using rule 27


State 64

	LMsg -> Double LMsg .                               (rule 28)

	'@@@'          reduce using rule 28
	%eof           reduce using rule 28


State 65

	Obs -> Prefix ThreadId . 'NAME' ObsIdent            (rule 40)
	Obs -> Prefix ThreadId . 'LOG' LMsg                 (rule 41)
	Obs -> Prefix ThreadId . 'INIT'                     (rule 42)
	Obs -> Prefix ThreadId . 'TASK' Taskname            (rule 43)
	Obs -> Prefix ThreadId . 'SIGNAL' Integer           (rule 44)
	Obs -> Prefix ThreadId . 'DEF' Varname Varval       (rule 45)
	Obs -> Prefix ThreadId . 'DECL' Typename Varname    (rule 46)
	Obs -> Prefix ThreadId . 'DECL' Typename Varname Varval    (rule 47)
	Obs -> Prefix ThreadId . 'DCLARRAY' Typename Varname SizeDcl    (rule 48)
	Obs -> Prefix ThreadId . 'CALL' ObsIdent Args       (rule 49)
	Obs -> Prefix ThreadId . 'STATE' Integer State      (rule 50)
	Obs -> Prefix ThreadId . 'STRUCT' Varname           (rule 51)
	Obs -> Prefix ThreadId . 'SEQ' Varname Scalar       (rule 52)
	Obs -> Prefix ThreadId . 'PTR' Varname Varval       (rule 53)
	Obs -> Prefix ThreadId . 'SCALAR' Varname Varval    (rule 54)
	Obs -> Prefix ThreadId . 'SCALAR' Varname Varindex Varval    (rule 55)
	Obs -> Prefix ThreadId . 'END' Varname              (rule 56)

	'CALL'         shift, and enter state 70
	'DCLARRAY'     shift, and enter state 71
	'DECL'         shift, and enter state 72
	'DEF'          shift, and enter state 73
	'END'          shift, and enter state 74
	'INIT'         shift, and enter state 75
	'LOG'          shift, and enter state 76
	'NAME'         shift, and enter state 77
	'PTR'          shift, and enter state 78
	'SCALAR'       shift, and enter state 79
	'SEQ'          shift, and enter state 80
	'SIGNAL'       shift, and enter state 81
	'STATE'        shift, and enter state 82
	'STRUCT'       shift, and enter state 83
	'TASK'         shift, and enter state 84


State 66

	Scalar -> Prefix ThreadId . 'SCALAR' '_' Varval Scalar    (rule 58)
	End -> Prefix ThreadId . 'END' Varname              (rule 59)

	'END'          shift, and enter state 68
	'SCALAR'       shift, and enter state 69


State 67

	End -> Prefix ThreadId . 'END' Varname              (rule 59)

	'END'          shift, and enter state 68


State 68

	End -> Prefix ThreadId 'END' . Varname              (rule 59)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 43
	Varname        goto state 100

State 69

	Scalar -> Prefix ThreadId 'SCALAR' . '_' Varval Scalar    (rule 58)

	'_'            shift, and enter state 99


State 70

	Obs -> Prefix ThreadId 'CALL' . ObsIdent Args       (rule 49)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 98

State 71

	Obs -> Prefix ThreadId 'DCLARRAY' . Typename Varname SizeDcl    (rule 48)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 40
	Typename       goto state 97

State 72

	Obs -> Prefix ThreadId 'DECL' . Typename Varname    (rule 46)
	Obs -> Prefix ThreadId 'DECL' . Typename Varname Varval    (rule 47)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 40
	Typename       goto state 96

State 73

	Obs -> Prefix ThreadId 'DEF' . Varname Varval       (rule 45)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 43
	Varname        goto state 95

State 74

	Obs -> Prefix ThreadId 'END' . Varname              (rule 56)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 43
	Varname        goto state 94

State 75

	Obs -> Prefix ThreadId 'INIT' .                     (rule 42)

	'@@@'          reduce using rule 42
	%eof           reduce using rule 42


State 76

	Obs -> Prefix ThreadId 'LOG' . LMsg                 (rule 41)

	'@@@'          reduce using rule 25
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 51
	%eof           reduce using rule 25

	Double         goto state 47
	Integer        goto state 48
	String         goto state 49
	LMsg           goto state 93

State 77

	Obs -> Prefix ThreadId 'NAME' . ObsIdent            (rule 40)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 92

State 78

	Obs -> Prefix ThreadId 'PTR' . Varname Varval       (rule 53)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 43
	Varname        goto state 91

State 79

	Obs -> Prefix ThreadId 'SCALAR' . Varname Varval    (rule 54)
	Obs -> Prefix ThreadId 'SCALAR' . Varname Varindex Varval    (rule 55)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 43
	Varname        goto state 90

State 80

	Obs -> Prefix ThreadId 'SEQ' . Varname Scalar       (rule 52)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 43
	Varname        goto state 89

State 81

	Obs -> Prefix ThreadId 'SIGNAL' . Integer           (rule 44)

	L_integ        shift, and enter state 32

	Integer        goto state 88

State 82

	Obs -> Prefix ThreadId 'STATE' . Integer State      (rule 50)

	L_integ        shift, and enter state 32

	Integer        goto state 87

State 83

	Obs -> Prefix ThreadId 'STRUCT' . Varname           (rule 51)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 43
	Varname        goto state 86

State 84

	Obs -> Prefix ThreadId 'TASK' . Taskname            (rule 43)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 45
	Taskname       goto state 85

State 85

	Obs -> Prefix ThreadId 'TASK' Taskname .            (rule 43)

	'@@@'          reduce using rule 43
	%eof           reduce using rule 43


State 86

	Obs -> Prefix ThreadId 'STRUCT' Varname .           (rule 51)

	'@@@'          reduce using rule 51
	%eof           reduce using rule 51


State 87

	Obs -> Prefix ThreadId 'STATE' Integer . State      (rule 50)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 38
	State          goto state 111

State 88

	Obs -> Prefix ThreadId 'SIGNAL' Integer .           (rule 44)

	'@@@'          reduce using rule 44
	%eof           reduce using rule 44


State 89

	Obs -> Prefix ThreadId 'SEQ' Varname . Scalar       (rule 52)

	'@@@'          shift, and enter state 18

	Scalar         goto state 110
	End            goto state 22
	Prefix         goto state 23

State 90

	Obs -> Prefix ThreadId 'SCALAR' Varname . Varval    (rule 54)
	Obs -> Prefix ThreadId 'SCALAR' Varname . Varindex Varval    (rule 55)

	'NULL'         shift, and enter state 31
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32

	Double         goto state 26
	Integer        goto state 107
	Varval         goto state 108
	Varindex       goto state 109

State 91

	Obs -> Prefix ThreadId 'PTR' Varname . Varval       (rule 53)

	'NULL'         shift, and enter state 31
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32

	Double         goto state 26
	Integer        goto state 27
	Varval         goto state 106

State 92

	Obs -> Prefix ThreadId 'NAME' ObsIdent .            (rule 40)

	'@@@'          reduce using rule 40
	%eof           reduce using rule 40


State 93

	Obs -> Prefix ThreadId 'LOG' LMsg .                 (rule 41)

	'@@@'          reduce using rule 41
	%eof           reduce using rule 41


State 94

	Obs -> Prefix ThreadId 'END' Varname .              (rule 56)

	'@@@'          reduce using rule 56
	%eof           reduce using rule 56


State 95

	Obs -> Prefix ThreadId 'DEF' Varname . Varval       (rule 45)

	'NULL'         shift, and enter state 31
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32

	Double         goto state 26
	Integer        goto state 27
	Varval         goto state 105

State 96

	Obs -> Prefix ThreadId 'DECL' Typename . Varname    (rule 46)
	Obs -> Prefix ThreadId 'DECL' Typename . Varname Varval    (rule 47)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 43
	Varname        goto state 104

State 97

	Obs -> Prefix ThreadId 'DCLARRAY' Typename . Varname SizeDcl    (rule 48)

	L_ObsIdent     shift, and enter state 33

	ObsIdent       goto state 43
	Varname        goto state 103

State 98

	Obs -> Prefix ThreadId 'CALL' ObsIdent . Args       (rule 49)

	'@@@'          reduce using rule 21
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32
	L_quoted       shift, and enter state 51
	%eof           reduce using rule 21

	Double         goto state 52
	Integer        goto state 53
	String         goto state 54
	Args           goto state 102

State 99

	Scalar -> Prefix ThreadId 'SCALAR' '_' . Varval Scalar    (rule 58)

	'NULL'         shift, and enter state 31
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32

	Double         goto state 26
	Integer        goto state 27
	Varval         goto state 101

State 100

	End -> Prefix ThreadId 'END' Varname .              (rule 59)

	'@@@'          reduce using rule 59
	%eof           reduce using rule 59


State 101

	Scalar -> Prefix ThreadId 'SCALAR' '_' Varval . Scalar    (rule 58)

	'@@@'          shift, and enter state 18

	Scalar         goto state 115
	End            goto state 22
	Prefix         goto state 23

State 102

	Obs -> Prefix ThreadId 'CALL' ObsIdent Args .       (rule 49)

	'@@@'          reduce using rule 49
	%eof           reduce using rule 49


State 103

	Obs -> Prefix ThreadId 'DCLARRAY' Typename Varname . SizeDcl    (rule 48)

	'NULL'         shift, and enter state 31
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32
	L_ObsIdent     shift, and enter state 33

	Double         goto state 26
	Integer        goto state 27
	ObsIdent       goto state 28
	Varval         goto state 29
	SizeDcl        goto state 114

State 104

	Obs -> Prefix ThreadId 'DECL' Typename Varname .    (rule 46)
	Obs -> Prefix ThreadId 'DECL' Typename Varname . Varval    (rule 47)

	'@@@'          reduce using rule 46
	'NULL'         shift, and enter state 31
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32
	%eof           reduce using rule 46

	Double         goto state 26
	Integer        goto state 27
	Varval         goto state 113

State 105

	Obs -> Prefix ThreadId 'DEF' Varname Varval .       (rule 45)

	'@@@'          reduce using rule 45
	%eof           reduce using rule 45


State 106

	Obs -> Prefix ThreadId 'PTR' Varname Varval .       (rule 53)

	'@@@'          reduce using rule 53
	%eof           reduce using rule 53


State 107

	Varval -> Integer .                                 (rule 31)
	Varindex -> Integer .                               (rule 36)

	'@@@'          reduce using rule 31
	'NULL'         reduce using rule 36
	L_doubl        reduce using rule 36
	L_integ        reduce using rule 36
	%eof           reduce using rule 31


State 108

	Obs -> Prefix ThreadId 'SCALAR' Varname Varval .    (rule 54)

	'@@@'          reduce using rule 54
	%eof           reduce using rule 54


State 109

	Obs -> Prefix ThreadId 'SCALAR' Varname Varindex . Varval    (rule 55)

	'NULL'         shift, and enter state 31
	L_doubl        shift, and enter state 16
	L_integ        shift, and enter state 32

	Double         goto state 26
	Integer        goto state 27
	Varval         goto state 112

State 110

	Obs -> Prefix ThreadId 'SEQ' Varname Scalar .       (rule 52)

	'@@@'          reduce using rule 52
	%eof           reduce using rule 52


State 111

	Obs -> Prefix ThreadId 'STATE' Integer State .      (rule 50)

	'@@@'          reduce using rule 50
	%eof           reduce using rule 50


State 112

	Obs -> Prefix ThreadId 'SCALAR' Varname Varindex Varval .    (rule 55)

	'@@@'          reduce using rule 55
	%eof           reduce using rule 55


State 113

	Obs -> Prefix ThreadId 'DECL' Typename Varname Varval .    (rule 47)

	'@@@'          reduce using rule 47
	%eof           reduce using rule 47


State 114

	Obs -> Prefix ThreadId 'DCLARRAY' Typename Varname SizeDcl .    (rule 48)

	'@@@'          reduce using rule 48
	%eof           reduce using rule 48


State 115

	Scalar -> Prefix ThreadId 'SCALAR' '_' Varval Scalar .    (rule 58)

	'@@@'          reduce using rule 58
	%eof           reduce using rule 58


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 61
Number of terminals: 22
Number of non-terminals: 34
Number of states: 116
