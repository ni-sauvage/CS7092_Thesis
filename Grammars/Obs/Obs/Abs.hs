-- File generated by the BNF Converter (bnfc 2.9.4).

{-# LANGUAGE GeneralizedNewtypeDeriving #-}

-- | The abstract syntax of language Obs.

module Obs.Abs where

import Prelude (Double, Integer, String)
import qualified Prelude as C (Eq, Ord, Show, Read)
import qualified Data.String

data Args
    = ArgsOne
    | ArgsConsInteger Integer Args
    | ArgsConsDouble Double Args
    | ArgsConsString String Args
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data LMsg
    = LmsgOne
    | LmsgConsString String LMsg
    | LmsgConsInt Integer LMsg
    | LmsgConsDouble Double LMsg
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Taskname = TaskName ObsIdent
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Varname = VarName ObsIdent
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Varval = VarValInt Integer | VarValDouble Double | VarValNull
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Typename = TypeName ObsIdent
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data State = State ObsIdent
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Varindex = VarIndex Integer
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data ThreadId = ThreadId Integer
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data SizeDcl = SizeDclVar Varval | SizeDclDef ObsIdent
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Obs
    = ObsName Prefix ThreadId ObsIdent
    | ObsLog Prefix ThreadId LMsg
    | ObsInit Prefix ThreadId
    | ObsTask Prefix ThreadId Taskname
    | ObsSignal Prefix ThreadId Integer
    | ObsDef Prefix ThreadId Varname Varval
    | ObsDecl Prefix ThreadId Typename Varname
    | ObsDeclVal Prefix ThreadId Typename Varname Varval
    | ObsDeclArr Prefix ThreadId Typename Varname SizeDcl
    | ObsCall Prefix ThreadId ObsIdent Args
    | ObsState Prefix ThreadId Integer State
    | ObsStruct Prefix ThreadId Varname
    | ObsSeq Prefix ThreadId Varname Scalar
    | ObsPtr Prefix ThreadId Varname Varval
    | ObsScalar Prefix ThreadId Varname Varval
    | ObsScalarIndex Prefix ThreadId Varname Varindex Varval
    | ObsEnd Prefix ThreadId Varname
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Scalar
    = ObsScalarNone End | ObsScalarCons Prefix ThreadId Varval Scalar
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data End = ObsEndSeq Prefix ThreadId Varname
  deriving (C.Eq, C.Ord, C.Show, C.Read)

data Prefix = Prefix
  deriving (C.Eq, C.Ord, C.Show, C.Read)

newtype ObsIdent = ObsIdent String
  deriving (C.Eq, C.Ord, C.Show, C.Read, Data.String.IsString)

