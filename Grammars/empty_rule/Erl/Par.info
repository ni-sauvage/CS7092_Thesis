-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Erl/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pStmt -> Stmt                               (0)
	%start_pExpr -> Expr                               (1)
	Stmt -> Expr 'when'                                (2)
	Expr -> 'me'                                       (3)
	Expr ->                                            (4)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'me'           { PT _ (TS _ 1) }
	'when'         { PT _ (TS _ 2) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pStmt    rule  0
	%start_pExpr    rule  1
	Stmt            rule  2
	Expr            rules 3, 4

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pStmt -> . Stmt                              (rule 0)

	'me'           shift, and enter state 4
	'when'         reduce using rule 4

	Stmt           goto state 6
	Expr           goto state 3

State 1

	%start_pExpr -> . Expr                              (rule 1)

	'me'           shift, and enter state 4
	%eof           reduce using rule 4

	Expr           goto state 5

State 2

	Stmt -> . Expr 'when'                               (rule 2)

	'me'           shift, and enter state 4

	Expr           goto state 3

State 3

	Stmt -> Expr . 'when'                               (rule 2)

	'when'         shift, and enter state 7


State 4

	Expr -> 'me' .                                      (rule 3)

	'when'         reduce using rule 3
	%eof           reduce using rule 3


State 5

	%start_pExpr -> Expr .                              (rule 1)

	%eof           accept


State 6

	%start_pStmt -> Stmt .                              (rule 0)

	%eof           accept


State 7

	Stmt -> Expr 'when' .                               (rule 2)

	%eof           reduce using rule 2


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 5
Number of terminals: 2
Number of non-terminals: 4
Number of states: 8
