-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Pml/Par.y
-----------------------------------------------------------------------------

state 0 contains 1 shift/reduce conflicts.
state 10 contains 1 shift/reduce conflicts.
state 36 contains 2 shift/reduce conflicts.
state 38 contains 2 shift/reduce conflicts.
state 66 contains 1 reduce/reduce conflicts.
state 81 contains 3 shift/reduce conflicts.
state 103 contains 1 shift/reduce conflicts.
state 111 contains 2 shift/reduce conflicts.
state 115 contains 3 shift/reduce conflicts.
state 121 contains 1 shift/reduce conflicts.
state 135 contains 2 shift/reduce conflicts.
state 153 contains 2 shift/reduce conflicts and 4 reduce/reduce conflicts.
state 155 contains 1 shift/reduce conflicts.
state 157 contains 2 shift/reduce conflicts.
state 195 contains 2 shift/reduce conflicts.
state 207 contains 2 shift/reduce conflicts.
state 293 contains 1 shift/reduce conflicts.
state 298 contains 2 shift/reduce conflicts.
state 299 contains 2 shift/reduce conflicts.
state 304 contains 1 shift/reduce conflicts.
state 308 contains 2 shift/reduce conflicts.
state 317 contains 2 shift/reduce conflicts and 9 reduce/reduce conflicts.
state 322 contains 1 shift/reduce conflicts.
state 328 contains 17 shift/reduce conflicts.
state 332 contains 17 shift/reduce conflicts.
state 344 contains 2 shift/reduce conflicts.
state 349 contains 2 shift/reduce conflicts.
state 350 contains 2 shift/reduce conflicts.
state 370 contains 3 shift/reduce conflicts.
state 372 contains 18 shift/reduce conflicts.
state 383 contains 1 reduce/reduce conflicts.
state 393 contains 2 shift/reduce conflicts.
state 405 contains 1 shift/reduce conflicts.
state 416 contains 17 shift/reduce conflicts.
state 422 contains 18 shift/reduce conflicts.
state 436 contains 2 shift/reduce conflicts.
state 481 contains 2 shift/reduce conflicts.
state 485 contains 1 shift/reduce conflicts.
state 492 contains 2 shift/reduce conflicts.
state 510 contains 2 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pListModule -> ListModule                   (0)
	%start_pVisible -> Visible                         (1)
	%start_pChanPoll -> ChanPoll                       (2)
	%start_pSeparator -> Separator                     (3)
	%start_pTypename -> Typename                       (4)
	%start_pAndOr -> AndOr                             (5)
	%start_pBinOp -> BinOp                             (6)
	%start_pUnrOp -> UnrOp                             (7)
	%start_pConst -> Const                             (8)
	%start_pPrintType -> PrintType                     (9)
	%start_pModule -> Module                           (10)
	%start_pProctype -> Proctype                       (11)
	%start_pInline -> Inline                           (12)
	%start_pPactive -> Pactive                         (13)
	%start_pPdeclList -> PdeclList                     (14)
	%start_pPpriority -> Ppriority                     (15)
	%start_pPenabler -> Penabler                       (16)
	%start_pInit -> Init                               (17)
	%start_pIpriority -> Ipriority                     (18)
	%start_pNever -> Never                             (19)
	%start_pTrace -> Trace                             (20)
	%start_pUtype -> Utype                             (21)
	%start_pMtype -> Mtype                             (22)
	%start_pMsep -> Msep                               (23)
	%start_pMequals -> Mequals                         (24)
	%start_pMname -> Mname                             (25)
	%start_pDeclList -> DeclList                       (26)
	%start_pDecl -> Decl                               (27)
	%start_pDclIvar -> DclIvar                         (28)
	%start_pDeclVisible -> DeclVisible                 (29)
	%start_pUnsignedDecl -> UnsignedDecl               (30)
	%start_pUDclAssign -> UDclAssign                   (31)
	%start_pActive -> Active                           (32)
	%start_pAConst -> AConst                           (33)
	%start_pPriority -> Priority                       (34)
	%start_pEnabler -> Enabler                         (35)
	%start_pSequence -> Sequence                       (36)
	%start_pUStmt -> UStmt                             (37)
	%start_pStep -> Step                               (38)
	%start_pVarRefList -> VarRefList                   (39)
	%start_pAnyExpr -> AnyExpr                         (40)
	%start_pIvar -> Ivar                               (41)
	%start_pIvarConst -> IvarConst                     (42)
	%start_pIvarAssign -> IvarAssign                   (43)
	%start_pChInit -> ChInit                           (44)
	%start_pChType -> ChType                           (45)
	%start_pVarRef -> VarRef                           (46)
	%start_pVarRefAnyExpr -> VarRefAnyExpr             (47)
	%start_pVarRefTypedef -> VarRefTypedef             (48)
	%start_pSend -> Send                               (49)
	%start_pReceive -> Receive                         (50)
	%start_pPoll -> Poll                               (51)
	%start_pSendArgs -> SendArgs                       (52)
	%start_pArgList -> ArgList                         (53)
	%start_pRecvArgs -> RecvArgs                       (54)
	%start_pRecvArgList -> RecvArgList                 (55)
	%start_pUnaryMinus -> UnaryMinus                   (56)
	%start_pRecvArg -> RecvArg                         (57)
	%start_pAssign -> Assign                           (58)
	%start_pPargs -> Pargs                             (59)
	%start_pPArgList -> PArgList                       (60)
	%start_pPargList -> PargList                       (61)
	%start_pStmt -> Stmt                               (62)
	%start_pRange -> Range                             (63)
	%start_pOptions -> Options                         (64)
	%start_pRunPrio -> RunPrio                         (65)
	%start_pRunArgs -> RunArgs                         (66)
	%start_pExpr -> Expr                               (67)
	%start_pUname -> Uname                             (68)
	%start_pName -> Name                               (69)
	Integer -> L_integ                                 (70)
	String -> L_quoted                                 (71)
	PIdent -> L_PIdent                                 (72)
	ListModule -> Module                               (73)
	ListModule -> Module ListModule                    (74)
	Visible -> 'hidden'                                (75)
	Visible -> 'show'                                  (76)
	ChanPoll -> 'full'                                 (77)
	ChanPoll -> 'empty' 'nfull' 'nempty'               (78)
	Separator -> ';'                                   (79)
	Separator -> '->'                                  (80)
	Typename -> 'bit'                                  (81)
	Typename -> 'bool'                                 (82)
	Typename -> 'byte'                                 (83)
	Typename -> 'short'                                (84)
	Typename -> 'int'                                  (85)
	Typename -> 'mtype'                                (86)
	Typename -> 'chan'                                 (87)
	Typename -> Uname                                  (88)
	AndOr -> '&&'                                      (89)
	AndOr -> '||'                                      (90)
	BinOp -> '+'                                       (91)
	BinOp -> '-'                                       (92)
	BinOp -> '*'                                       (93)
	BinOp -> '/'                                       (94)
	BinOp -> '%'                                       (95)
	BinOp -> '&'                                       (96)
	BinOp -> '^'                                       (97)
	BinOp -> '|'                                       (98)
	BinOp -> '>'                                       (99)
	BinOp -> '<'                                       (100)
	BinOp -> '>='                                      (101)
	BinOp -> '<='                                      (102)
	BinOp -> '=='                                      (103)
	BinOp -> '!='                                      (104)
	BinOp -> '<<'                                      (105)
	BinOp -> '>>'                                      (106)
	BinOp -> AndOr                                     (107)
	UnrOp -> '~'                                       (108)
	UnrOp -> '-'                                       (109)
	UnrOp -> '!'                                       (110)
	Const -> 'true'                                    (111)
	Const -> 'false'                                   (112)
	Const -> 'skip'                                    (113)
	Const -> Integer                                   (114)
	PrintType -> 'print'                               (115)
	PrintType -> 'printf'                              (116)
	PrintType -> 'printm'                              (117)
	Module -> Proctype                                 (118)
	Module -> Inline                                   (119)
	Module -> Init                                     (120)
	Module -> Never                                    (121)
	Module -> Trace                                    (122)
	Module -> Utype                                    (123)
	Module -> Mtype                                    (124)
	Module -> DeclList                                 (125)
	Proctype -> Pactive 'proctype' Name '(' PdeclList ')' Ppriority Penabler '{' Sequence '}'   (126)
	Inline -> 'inline' Name '(' ArgList ')' '{' Sequence '}'   (127)
	Pactive ->                                         (128)
	Pactive -> Active                                  (129)
	PdeclList ->                                       (130)
	PdeclList -> DeclList                              (131)
	Ppriority ->                                       (132)
	Ppriority -> Priority                              (133)
	Penabler ->                                        (134)
	Penabler -> Enabler                                (135)
	Init -> 'init' Ipriority '{' Sequence '}'          (136)
	Ipriority ->                                       (137)
	Ipriority -> Priority                              (138)
	Never -> 'never' '{' Sequence '}'                  (139)
	Trace -> 'trace' '{' Sequence '}'                  (140)
	Utype -> 'typedef' Name '{' DeclList '}' ';'       (141)
	Mtype -> 'mtype' Mequals '{' Mname '}' Msep        (142)
	Msep ->                                            (143)
	Msep -> ';'                                        (144)
	Mequals ->                                         (145)
	Mequals -> '='                                     (146)
	Mname -> Name                                      (147)
	Mname -> Name ',' Mname                            (148)
	DeclList -> Decl Separator                         (149)
	DeclList -> Decl                                   (150)
	DeclList -> Decl Separator DeclList                (151)
	Decl -> DeclVisible Typename DclIvar               (152)
	Decl -> DeclVisible UnsignedDecl                   (153)
	DclIvar -> Ivar ',' DclIvar                        (154)
	DclIvar -> Ivar                                    (155)
	DeclVisible ->                                     (156)
	DeclVisible -> Visible                             (157)
	UnsignedDecl -> 'unsigned' Name ':' Const UDclAssign   (158)
	UDclAssign ->                                      (159)
	UDclAssign -> '=' AnyExpr                          (160)
	Active -> 'active' AConst                          (161)
	AConst ->                                          (162)
	AConst -> '[' Const ']'                            (163)
	Priority -> 'priority' Const                       (164)
	Enabler -> 'provided' '(' Expr ')'                 (165)
	Sequence -> Step                                   (166)
	Sequence -> Step Separator                         (167)
	Sequence -> Step Sequence                          (168)
	Sequence -> Step Separator Sequence                (169)
	UStmt ->                                           (170)
	UStmt -> 'unless' Stmt                             (171)
	Step -> Mtype                                      (172)
	Step -> Stmt UStmt                                 (173)
	Step -> DeclList                                   (174)
	Step -> 'xr' VarRefList                            (175)
	Step -> 'xs' VarRefList                            (176)
	VarRefList -> VarRef                               (177)
	VarRefList -> VarRef ',' VarRefList                (178)
	AnyExpr -> '(' AnyExpr ')'                         (179)
	AnyExpr -> AnyExpr BinOp AnyExpr                   (180)
	AnyExpr -> UnrOp AnyExpr                           (181)
	AnyExpr -> '(' AnyExpr '->' AnyExpr ':' AnyExpr ')'   (182)
	AnyExpr -> 'len' '(' VarRef ')'                    (183)
	AnyExpr -> Poll                                    (184)
	AnyExpr -> VarRef                                  (185)
	AnyExpr -> Const                                   (186)
	AnyExpr -> 'timeout'                               (187)
	AnyExpr -> 'np_'                                   (188)
	AnyExpr -> 'enabled' '(' AnyExpr ')'               (189)
	AnyExpr -> 'pc_value' '(' AnyExpr ')'              (190)
	AnyExpr -> Name '[' AnyExpr ']' '@' Name           (191)
	AnyExpr -> 'run' Name '(' RunArgs ')' RunPrio      (192)
	AnyExpr -> 'get_priority' '(' Expr ')'             (193)
	AnyExpr -> 'set_priority' '(' Expr ',' Expr ')'    (194)
	Ivar -> Name IvarConst IvarAssign                  (195)
	IvarConst ->                                       (196)
	IvarConst -> '[' Const ']'                         (197)
	IvarAssign ->                                      (198)
	IvarAssign -> '=' AnyExpr                          (199)
	IvarAssign -> '=' ChInit                           (200)
	ChInit -> '[' Const ']' 'of' '{' ChType '}'        (201)
	ChType -> Typename                                 (202)
	ChType -> Typename ',' ChType                      (203)
	VarRef -> Name VarRefAnyExpr VarRefTypedef         (204)
	VarRefAnyExpr ->                                   (205)
	VarRefAnyExpr -> '[' AnyExpr ']'                   (206)
	VarRefTypedef ->                                   (207)
	VarRefTypedef -> '.' VarRef                        (208)
	Send -> VarRef '!' SendArgs                        (209)
	Send -> VarRef '!' '!' SendArgs                    (210)
	Receive -> VarRef '?' RecvArgs                     (211)
	Receive -> VarRef '?' '?' RecvArgs                 (212)
	Receive -> VarRef '?' '<' RecvArgs '>'             (213)
	Receive -> VarRef '?' '?' '<' RecvArgs '>'         (214)
	Poll -> VarRef '?' '[' RecvArgs ']'                (215)
	Poll -> VarRef '?' '?' '[' RecvArgs ']'            (216)
	SendArgs -> ArgList                                (217)
	SendArgs -> AnyExpr '(' ArgList ')'                (218)
	ArgList -> AnyExpr ',' ArgList                     (219)
	ArgList -> AnyExpr                                 (220)
	ArgList ->                                         (221)
	RecvArgs -> RecvArgList                            (222)
	RecvArgs -> RecvArgList '(' RecvArgs ')'           (223)
	RecvArgList -> RecvArg                             (224)
	RecvArgList -> RecvArg RecvArgList                 (225)
	UnaryMinus ->                                      (226)
	UnaryMinus -> '-'                                  (227)
	RecvArg -> VarRef                                  (228)
	RecvArg -> 'eval' '(' VarRef ')'                   (229)
	RecvArg -> UnaryMinus Const                        (230)
	Assign -> VarRef '=' AnyExpr                       (231)
	Assign -> VarRef '+' '+'                           (232)
	Assign -> VarRef '-' '-'                           (233)
	Pargs -> String                                    (234)
	Pargs -> ArgList                                   (235)
	Pargs -> String ',' ArgList                        (236)
	PArgList ->                                        (237)
	PargList -> ',' ArgList                            (238)
	Stmt -> 'if' Options 'fi'                          (239)
	Stmt -> 'do' Options 'od'                          (240)
	Stmt -> 'for' '(' Range ')' '{' Sequence '}'       (241)
	Stmt -> 'atomic' '{' Sequence '}'                  (242)
	Stmt -> 'd_step' '{' Sequence '}'                  (243)
	Stmt -> 'select' '(' Sequence ')'                  (244)
	Stmt -> '{' Sequence '}'                           (245)
	Stmt -> Send                                       (246)
	Stmt -> Receive                                    (247)
	Stmt -> Assign                                     (248)
	Stmt -> 'else'                                     (249)
	Stmt -> 'break'                                    (250)
	Stmt -> 'goto' Name                                (251)
	Stmt -> Name ':' Stmt                              (252)
	Stmt -> PrintType '(' Pargs ')'                    (253)
	Stmt -> 'assert' Expr                              (254)
	Stmt -> Name '(' ArgList ')'                       (255)
	Stmt -> Expr                                       (256)
	Range -> Name 'in' Name                            (257)
	Range -> Name ':' AnyExpr '..' AnyExpr             (258)
	Options -> '::' Sequence                           (259)
	Options -> '::' Sequence Options                   (260)
	RunPrio ->                                         (261)
	RunPrio -> Priority                                (262)
	RunArgs ->                                         (263)
	RunArgs -> ArgList                                 (264)
	Expr -> AnyExpr                                    (265)
	Expr -> '(' Expr ')'                               (266)
	Expr -> Expr AndOr Expr                            (267)
	Expr -> ChanPoll '(' VarRef ')'                    (268)
	Uname -> Name                                      (269)
	Name -> PIdent                                     (270)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	','            { PT _ (TS _ 10) }
	'-'            { PT _ (TS _ 11) }
	'->'           { PT _ (TS _ 12) }
	'.'            { PT _ (TS _ 13) }
	'..'           { PT _ (TS _ 14) }
	'/'            { PT _ (TS _ 15) }
	':'            { PT _ (TS _ 16) }
	'::'           { PT _ (TS _ 17) }
	';'            { PT _ (TS _ 18) }
	'<'            { PT _ (TS _ 19) }
	'<<'           { PT _ (TS _ 20) }
	'<='           { PT _ (TS _ 21) }
	'='            { PT _ (TS _ 22) }
	'=='           { PT _ (TS _ 23) }
	'>'            { PT _ (TS _ 24) }
	'>='           { PT _ (TS _ 25) }
	'>>'           { PT _ (TS _ 26) }
	'?'            { PT _ (TS _ 27) }
	'@'            { PT _ (TS _ 28) }
	'['            { PT _ (TS _ 29) }
	']'            { PT _ (TS _ 30) }
	'^'            { PT _ (TS _ 31) }
	'active'       { PT _ (TS _ 32) }
	'assert'       { PT _ (TS _ 33) }
	'atomic'       { PT _ (TS _ 34) }
	'bit'          { PT _ (TS _ 35) }
	'bool'         { PT _ (TS _ 36) }
	'break'        { PT _ (TS _ 37) }
	'byte'         { PT _ (TS _ 38) }
	'chan'         { PT _ (TS _ 39) }
	'd_step'       { PT _ (TS _ 40) }
	'do'           { PT _ (TS _ 41) }
	'else'         { PT _ (TS _ 42) }
	'empty'        { PT _ (TS _ 43) }
	'enabled'      { PT _ (TS _ 44) }
	'eval'         { PT _ (TS _ 45) }
	'false'        { PT _ (TS _ 46) }
	'fi'           { PT _ (TS _ 47) }
	'for'          { PT _ (TS _ 48) }
	'full'         { PT _ (TS _ 49) }
	'get_priority' { PT _ (TS _ 50) }
	'goto'         { PT _ (TS _ 51) }
	'hidden'       { PT _ (TS _ 52) }
	'if'           { PT _ (TS _ 53) }
	'in'           { PT _ (TS _ 54) }
	'init'         { PT _ (TS _ 55) }
	'inline'       { PT _ (TS _ 56) }
	'int'          { PT _ (TS _ 57) }
	'len'          { PT _ (TS _ 58) }
	'mtype'        { PT _ (TS _ 59) }
	'nempty'       { PT _ (TS _ 60) }
	'never'        { PT _ (TS _ 61) }
	'nfull'        { PT _ (TS _ 62) }
	'np_'          { PT _ (TS _ 63) }
	'od'           { PT _ (TS _ 64) }
	'of'           { PT _ (TS _ 65) }
	'pc_value'     { PT _ (TS _ 66) }
	'print'        { PT _ (TS _ 67) }
	'printf'       { PT _ (TS _ 68) }
	'printm'       { PT _ (TS _ 69) }
	'priority'     { PT _ (TS _ 70) }
	'proctype'     { PT _ (TS _ 71) }
	'provided'     { PT _ (TS _ 72) }
	'run'          { PT _ (TS _ 73) }
	'select'       { PT _ (TS _ 74) }
	'set_priority' { PT _ (TS _ 75) }
	'short'        { PT _ (TS _ 76) }
	'show'         { PT _ (TS _ 77) }
	'skip'         { PT _ (TS _ 78) }
	'timeout'      { PT _ (TS _ 79) }
	'trace'        { PT _ (TS _ 80) }
	'true'         { PT _ (TS _ 81) }
	'typedef'      { PT _ (TS _ 82) }
	'unless'       { PT _ (TS _ 83) }
	'unsigned'     { PT _ (TS _ 84) }
	'xr'           { PT _ (TS _ 85) }
	'xs'           { PT _ (TS _ 86) }
	'{'            { PT _ (TS _ 87) }
	'|'            { PT _ (TS _ 88) }
	'||'           { PT _ (TS _ 89) }
	'}'            { PT _ (TS _ 90) }
	'~'            { PT _ (TS _ 91) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }
	L_PIdent       { PT _ (T_PIdent $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pListModule rule  0
	%start_pVisible rule  1
	%start_pChanPoll rule  2
	%start_pSeparator rule  3
	%start_pTypename rule  4
	%start_pAndOr   rule  5
	%start_pBinOp   rule  6
	%start_pUnrOp   rule  7
	%start_pConst   rule  8
	%start_pPrintType rule  9
	%start_pModule  rule  10
	%start_pProctype rule  11
	%start_pInline  rule  12
	%start_pPactive rule  13
	%start_pPdeclList rule  14
	%start_pPpriority rule  15
	%start_pPenabler rule  16
	%start_pInit    rule  17
	%start_pIpriority rule  18
	%start_pNever   rule  19
	%start_pTrace   rule  20
	%start_pUtype   rule  21
	%start_pMtype   rule  22
	%start_pMsep    rule  23
	%start_pMequals rule  24
	%start_pMname   rule  25
	%start_pDeclList rule  26
	%start_pDecl    rule  27
	%start_pDclIvar rule  28
	%start_pDeclVisible rule  29
	%start_pUnsignedDecl rule  30
	%start_pUDclAssign rule  31
	%start_pActive  rule  32
	%start_pAConst  rule  33
	%start_pPriority rule  34
	%start_pEnabler rule  35
	%start_pSequence rule  36
	%start_pUStmt   rule  37
	%start_pStep    rule  38
	%start_pVarRefList rule  39
	%start_pAnyExpr rule  40
	%start_pIvar    rule  41
	%start_pIvarConst rule  42
	%start_pIvarAssign rule  43
	%start_pChInit  rule  44
	%start_pChType  rule  45
	%start_pVarRef  rule  46
	%start_pVarRefAnyExpr rule  47
	%start_pVarRefTypedef rule  48
	%start_pSend    rule  49
	%start_pReceive rule  50
	%start_pPoll    rule  51
	%start_pSendArgs rule  52
	%start_pArgList rule  53
	%start_pRecvArgs rule  54
	%start_pRecvArgList rule  55
	%start_pUnaryMinus rule  56
	%start_pRecvArg rule  57
	%start_pAssign  rule  58
	%start_pPargs   rule  59
	%start_pPArgList rule  60
	%start_pPargList rule  61
	%start_pStmt    rule  62
	%start_pRange   rule  63
	%start_pOptions rule  64
	%start_pRunPrio rule  65
	%start_pRunArgs rule  66
	%start_pExpr    rule  67
	%start_pUname   rule  68
	%start_pName    rule  69
	Integer         rule  70
	String          rule  71
	PIdent          rule  72
	ListModule      rules 73, 74
	Visible         rules 75, 76
	ChanPoll        rules 77, 78
	Separator       rules 79, 80
	Typename        rules 81, 82, 83, 84, 85, 86, 87, 88
	AndOr           rules 89, 90
	BinOp           rules 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107
	UnrOp           rules 108, 109, 110
	Const           rules 111, 112, 113, 114
	PrintType       rules 115, 116, 117
	Module          rules 118, 119, 120, 121, 122, 123, 124, 125
	Proctype        rule  126
	Inline          rule  127
	Pactive         rules 128, 129
	PdeclList       rules 130, 131
	Ppriority       rules 132, 133
	Penabler        rules 134, 135
	Init            rule  136
	Ipriority       rules 137, 138
	Never           rule  139
	Trace           rule  140
	Utype           rule  141
	Mtype           rule  142
	Msep            rules 143, 144
	Mequals         rules 145, 146
	Mname           rules 147, 148
	DeclList        rules 149, 150, 151
	Decl            rules 152, 153
	DclIvar         rules 154, 155
	DeclVisible     rules 156, 157
	UnsignedDecl    rule  158
	UDclAssign      rules 159, 160
	Active          rule  161
	AConst          rules 162, 163
	Priority        rule  164
	Enabler         rule  165
	Sequence        rules 166, 167, 168, 169
	UStmt           rules 170, 171
	Step            rules 172, 173, 174, 175, 176
	VarRefList      rules 177, 178
	AnyExpr         rules 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194
	Ivar            rule  195
	IvarConst       rules 196, 197
	IvarAssign      rules 198, 199, 200
	ChInit          rule  201
	ChType          rules 202, 203
	VarRef          rule  204
	VarRefAnyExpr   rules 205, 206
	VarRefTypedef   rules 207, 208
	Send            rules 209, 210
	Receive         rules 211, 212, 213, 214
	Poll            rules 215, 216
	SendArgs        rules 217, 218
	ArgList         rules 219, 220, 221
	RecvArgs        rules 222, 223
	RecvArgList     rules 224, 225
	UnaryMinus      rules 226, 227
	RecvArg         rules 228, 229, 230
	Assign          rules 231, 232, 233
	Pargs           rules 234, 235, 236
	PArgList        rule  237
	PargList        rule  238
	Stmt            rules 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256
	Range           rules 257, 258
	Options         rules 259, 260
	RunPrio         rules 261, 262
	RunArgs         rules 263, 264
	Expr            rules 265, 266, 267, 268
	Uname           rule  269
	Name            rule  270

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pListModule -> . ListModule                  (rule 0)

	'active'       shift, and enter state 214
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'hidden'       shift, and enter state 199
	'init'         shift, and enter state 240
	'inline'       shift, and enter state 250
	'int'          reduce using rule 156
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'never'        shift, and enter state 236
	'proctype'     reduce using rule 128
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'trace'        shift, and enter state 234
	'typedef'      shift, and enter state 232
	'unsigned'     reduce using rule 156
	L_PIdent       reduce using rule 156

	ListModule     goto state 292
	Visible        goto state 192
	Module         goto state 293
	Proctype       goto state 254
	Inline         goto state 255
	Pactive        goto state 252
	Init           goto state 256
	Never          goto state 257
	Trace          goto state 258
	Utype          goto state 259
	Mtype          goto state 260
	DeclList       goto state 261
	Decl           goto state 195
	DeclVisible    goto state 196
	Active         goto state 248

State 1

	%start_pVisible -> . Visible                        (rule 1)

	'hidden'       shift, and enter state 199
	'show'         shift, and enter state 201

	Visible        goto state 291

State 2

	%start_pChanPoll -> . ChanPoll                      (rule 2)

	'empty'        shift, and enter state 89
	'full'         shift, and enter state 92

	ChanPoll       goto state 290

State 3

	%start_pSeparator -> . Separator                    (rule 3)

	'->'           shift, and enter state 288
	';'            shift, and enter state 289

	Separator      goto state 287

State 4

	%start_pTypename -> . Typename                      (rule 4)

	'bit'          shift, and enter state 174
	'bool'         shift, and enter state 175
	'byte'         shift, and enter state 176
	'chan'         shift, and enter state 177
	'int'          shift, and enter state 178
	'mtype'        shift, and enter state 179
	'short'        shift, and enter state 180
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Typename       goto state 286
	Uname          goto state 173
	Name           goto state 76

State 5

	%start_pAndOr -> . AndOr                            (rule 5)

	'&&'           shift, and enter state 270
	'||'           shift, and enter state 284

	AndOr          goto state 285

State 6

	%start_pBinOp -> . BinOp                            (rule 6)

	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
	'/'            shift, and enter state 274
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284

	AndOr          goto state 265
	BinOp          goto state 266

State 7

	%start_pUnrOp -> . UnrOp                            (rule 7)

	'!'            shift, and enter state 86
	'-'            shift, and enter state 88
	'~'            shift, and enter state 102

	UnrOp          goto state 264

State 8

	%start_pConst -> . Const                            (rule 8)

	'false'        shift, and enter state 91
	'skip'         shift, and enter state 99
	'true'         shift, and enter state 101
	L_integ        shift, and enter state 71

	Integer        goto state 77
	Const          goto state 263

State 9

	%start_pPrintType -> . PrintType                    (rule 9)

	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133

	PrintType      goto state 262

State 10

	%start_pModule -> . Module                          (rule 10)

	'active'       shift, and enter state 214
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'hidden'       shift, and enter state 199
	'init'         shift, and enter state 240
	'inline'       shift, and enter state 250
	'int'          reduce using rule 156
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'never'        shift, and enter state 236
	'proctype'     reduce using rule 128
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'trace'        shift, and enter state 234
	'typedef'      shift, and enter state 232
	'unsigned'     reduce using rule 156
	L_PIdent       reduce using rule 156

	Visible        goto state 192
	Module         goto state 253
	Proctype       goto state 254
	Inline         goto state 255
	Pactive        goto state 252
	Init           goto state 256
	Never          goto state 257
	Trace          goto state 258
	Utype          goto state 259
	Mtype          goto state 260
	DeclList       goto state 261
	Decl           goto state 195
	DeclVisible    goto state 196
	Active         goto state 248

State 11

	%start_pProctype -> . Proctype                      (rule 11)

	'active'       shift, and enter state 214
	'proctype'     reduce using rule 128

	Proctype       goto state 251
	Pactive        goto state 252
	Active         goto state 248

State 12

	%start_pInline -> . Inline                          (rule 12)

	'inline'       shift, and enter state 250

	Inline         goto state 249

State 13

	%start_pPactive -> . Pactive                        (rule 13)

	'active'       shift, and enter state 214
	%eof           reduce using rule 128

	Pactive        goto state 247
	Active         goto state 248

State 14

	%start_pPdeclList -> . PdeclList                    (rule 14)

	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'hidden'       shift, and enter state 199
	'int'          reduce using rule 156
	'mtype'        reduce using rule 156
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'unsigned'     reduce using rule 156
	L_PIdent       reduce using rule 156
	%eof           reduce using rule 130

	Visible        goto state 192
	PdeclList      goto state 245
	DeclList       goto state 246
	Decl           goto state 195
	DeclVisible    goto state 196

State 15

	%start_pPpriority -> . Ppriority                    (rule 15)

	'priority'     shift, and enter state 109
	%eof           reduce using rule 132

	Ppriority      goto state 243
	Priority       goto state 244

State 16

	%start_pPenabler -> . Penabler                      (rule 16)

	'provided'     shift, and enter state 209
	%eof           reduce using rule 134

	Penabler       goto state 241
	Enabler        goto state 242

State 17

	%start_pInit -> . Init                              (rule 17)

	'init'         shift, and enter state 240

	Init           goto state 239

State 18

	%start_pIpriority -> . Ipriority                    (rule 18)

	'priority'     shift, and enter state 109
	%eof           reduce using rule 137

	Ipriority      goto state 237
	Priority       goto state 238

State 19

	%start_pNever -> . Never                            (rule 19)

	'never'        shift, and enter state 236

	Never          goto state 235

State 20

	%start_pTrace -> . Trace                            (rule 20)

	'trace'        shift, and enter state 234

	Trace          goto state 233

State 21

	%start_pUtype -> . Utype                            (rule 21)

	'typedef'      shift, and enter state 232

	Utype          goto state 231

State 22

	%start_pMtype -> . Mtype                            (rule 22)

	'mtype'        shift, and enter state 200

	Mtype          goto state 230

State 23

	%start_pMsep -> . Msep                              (rule 23)

	';'            shift, and enter state 229
	%eof           reduce using rule 143

	Msep           goto state 228

State 24

	%start_pMequals -> . Mequals                        (rule 24)

	'='            shift, and enter state 227
	%eof           reduce using rule 145

	Mequals        goto state 226

State 25

	%start_pMname -> . Mname                            (rule 25)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Mname          goto state 224
	Name           goto state 225

State 26

	%start_pDeclList -> . DeclList                      (rule 26)

	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'hidden'       shift, and enter state 199
	'int'          reduce using rule 156
	'mtype'        reduce using rule 156
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'unsigned'     reduce using rule 156
	L_PIdent       reduce using rule 156

	Visible        goto state 192
	DeclList       goto state 223
	Decl           goto state 195
	DeclVisible    goto state 196

State 27

	%start_pDecl -> . Decl                              (rule 27)

	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'hidden'       shift, and enter state 199
	'int'          reduce using rule 156
	'mtype'        reduce using rule 156
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'unsigned'     reduce using rule 156
	L_PIdent       reduce using rule 156

	Visible        goto state 192
	Decl           goto state 222
	DeclVisible    goto state 196

State 28

	%start_pDclIvar -> . DclIvar                        (rule 28)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	DclIvar        goto state 220
	Ivar           goto state 221
	Name           goto state 188

State 29

	%start_pDeclVisible -> . DeclVisible                (rule 29)

	'hidden'       shift, and enter state 199
	'show'         shift, and enter state 201
	%eof           reduce using rule 156

	Visible        goto state 192
	DeclVisible    goto state 219

State 30

	%start_pUnsignedDecl -> . UnsignedDecl              (rule 30)

	'unsigned'     shift, and enter state 218

	UnsignedDecl   goto state 217

State 31

	%start_pUDclAssign -> . UDclAssign                  (rule 31)

	'='            shift, and enter state 216
	%eof           reduce using rule 159

	UDclAssign     goto state 215

State 32

	%start_pActive -> . Active                          (rule 32)

	'active'       shift, and enter state 214

	Active         goto state 213

State 33

	%start_pAConst -> . AConst                          (rule 33)

	'['            shift, and enter state 212
	%eof           reduce using rule 162

	AConst         goto state 211

State 34

	%start_pPriority -> . Priority                      (rule 34)

	'priority'     shift, and enter state 109

	Priority       goto state 210

State 35

	%start_pEnabler -> . Enabler                        (rule 35)

	'provided'     shift, and enter state 209

	Enabler        goto state 208

State 36

	%start_pSequence -> . Sequence                      (rule 36)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)


	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 206
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 37

	%start_pUStmt -> . UStmt                            (rule 37)

	'unless'       shift, and enter state 205
	%eof           reduce using rule 170

	UStmt          goto state 204

State 38

	%start_pStep -> . Step                              (rule 38)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)


	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Step           goto state 197
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 39

	%start_pVarRefList -> . VarRefList                  (rule 39)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRefList     goto state 190
	VarRef         goto state 191
	Name           goto state 145

State 40

	%start_pAnyExpr -> . AnyExpr                        (rule 40)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 189
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 41

	%start_pIvar -> . Ivar                              (rule 41)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Ivar           goto state 187
	Name           goto state 188

State 42

	%start_pIvarConst -> . IvarConst                    (rule 42)

	'['            shift, and enter state 186
	%eof           reduce using rule 196

	IvarConst      goto state 185

State 43

	%start_pIvarAssign -> . IvarAssign                  (rule 43)

	'='            shift, and enter state 184
	%eof           reduce using rule 198

	IvarAssign     goto state 183

State 44

	%start_pChInit -> . ChInit                          (rule 44)

	'['            shift, and enter state 182

	ChInit         goto state 181

State 45

	%start_pChType -> . ChType                          (rule 45)

	'bit'          shift, and enter state 174
	'bool'         shift, and enter state 175
	'byte'         shift, and enter state 176
	'chan'         shift, and enter state 177
	'int'          shift, and enter state 178
	'mtype'        shift, and enter state 179
	'short'        shift, and enter state 180
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Typename       goto state 171
	ChType         goto state 172
	Uname          goto state 173
	Name           goto state 76

State 46

	%start_pVarRef -> . VarRef                          (rule 46)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 170
	Name           goto state 145

State 47

	%start_pVarRefAnyExpr -> . VarRefAnyExpr            (rule 47)

	'['            shift, and enter state 169
	%eof           reduce using rule 205

	VarRefAnyExpr  goto state 168

State 48

	%start_pVarRefTypedef -> . VarRefTypedef            (rule 48)

	'.'            shift, and enter state 167
	%eof           reduce using rule 207

	VarRefTypedef  goto state 166

State 49

	%start_pSend -> . Send                              (rule 49)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 164
	Send           goto state 165
	Name           goto state 145

State 50

	%start_pReceive -> . Receive                        (rule 50)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 162
	Receive        goto state 163
	Name           goto state 145

State 51

	%start_pPoll -> . Poll                              (rule 51)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 160
	Poll           goto state 161
	Name           goto state 145

State 52

	%start_pSendArgs -> . SendArgs                      (rule 52)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
	%eof           reduce using rule 221

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 157
	VarRef         goto state 82
	Poll           goto state 83
	SendArgs       goto state 158
	ArgList        goto state 159
	Name           goto state 85

State 53

	%start_pArgList -> . ArgList                        (rule 53)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
	%eof           reduce using rule 221

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 103
	VarRef         goto state 82
	Poll           goto state 83
	ArgList        goto state 156
	Name           goto state 85

State 54

	%start_pRecvArgs -> . RecvArgs                      (rule 54)

	'-'            shift, and enter state 149
	'eval'         shift, and enter state 150
	'false'        reduce using rule 226
	'skip'         reduce using rule 226
	'true'         reduce using rule 226
	L_integ        reduce using rule 226
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 146
	RecvArgs       goto state 154
	RecvArgList    goto state 155
	UnaryMinus     goto state 147
	RecvArg        goto state 153
	Name           goto state 145

State 55

	%start_pRecvArgList -> . RecvArgList                (rule 55)

	'-'            shift, and enter state 149
	'eval'         shift, and enter state 150
	'false'        reduce using rule 226
	'skip'         reduce using rule 226
	'true'         reduce using rule 226
	L_integ        reduce using rule 226
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 146
	RecvArgList    goto state 152
	UnaryMinus     goto state 147
	RecvArg        goto state 153
	Name           goto state 145

State 56

	%start_pUnaryMinus -> . UnaryMinus                  (rule 56)

	'-'            shift, and enter state 149
	%eof           reduce using rule 226

	UnaryMinus     goto state 151

State 57

	%start_pRecvArg -> . RecvArg                        (rule 57)

	'-'            shift, and enter state 149
	'eval'         shift, and enter state 150
	'false'        reduce using rule 226
	'skip'         reduce using rule 226
	'true'         reduce using rule 226
	L_integ        reduce using rule 226
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 146
	UnaryMinus     goto state 147
	RecvArg        goto state 148
	Name           goto state 145

State 58

	%start_pAssign -> . Assign                          (rule 58)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 143
	Assign         goto state 144
	Name           goto state 145

State 59

	%start_pPargs -> . Pargs                            (rule 59)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_quoted       shift, and enter state 142
	L_PIdent       shift, and enter state 74
	%eof           reduce using rule 221

	Integer        goto state 77
	String         goto state 139
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 103
	VarRef         goto state 82
	Poll           goto state 83
	ArgList        goto state 140
	Pargs          goto state 141
	Name           goto state 85

State 60

	%start_pPArgList -> . PArgList                      (rule 60)

	%eof           reduce using rule 237

	PArgList       goto state 138

State 61

	%start_pPargList -> . PargList                      (rule 61)

	','            shift, and enter state 137

	PargList       goto state 136

State 62

	%start_pStmt -> . Stmt                              (rule 62)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'break'        shift, and enter state 124
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'if'           shift, and enter state 130
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 119
	Expr           goto state 120
	Name           goto state 121

State 63

	%start_pRange -> . Range                            (rule 63)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Range          goto state 112
	Name           goto state 113

State 64

	%start_pOptions -> . Options                        (rule 64)

	'::'           shift, and enter state 111

	Options        goto state 110

State 65

	%start_pRunPrio -> . RunPrio                        (rule 65)

	'priority'     shift, and enter state 109
	%eof           reduce using rule 261

	Priority       goto state 107
	RunPrio        goto state 108

State 66

	%start_pRunArgs -> . RunArgs                        (rule 66)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
	%eof           reduce using rule 263
			(reduce using rule 221)


	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 103
	VarRef         goto state 82
	Poll           goto state 83
	ArgList        goto state 104
	RunArgs        goto state 105
	Name           goto state 85

State 67

	%start_pExpr -> . Expr                              (rule 67)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 81
	VarRef         goto state 82
	Poll           goto state 83
	Expr           goto state 84
	Name           goto state 85

State 68

	%start_pUname -> . Uname                            (rule 68)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Uname          goto state 75
	Name           goto state 76

State 69

	%start_pName -> . Name                              (rule 69)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Name           goto state 73

State 70

	Integer -> . L_integ                                (rule 70)

	L_integ        shift, and enter state 71


State 71

	Integer -> L_integ .                                (rule 70)

	'!'            reduce using rule 70
	'!='           reduce using rule 70
	'%'            reduce using rule 70
	'&'            reduce using rule 70
	'&&'           reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'->'           reduce using rule 70
	'..'           reduce using rule 70
	'/'            reduce using rule 70
	':'            reduce using rule 70
	'::'           reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<<'           reduce using rule 70
	'<='           reduce using rule 70
	'='            reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'>>'           reduce using rule 70
	']'            reduce using rule 70
	'^'            reduce using rule 70
	'active'       reduce using rule 70
	'assert'       reduce using rule 70
	'atomic'       reduce using rule 70
	'bit'          reduce using rule 70
	'bool'         reduce using rule 70
	'break'        reduce using rule 70
	'byte'         reduce using rule 70
	'chan'         reduce using rule 70
	'd_step'       reduce using rule 70
	'do'           reduce using rule 70
	'else'         reduce using rule 70
	'empty'        reduce using rule 70
	'enabled'      reduce using rule 70
	'eval'         reduce using rule 70
	'false'        reduce using rule 70
	'fi'           reduce using rule 70
	'for'          reduce using rule 70
	'full'         reduce using rule 70
	'get_priority' reduce using rule 70
	'goto'         reduce using rule 70
	'hidden'       reduce using rule 70
	'if'           reduce using rule 70
	'init'         reduce using rule 70
	'inline'       reduce using rule 70
	'int'          reduce using rule 70
	'len'          reduce using rule 70
	'mtype'        reduce using rule 70
	'never'        reduce using rule 70
	'np_'          reduce using rule 70
	'od'           reduce using rule 70
	'pc_value'     reduce using rule 70
	'print'        reduce using rule 70
	'printf'       reduce using rule 70
	'printm'       reduce using rule 70
	'proctype'     reduce using rule 70
	'provided'     reduce using rule 70
	'run'          reduce using rule 70
	'select'       reduce using rule 70
	'set_priority' reduce using rule 70
	'short'        reduce using rule 70
	'show'         reduce using rule 70
	'skip'         reduce using rule 70
	'timeout'      reduce using rule 70
	'trace'        reduce using rule 70
	'true'         reduce using rule 70
	'typedef'      reduce using rule 70
	'unless'       reduce using rule 70
	'unsigned'     reduce using rule 70
	'xr'           reduce using rule 70
	'xs'           reduce using rule 70
	'{'            reduce using rule 70
	'|'            reduce using rule 70
	'||'           reduce using rule 70
	'}'            reduce using rule 70
	'~'            reduce using rule 70
	L_integ        reduce using rule 70
	L_PIdent       reduce using rule 70
	%eof           reduce using rule 70


State 72

	Name -> PIdent .                                    (rule 270)

	'!'            reduce using rule 270
	'!='           reduce using rule 270
	'%'            reduce using rule 270
	'&'            reduce using rule 270
	'&&'           reduce using rule 270
	'('            reduce using rule 270
	')'            reduce using rule 270
	'*'            reduce using rule 270
	'+'            reduce using rule 270
	','            reduce using rule 270
	'-'            reduce using rule 270
	'->'           reduce using rule 270
	'.'            reduce using rule 270
	'..'           reduce using rule 270
	'/'            reduce using rule 270
	':'            reduce using rule 270
	'::'           reduce using rule 270
	';'            reduce using rule 270
	'<'            reduce using rule 270
	'<<'           reduce using rule 270
	'<='           reduce using rule 270
	'='            reduce using rule 270
	'=='           reduce using rule 270
	'>'            reduce using rule 270
	'>='           reduce using rule 270
	'>>'           reduce using rule 270
	'?'            reduce using rule 270
	'['            reduce using rule 270
	']'            reduce using rule 270
	'^'            reduce using rule 270
	'active'       reduce using rule 270
	'assert'       reduce using rule 270
	'atomic'       reduce using rule 270
	'bit'          reduce using rule 270
	'bool'         reduce using rule 270
	'break'        reduce using rule 270
	'byte'         reduce using rule 270
	'chan'         reduce using rule 270
	'd_step'       reduce using rule 270
	'do'           reduce using rule 270
	'else'         reduce using rule 270
	'empty'        reduce using rule 270
	'enabled'      reduce using rule 270
	'eval'         reduce using rule 270
	'false'        reduce using rule 270
	'fi'           reduce using rule 270
	'for'          reduce using rule 270
	'full'         reduce using rule 270
	'get_priority' reduce using rule 270
	'goto'         reduce using rule 270
	'hidden'       reduce using rule 270
	'if'           reduce using rule 270
	'in'           reduce using rule 270
	'init'         reduce using rule 270
	'inline'       reduce using rule 270
	'int'          reduce using rule 270
	'len'          reduce using rule 270
	'mtype'        reduce using rule 270
	'never'        reduce using rule 270
	'np_'          reduce using rule 270
	'od'           reduce using rule 270
	'pc_value'     reduce using rule 270
	'print'        reduce using rule 270
	'printf'       reduce using rule 270
	'printm'       reduce using rule 270
	'proctype'     reduce using rule 270
	'run'          reduce using rule 270
	'select'       reduce using rule 270
	'set_priority' reduce using rule 270
	'short'        reduce using rule 270
	'show'         reduce using rule 270
	'skip'         reduce using rule 270
	'timeout'      reduce using rule 270
	'trace'        reduce using rule 270
	'true'         reduce using rule 270
	'typedef'      reduce using rule 270
	'unless'       reduce using rule 270
	'unsigned'     reduce using rule 270
	'xr'           reduce using rule 270
	'xs'           reduce using rule 270
	'{'            reduce using rule 270
	'|'            reduce using rule 270
	'||'           reduce using rule 270
	'}'            reduce using rule 270
	'~'            reduce using rule 270
	L_integ        reduce using rule 270
	L_PIdent       reduce using rule 270
	%eof           reduce using rule 270


State 73

	%start_pName -> Name .                              (rule 69)

	%eof           accept


State 74

	PIdent -> L_PIdent .                                (rule 72)

	'!'            reduce using rule 72
	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&'            reduce using rule 72
	'&&'           reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'->'           reduce using rule 72
	'.'            reduce using rule 72
	'..'           reduce using rule 72
	'/'            reduce using rule 72
	':'            reduce using rule 72
	'::'           reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<<'           reduce using rule 72
	'<='           reduce using rule 72
	'='            reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'>>'           reduce using rule 72
	'?'            reduce using rule 72
	'['            reduce using rule 72
	']'            reduce using rule 72
	'^'            reduce using rule 72
	'active'       reduce using rule 72
	'assert'       reduce using rule 72
	'atomic'       reduce using rule 72
	'bit'          reduce using rule 72
	'bool'         reduce using rule 72
	'break'        reduce using rule 72
	'byte'         reduce using rule 72
	'chan'         reduce using rule 72
	'd_step'       reduce using rule 72
	'do'           reduce using rule 72
	'else'         reduce using rule 72
	'empty'        reduce using rule 72
	'enabled'      reduce using rule 72
	'eval'         reduce using rule 72
	'false'        reduce using rule 72
	'fi'           reduce using rule 72
	'for'          reduce using rule 72
	'full'         reduce using rule 72
	'get_priority' reduce using rule 72
	'goto'         reduce using rule 72
	'hidden'       reduce using rule 72
	'if'           reduce using rule 72
	'in'           reduce using rule 72
	'init'         reduce using rule 72
	'inline'       reduce using rule 72
	'int'          reduce using rule 72
	'len'          reduce using rule 72
	'mtype'        reduce using rule 72
	'never'        reduce using rule 72
	'np_'          reduce using rule 72
	'od'           reduce using rule 72
	'pc_value'     reduce using rule 72
	'print'        reduce using rule 72
	'printf'       reduce using rule 72
	'printm'       reduce using rule 72
	'proctype'     reduce using rule 72
	'run'          reduce using rule 72
	'select'       reduce using rule 72
	'set_priority' reduce using rule 72
	'short'        reduce using rule 72
	'show'         reduce using rule 72
	'skip'         reduce using rule 72
	'timeout'      reduce using rule 72
	'trace'        reduce using rule 72
	'true'         reduce using rule 72
	'typedef'      reduce using rule 72
	'unless'       reduce using rule 72
	'unsigned'     reduce using rule 72
	'xr'           reduce using rule 72
	'xs'           reduce using rule 72
	'{'            reduce using rule 72
	'|'            reduce using rule 72
	'||'           reduce using rule 72
	'}'            reduce using rule 72
	'~'            reduce using rule 72
	L_integ        reduce using rule 72
	L_PIdent       reduce using rule 72
	%eof           reduce using rule 72


State 75

	%start_pUname -> Uname .                            (rule 68)

	%eof           accept


State 76

	Uname -> Name .                                     (rule 269)

	','            reduce using rule 269
	'}'            reduce using rule 269
	L_PIdent       reduce using rule 269
	%eof           reduce using rule 269


State 77

	Const -> Integer .                                  (rule 114)

	'!'            reduce using rule 114
	'!='           reduce using rule 114
	'%'            reduce using rule 114
	'&'            reduce using rule 114
	'&&'           reduce using rule 114
	'('            reduce using rule 114
	')'            reduce using rule 114
	'*'            reduce using rule 114
	'+'            reduce using rule 114
	','            reduce using rule 114
	'-'            reduce using rule 114
	'->'           reduce using rule 114
	'..'           reduce using rule 114
	'/'            reduce using rule 114
	':'            reduce using rule 114
	'::'           reduce using rule 114
	';'            reduce using rule 114
	'<'            reduce using rule 114
	'<<'           reduce using rule 114
	'<='           reduce using rule 114
	'='            reduce using rule 114
	'=='           reduce using rule 114
	'>'            reduce using rule 114
	'>='           reduce using rule 114
	'>>'           reduce using rule 114
	']'            reduce using rule 114
	'^'            reduce using rule 114
	'active'       reduce using rule 114
	'assert'       reduce using rule 114
	'atomic'       reduce using rule 114
	'bit'          reduce using rule 114
	'bool'         reduce using rule 114
	'break'        reduce using rule 114
	'byte'         reduce using rule 114
	'chan'         reduce using rule 114
	'd_step'       reduce using rule 114
	'do'           reduce using rule 114
	'else'         reduce using rule 114
	'empty'        reduce using rule 114
	'enabled'      reduce using rule 114
	'eval'         reduce using rule 114
	'false'        reduce using rule 114
	'fi'           reduce using rule 114
	'for'          reduce using rule 114
	'full'         reduce using rule 114
	'get_priority' reduce using rule 114
	'goto'         reduce using rule 114
	'hidden'       reduce using rule 114
	'if'           reduce using rule 114
	'init'         reduce using rule 114
	'inline'       reduce using rule 114
	'int'          reduce using rule 114
	'len'          reduce using rule 114
	'mtype'        reduce using rule 114
	'never'        reduce using rule 114
	'np_'          reduce using rule 114
	'od'           reduce using rule 114
	'pc_value'     reduce using rule 114
	'print'        reduce using rule 114
	'printf'       reduce using rule 114
	'printm'       reduce using rule 114
	'proctype'     reduce using rule 114
	'provided'     reduce using rule 114
	'run'          reduce using rule 114
	'select'       reduce using rule 114
	'set_priority' reduce using rule 114
	'short'        reduce using rule 114
	'show'         reduce using rule 114
	'skip'         reduce using rule 114
	'timeout'      reduce using rule 114
	'trace'        reduce using rule 114
	'true'         reduce using rule 114
	'typedef'      reduce using rule 114
	'unless'       reduce using rule 114
	'unsigned'     reduce using rule 114
	'xr'           reduce using rule 114
	'xs'           reduce using rule 114
	'{'            reduce using rule 114
	'|'            reduce using rule 114
	'||'           reduce using rule 114
	'}'            reduce using rule 114
	'~'            reduce using rule 114
	L_integ        reduce using rule 114
	L_PIdent       reduce using rule 114
	%eof           reduce using rule 114


State 78

	Expr -> ChanPoll . '(' VarRef ')'                   (rule 268)

	'('            shift, and enter state 373


State 79

	AnyExpr -> UnrOp . AnyExpr                          (rule 181)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 372
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 80

	AnyExpr -> Const .                                  (rule 186)

	'!'            reduce using rule 186
	'!='           reduce using rule 186
	'%'            reduce using rule 186
	'&'            reduce using rule 186
	'&&'           reduce using rule 186
	'('            reduce using rule 186
	')'            reduce using rule 186
	'*'            reduce using rule 186
	'+'            reduce using rule 186
	','            reduce using rule 186
	'-'            reduce using rule 186
	'->'           reduce using rule 186
	'..'           reduce using rule 186
	'/'            reduce using rule 186
	':'            reduce using rule 186
	'::'           reduce using rule 186
	';'            reduce using rule 186
	'<'            reduce using rule 186
	'<<'           reduce using rule 186
	'<='           reduce using rule 186
	'=='           reduce using rule 186
	'>'            reduce using rule 186
	'>='           reduce using rule 186
	'>>'           reduce using rule 186
	']'            reduce using rule 186
	'^'            reduce using rule 186
	'active'       reduce using rule 186
	'assert'       reduce using rule 186
	'atomic'       reduce using rule 186
	'bit'          reduce using rule 186
	'bool'         reduce using rule 186
	'break'        reduce using rule 186
	'byte'         reduce using rule 186
	'chan'         reduce using rule 186
	'd_step'       reduce using rule 186
	'do'           reduce using rule 186
	'else'         reduce using rule 186
	'empty'        reduce using rule 186
	'enabled'      reduce using rule 186
	'false'        reduce using rule 186
	'fi'           reduce using rule 186
	'for'          reduce using rule 186
	'full'         reduce using rule 186
	'get_priority' reduce using rule 186
	'goto'         reduce using rule 186
	'hidden'       reduce using rule 186
	'if'           reduce using rule 186
	'init'         reduce using rule 186
	'inline'       reduce using rule 186
	'int'          reduce using rule 186
	'len'          reduce using rule 186
	'mtype'        reduce using rule 186
	'never'        reduce using rule 186
	'np_'          reduce using rule 186
	'od'           reduce using rule 186
	'pc_value'     reduce using rule 186
	'print'        reduce using rule 186
	'printf'       reduce using rule 186
	'printm'       reduce using rule 186
	'proctype'     reduce using rule 186
	'run'          reduce using rule 186
	'select'       reduce using rule 186
	'set_priority' reduce using rule 186
	'short'        reduce using rule 186
	'show'         reduce using rule 186
	'skip'         reduce using rule 186
	'timeout'      reduce using rule 186
	'trace'        reduce using rule 186
	'true'         reduce using rule 186
	'typedef'      reduce using rule 186
	'unless'       reduce using rule 186
	'unsigned'     reduce using rule 186
	'xr'           reduce using rule 186
	'xs'           reduce using rule 186
	'{'            reduce using rule 186
	'|'            reduce using rule 186
	'||'           reduce using rule 186
	'}'            reduce using rule 186
	'~'            reduce using rule 186
	L_integ        reduce using rule 186
	L_PIdent       reduce using rule 186
	%eof           reduce using rule 186


State 81

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	Expr -> AnyExpr .                                   (rule 265)

	'!'            reduce using rule 265
	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
			(reduce using rule 265)

	'('            reduce using rule 265
	')'            reduce using rule 265
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	','            reduce using rule 265
	'-'            shift, and enter state 273
			(reduce using rule 265)

	'->'           reduce using rule 265
	'/'            shift, and enter state 274
	'::'           reduce using rule 265
	';'            reduce using rule 265
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'assert'       reduce using rule 265
	'atomic'       reduce using rule 265
	'bit'          reduce using rule 265
	'bool'         reduce using rule 265
	'break'        reduce using rule 265
	'byte'         reduce using rule 265
	'chan'         reduce using rule 265
	'd_step'       reduce using rule 265
	'do'           reduce using rule 265
	'else'         reduce using rule 265
	'empty'        reduce using rule 265
	'enabled'      reduce using rule 265
	'false'        reduce using rule 265
	'fi'           reduce using rule 265
	'for'          reduce using rule 265
	'full'         reduce using rule 265
	'get_priority' reduce using rule 265
	'goto'         reduce using rule 265
	'hidden'       reduce using rule 265
	'if'           reduce using rule 265
	'int'          reduce using rule 265
	'len'          reduce using rule 265
	'mtype'        reduce using rule 265
	'np_'          reduce using rule 265
	'od'           reduce using rule 265
	'pc_value'     reduce using rule 265
	'print'        reduce using rule 265
	'printf'       reduce using rule 265
	'printm'       reduce using rule 265
	'run'          reduce using rule 265
	'select'       reduce using rule 265
	'set_priority' reduce using rule 265
	'short'        reduce using rule 265
	'show'         reduce using rule 265
	'skip'         reduce using rule 265
	'timeout'      reduce using rule 265
	'true'         reduce using rule 265
	'unless'       reduce using rule 265
	'unsigned'     reduce using rule 265
	'xr'           reduce using rule 265
	'xs'           reduce using rule 265
	'{'            reduce using rule 265
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284
			(reduce using rule 265)

	'}'            reduce using rule 265
	'~'            reduce using rule 265
	L_integ        reduce using rule 265
	L_PIdent       reduce using rule 265
	%eof           reduce using rule 265

	AndOr          goto state 265
	BinOp          goto state 319

State 82

	AnyExpr -> VarRef .                                 (rule 185)
	Poll -> VarRef . '?' '[' RecvArgs ']'               (rule 215)
	Poll -> VarRef . '?' '?' '[' RecvArgs ']'           (rule 216)

	'!'            reduce using rule 185
	'!='           reduce using rule 185
	'%'            reduce using rule 185
	'&'            reduce using rule 185
	'&&'           reduce using rule 185
	'('            reduce using rule 185
	')'            reduce using rule 185
	'*'            reduce using rule 185
	'+'            reduce using rule 185
	','            reduce using rule 185
	'-'            reduce using rule 185
	'->'           reduce using rule 185
	'..'           reduce using rule 185
	'/'            reduce using rule 185
	':'            reduce using rule 185
	'::'           reduce using rule 185
	';'            reduce using rule 185
	'<'            reduce using rule 185
	'<<'           reduce using rule 185
	'<='           reduce using rule 185
	'=='           reduce using rule 185
	'>'            reduce using rule 185
	'>='           reduce using rule 185
	'>>'           reduce using rule 185
	'?'            shift, and enter state 330
	']'            reduce using rule 185
	'^'            reduce using rule 185
	'active'       reduce using rule 185
	'assert'       reduce using rule 185
	'atomic'       reduce using rule 185
	'bit'          reduce using rule 185
	'bool'         reduce using rule 185
	'break'        reduce using rule 185
	'byte'         reduce using rule 185
	'chan'         reduce using rule 185
	'd_step'       reduce using rule 185
	'do'           reduce using rule 185
	'else'         reduce using rule 185
	'empty'        reduce using rule 185
	'enabled'      reduce using rule 185
	'false'        reduce using rule 185
	'fi'           reduce using rule 185
	'for'          reduce using rule 185
	'full'         reduce using rule 185
	'get_priority' reduce using rule 185
	'goto'         reduce using rule 185
	'hidden'       reduce using rule 185
	'if'           reduce using rule 185
	'init'         reduce using rule 185
	'inline'       reduce using rule 185
	'int'          reduce using rule 185
	'len'          reduce using rule 185
	'mtype'        reduce using rule 185
	'never'        reduce using rule 185
	'np_'          reduce using rule 185
	'od'           reduce using rule 185
	'pc_value'     reduce using rule 185
	'print'        reduce using rule 185
	'printf'       reduce using rule 185
	'printm'       reduce using rule 185
	'proctype'     reduce using rule 185
	'run'          reduce using rule 185
	'select'       reduce using rule 185
	'set_priority' reduce using rule 185
	'short'        reduce using rule 185
	'show'         reduce using rule 185
	'skip'         reduce using rule 185
	'timeout'      reduce using rule 185
	'trace'        reduce using rule 185
	'true'         reduce using rule 185
	'typedef'      reduce using rule 185
	'unless'       reduce using rule 185
	'unsigned'     reduce using rule 185
	'xr'           reduce using rule 185
	'xs'           reduce using rule 185
	'{'            reduce using rule 185
	'|'            reduce using rule 185
	'||'           reduce using rule 185
	'}'            reduce using rule 185
	'~'            reduce using rule 185
	L_integ        reduce using rule 185
	L_PIdent       reduce using rule 185
	%eof           reduce using rule 185


State 83

	AnyExpr -> Poll .                                   (rule 184)

	'!'            reduce using rule 184
	'!='           reduce using rule 184
	'%'            reduce using rule 184
	'&'            reduce using rule 184
	'&&'           reduce using rule 184
	'('            reduce using rule 184
	')'            reduce using rule 184
	'*'            reduce using rule 184
	'+'            reduce using rule 184
	','            reduce using rule 184
	'-'            reduce using rule 184
	'->'           reduce using rule 184
	'..'           reduce using rule 184
	'/'            reduce using rule 184
	':'            reduce using rule 184
	'::'           reduce using rule 184
	';'            reduce using rule 184
	'<'            reduce using rule 184
	'<<'           reduce using rule 184
	'<='           reduce using rule 184
	'=='           reduce using rule 184
	'>'            reduce using rule 184
	'>='           reduce using rule 184
	'>>'           reduce using rule 184
	']'            reduce using rule 184
	'^'            reduce using rule 184
	'active'       reduce using rule 184
	'assert'       reduce using rule 184
	'atomic'       reduce using rule 184
	'bit'          reduce using rule 184
	'bool'         reduce using rule 184
	'break'        reduce using rule 184
	'byte'         reduce using rule 184
	'chan'         reduce using rule 184
	'd_step'       reduce using rule 184
	'do'           reduce using rule 184
	'else'         reduce using rule 184
	'empty'        reduce using rule 184
	'enabled'      reduce using rule 184
	'false'        reduce using rule 184
	'fi'           reduce using rule 184
	'for'          reduce using rule 184
	'full'         reduce using rule 184
	'get_priority' reduce using rule 184
	'goto'         reduce using rule 184
	'hidden'       reduce using rule 184
	'if'           reduce using rule 184
	'init'         reduce using rule 184
	'inline'       reduce using rule 184
	'int'          reduce using rule 184
	'len'          reduce using rule 184
	'mtype'        reduce using rule 184
	'never'        reduce using rule 184
	'np_'          reduce using rule 184
	'od'           reduce using rule 184
	'pc_value'     reduce using rule 184
	'print'        reduce using rule 184
	'printf'       reduce using rule 184
	'printm'       reduce using rule 184
	'proctype'     reduce using rule 184
	'run'          reduce using rule 184
	'select'       reduce using rule 184
	'set_priority' reduce using rule 184
	'short'        reduce using rule 184
	'show'         reduce using rule 184
	'skip'         reduce using rule 184
	'timeout'      reduce using rule 184
	'trace'        reduce using rule 184
	'true'         reduce using rule 184
	'typedef'      reduce using rule 184
	'unless'       reduce using rule 184
	'unsigned'     reduce using rule 184
	'xr'           reduce using rule 184
	'xs'           reduce using rule 184
	'{'            reduce using rule 184
	'|'            reduce using rule 184
	'||'           reduce using rule 184
	'}'            reduce using rule 184
	'~'            reduce using rule 184
	L_integ        reduce using rule 184
	L_PIdent       reduce using rule 184
	%eof           reduce using rule 184


State 84

	%start_pExpr -> Expr .                              (rule 67)
	Expr -> Expr . AndOr Expr                           (rule 267)

	'&&'           shift, and enter state 270
	'||'           shift, and enter state 284
	%eof           accept

	AndOr          goto state 355

State 85

	AnyExpr -> Name . '[' AnyExpr ']' '@' Name          (rule 191)
	VarRef -> Name . VarRefAnyExpr VarRefTypedef        (rule 204)

	'!'            reduce using rule 205
	'!='           reduce using rule 205
	'%'            reduce using rule 205
	'&'            reduce using rule 205
	'&&'           reduce using rule 205
	'('            reduce using rule 205
	')'            reduce using rule 205
	'*'            reduce using rule 205
	'+'            reduce using rule 205
	','            reduce using rule 205
	'-'            reduce using rule 205
	'->'           reduce using rule 205
	'.'            reduce using rule 205
	'..'           reduce using rule 205
	'/'            reduce using rule 205
	':'            reduce using rule 205
	'::'           reduce using rule 205
	';'            reduce using rule 205
	'<'            reduce using rule 205
	'<<'           reduce using rule 205
	'<='           reduce using rule 205
	'=='           reduce using rule 205
	'>'            reduce using rule 205
	'>='           reduce using rule 205
	'>>'           reduce using rule 205
	'?'            reduce using rule 205
	'['            shift, and enter state 354
	']'            reduce using rule 205
	'^'            reduce using rule 205
	'active'       reduce using rule 205
	'assert'       reduce using rule 205
	'atomic'       reduce using rule 205
	'bit'          reduce using rule 205
	'bool'         reduce using rule 205
	'break'        reduce using rule 205
	'byte'         reduce using rule 205
	'chan'         reduce using rule 205
	'd_step'       reduce using rule 205
	'do'           reduce using rule 205
	'else'         reduce using rule 205
	'empty'        reduce using rule 205
	'enabled'      reduce using rule 205
	'false'        reduce using rule 205
	'fi'           reduce using rule 205
	'for'          reduce using rule 205
	'full'         reduce using rule 205
	'get_priority' reduce using rule 205
	'goto'         reduce using rule 205
	'hidden'       reduce using rule 205
	'if'           reduce using rule 205
	'init'         reduce using rule 205
	'inline'       reduce using rule 205
	'int'          reduce using rule 205
	'len'          reduce using rule 205
	'mtype'        reduce using rule 205
	'never'        reduce using rule 205
	'np_'          reduce using rule 205
	'od'           reduce using rule 205
	'pc_value'     reduce using rule 205
	'print'        reduce using rule 205
	'printf'       reduce using rule 205
	'printm'       reduce using rule 205
	'proctype'     reduce using rule 205
	'run'          reduce using rule 205
	'select'       reduce using rule 205
	'set_priority' reduce using rule 205
	'short'        reduce using rule 205
	'show'         reduce using rule 205
	'skip'         reduce using rule 205
	'timeout'      reduce using rule 205
	'trace'        reduce using rule 205
	'true'         reduce using rule 205
	'typedef'      reduce using rule 205
	'unless'       reduce using rule 205
	'unsigned'     reduce using rule 205
	'xr'           reduce using rule 205
	'xs'           reduce using rule 205
	'{'            reduce using rule 205
	'|'            reduce using rule 205
	'||'           reduce using rule 205
	'}'            reduce using rule 205
	'~'            reduce using rule 205
	L_integ        reduce using rule 205
	L_PIdent       reduce using rule 205
	%eof           reduce using rule 205

	VarRefAnyExpr  goto state 337

State 86

	UnrOp -> '!' .                                      (rule 110)

	'!'            reduce using rule 110
	'('            reduce using rule 110
	'-'            reduce using rule 110
	'enabled'      reduce using rule 110
	'false'        reduce using rule 110
	'get_priority' reduce using rule 110
	'len'          reduce using rule 110
	'np_'          reduce using rule 110
	'pc_value'     reduce using rule 110
	'run'          reduce using rule 110
	'set_priority' reduce using rule 110
	'skip'         reduce using rule 110
	'timeout'      reduce using rule 110
	'true'         reduce using rule 110
	'~'            reduce using rule 110
	L_integ        reduce using rule 110
	L_PIdent       reduce using rule 110
	%eof           reduce using rule 110


State 87

	AnyExpr -> '(' . AnyExpr ')'                        (rule 179)
	AnyExpr -> '(' . AnyExpr '->' AnyExpr ':' AnyExpr ')'    (rule 182)
	Expr -> '(' . Expr ')'                              (rule 266)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 370
	VarRef         goto state 82
	Poll           goto state 83
	Expr           goto state 371
	Name           goto state 85

State 88

	UnrOp -> '-' .                                      (rule 109)

	'!'            reduce using rule 109
	'('            reduce using rule 109
	'-'            reduce using rule 109
	'enabled'      reduce using rule 109
	'false'        reduce using rule 109
	'get_priority' reduce using rule 109
	'len'          reduce using rule 109
	'np_'          reduce using rule 109
	'pc_value'     reduce using rule 109
	'run'          reduce using rule 109
	'set_priority' reduce using rule 109
	'skip'         reduce using rule 109
	'timeout'      reduce using rule 109
	'true'         reduce using rule 109
	'~'            reduce using rule 109
	L_integ        reduce using rule 109
	L_PIdent       reduce using rule 109
	%eof           reduce using rule 109


State 89

	ChanPoll -> 'empty' . 'nfull' 'nempty'              (rule 78)

	'nfull'        shift, and enter state 369


State 90

	AnyExpr -> 'enabled' . '(' AnyExpr ')'              (rule 189)

	'('            shift, and enter state 368


State 91

	Const -> 'false' .                                  (rule 112)

	'!'            reduce using rule 112
	'!='           reduce using rule 112
	'%'            reduce using rule 112
	'&'            reduce using rule 112
	'&&'           reduce using rule 112
	'('            reduce using rule 112
	')'            reduce using rule 112
	'*'            reduce using rule 112
	'+'            reduce using rule 112
	','            reduce using rule 112
	'-'            reduce using rule 112
	'->'           reduce using rule 112
	'..'           reduce using rule 112
	'/'            reduce using rule 112
	':'            reduce using rule 112
	'::'           reduce using rule 112
	';'            reduce using rule 112
	'<'            reduce using rule 112
	'<<'           reduce using rule 112
	'<='           reduce using rule 112
	'='            reduce using rule 112
	'=='           reduce using rule 112
	'>'            reduce using rule 112
	'>='           reduce using rule 112
	'>>'           reduce using rule 112
	']'            reduce using rule 112
	'^'            reduce using rule 112
	'active'       reduce using rule 112
	'assert'       reduce using rule 112
	'atomic'       reduce using rule 112
	'bit'          reduce using rule 112
	'bool'         reduce using rule 112
	'break'        reduce using rule 112
	'byte'         reduce using rule 112
	'chan'         reduce using rule 112
	'd_step'       reduce using rule 112
	'do'           reduce using rule 112
	'else'         reduce using rule 112
	'empty'        reduce using rule 112
	'enabled'      reduce using rule 112
	'eval'         reduce using rule 112
	'false'        reduce using rule 112
	'fi'           reduce using rule 112
	'for'          reduce using rule 112
	'full'         reduce using rule 112
	'get_priority' reduce using rule 112
	'goto'         reduce using rule 112
	'hidden'       reduce using rule 112
	'if'           reduce using rule 112
	'init'         reduce using rule 112
	'inline'       reduce using rule 112
	'int'          reduce using rule 112
	'len'          reduce using rule 112
	'mtype'        reduce using rule 112
	'never'        reduce using rule 112
	'np_'          reduce using rule 112
	'od'           reduce using rule 112
	'pc_value'     reduce using rule 112
	'print'        reduce using rule 112
	'printf'       reduce using rule 112
	'printm'       reduce using rule 112
	'proctype'     reduce using rule 112
	'provided'     reduce using rule 112
	'run'          reduce using rule 112
	'select'       reduce using rule 112
	'set_priority' reduce using rule 112
	'short'        reduce using rule 112
	'show'         reduce using rule 112
	'skip'         reduce using rule 112
	'timeout'      reduce using rule 112
	'trace'        reduce using rule 112
	'true'         reduce using rule 112
	'typedef'      reduce using rule 112
	'unless'       reduce using rule 112
	'unsigned'     reduce using rule 112
	'xr'           reduce using rule 112
	'xs'           reduce using rule 112
	'{'            reduce using rule 112
	'|'            reduce using rule 112
	'||'           reduce using rule 112
	'}'            reduce using rule 112
	'~'            reduce using rule 112
	L_integ        reduce using rule 112
	L_PIdent       reduce using rule 112
	%eof           reduce using rule 112


State 92

	ChanPoll -> 'full' .                                (rule 77)

	'('            reduce using rule 77
	%eof           reduce using rule 77


State 93

	AnyExpr -> 'get_priority' . '(' Expr ')'            (rule 193)

	'('            shift, and enter state 367


State 94

	AnyExpr -> 'len' . '(' VarRef ')'                   (rule 183)

	'('            shift, and enter state 366


State 95

	AnyExpr -> 'np_' .                                  (rule 188)

	'!'            reduce using rule 188
	'!='           reduce using rule 188
	'%'            reduce using rule 188
	'&'            reduce using rule 188
	'&&'           reduce using rule 188
	'('            reduce using rule 188
	')'            reduce using rule 188
	'*'            reduce using rule 188
	'+'            reduce using rule 188
	','            reduce using rule 188
	'-'            reduce using rule 188
	'->'           reduce using rule 188
	'..'           reduce using rule 188
	'/'            reduce using rule 188
	':'            reduce using rule 188
	'::'           reduce using rule 188
	';'            reduce using rule 188
	'<'            reduce using rule 188
	'<<'           reduce using rule 188
	'<='           reduce using rule 188
	'=='           reduce using rule 188
	'>'            reduce using rule 188
	'>='           reduce using rule 188
	'>>'           reduce using rule 188
	']'            reduce using rule 188
	'^'            reduce using rule 188
	'active'       reduce using rule 188
	'assert'       reduce using rule 188
	'atomic'       reduce using rule 188
	'bit'          reduce using rule 188
	'bool'         reduce using rule 188
	'break'        reduce using rule 188
	'byte'         reduce using rule 188
	'chan'         reduce using rule 188
	'd_step'       reduce using rule 188
	'do'           reduce using rule 188
	'else'         reduce using rule 188
	'empty'        reduce using rule 188
	'enabled'      reduce using rule 188
	'false'        reduce using rule 188
	'fi'           reduce using rule 188
	'for'          reduce using rule 188
	'full'         reduce using rule 188
	'get_priority' reduce using rule 188
	'goto'         reduce using rule 188
	'hidden'       reduce using rule 188
	'if'           reduce using rule 188
	'init'         reduce using rule 188
	'inline'       reduce using rule 188
	'int'          reduce using rule 188
	'len'          reduce using rule 188
	'mtype'        reduce using rule 188
	'never'        reduce using rule 188
	'np_'          reduce using rule 188
	'od'           reduce using rule 188
	'pc_value'     reduce using rule 188
	'print'        reduce using rule 188
	'printf'       reduce using rule 188
	'printm'       reduce using rule 188
	'proctype'     reduce using rule 188
	'run'          reduce using rule 188
	'select'       reduce using rule 188
	'set_priority' reduce using rule 188
	'short'        reduce using rule 188
	'show'         reduce using rule 188
	'skip'         reduce using rule 188
	'timeout'      reduce using rule 188
	'trace'        reduce using rule 188
	'true'         reduce using rule 188
	'typedef'      reduce using rule 188
	'unless'       reduce using rule 188
	'unsigned'     reduce using rule 188
	'xr'           reduce using rule 188
	'xs'           reduce using rule 188
	'{'            reduce using rule 188
	'|'            reduce using rule 188
	'||'           reduce using rule 188
	'}'            reduce using rule 188
	'~'            reduce using rule 188
	L_integ        reduce using rule 188
	L_PIdent       reduce using rule 188
	%eof           reduce using rule 188


State 96

	AnyExpr -> 'pc_value' . '(' AnyExpr ')'             (rule 190)

	'('            shift, and enter state 365


State 97

	AnyExpr -> 'run' . Name '(' RunArgs ')' RunPrio     (rule 192)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Name           goto state 364

State 98

	AnyExpr -> 'set_priority' . '(' Expr ',' Expr ')'    (rule 194)

	'('            shift, and enter state 363


State 99

	Const -> 'skip' .                                   (rule 113)

	'!'            reduce using rule 113
	'!='           reduce using rule 113
	'%'            reduce using rule 113
	'&'            reduce using rule 113
	'&&'           reduce using rule 113
	'('            reduce using rule 113
	')'            reduce using rule 113
	'*'            reduce using rule 113
	'+'            reduce using rule 113
	','            reduce using rule 113
	'-'            reduce using rule 113
	'->'           reduce using rule 113
	'..'           reduce using rule 113
	'/'            reduce using rule 113
	':'            reduce using rule 113
	'::'           reduce using rule 113
	';'            reduce using rule 113
	'<'            reduce using rule 113
	'<<'           reduce using rule 113
	'<='           reduce using rule 113
	'='            reduce using rule 113
	'=='           reduce using rule 113
	'>'            reduce using rule 113
	'>='           reduce using rule 113
	'>>'           reduce using rule 113
	']'            reduce using rule 113
	'^'            reduce using rule 113
	'active'       reduce using rule 113
	'assert'       reduce using rule 113
	'atomic'       reduce using rule 113
	'bit'          reduce using rule 113
	'bool'         reduce using rule 113
	'break'        reduce using rule 113
	'byte'         reduce using rule 113
	'chan'         reduce using rule 113
	'd_step'       reduce using rule 113
	'do'           reduce using rule 113
	'else'         reduce using rule 113
	'empty'        reduce using rule 113
	'enabled'      reduce using rule 113
	'eval'         reduce using rule 113
	'false'        reduce using rule 113
	'fi'           reduce using rule 113
	'for'          reduce using rule 113
	'full'         reduce using rule 113
	'get_priority' reduce using rule 113
	'goto'         reduce using rule 113
	'hidden'       reduce using rule 113
	'if'           reduce using rule 113
	'init'         reduce using rule 113
	'inline'       reduce using rule 113
	'int'          reduce using rule 113
	'len'          reduce using rule 113
	'mtype'        reduce using rule 113
	'never'        reduce using rule 113
	'np_'          reduce using rule 113
	'od'           reduce using rule 113
	'pc_value'     reduce using rule 113
	'print'        reduce using rule 113
	'printf'       reduce using rule 113
	'printm'       reduce using rule 113
	'proctype'     reduce using rule 113
	'provided'     reduce using rule 113
	'run'          reduce using rule 113
	'select'       reduce using rule 113
	'set_priority' reduce using rule 113
	'short'        reduce using rule 113
	'show'         reduce using rule 113
	'skip'         reduce using rule 113
	'timeout'      reduce using rule 113
	'trace'        reduce using rule 113
	'true'         reduce using rule 113
	'typedef'      reduce using rule 113
	'unless'       reduce using rule 113
	'unsigned'     reduce using rule 113
	'xr'           reduce using rule 113
	'xs'           reduce using rule 113
	'{'            reduce using rule 113
	'|'            reduce using rule 113
	'||'           reduce using rule 113
	'}'            reduce using rule 113
	'~'            reduce using rule 113
	L_integ        reduce using rule 113
	L_PIdent       reduce using rule 113
	%eof           reduce using rule 113


State 100

	AnyExpr -> 'timeout' .                              (rule 187)

	'!'            reduce using rule 187
	'!='           reduce using rule 187
	'%'            reduce using rule 187
	'&'            reduce using rule 187
	'&&'           reduce using rule 187
	'('            reduce using rule 187
	')'            reduce using rule 187
	'*'            reduce using rule 187
	'+'            reduce using rule 187
	','            reduce using rule 187
	'-'            reduce using rule 187
	'->'           reduce using rule 187
	'..'           reduce using rule 187
	'/'            reduce using rule 187
	':'            reduce using rule 187
	'::'           reduce using rule 187
	';'            reduce using rule 187
	'<'            reduce using rule 187
	'<<'           reduce using rule 187
	'<='           reduce using rule 187
	'=='           reduce using rule 187
	'>'            reduce using rule 187
	'>='           reduce using rule 187
	'>>'           reduce using rule 187
	']'            reduce using rule 187
	'^'            reduce using rule 187
	'active'       reduce using rule 187
	'assert'       reduce using rule 187
	'atomic'       reduce using rule 187
	'bit'          reduce using rule 187
	'bool'         reduce using rule 187
	'break'        reduce using rule 187
	'byte'         reduce using rule 187
	'chan'         reduce using rule 187
	'd_step'       reduce using rule 187
	'do'           reduce using rule 187
	'else'         reduce using rule 187
	'empty'        reduce using rule 187
	'enabled'      reduce using rule 187
	'false'        reduce using rule 187
	'fi'           reduce using rule 187
	'for'          reduce using rule 187
	'full'         reduce using rule 187
	'get_priority' reduce using rule 187
	'goto'         reduce using rule 187
	'hidden'       reduce using rule 187
	'if'           reduce using rule 187
	'init'         reduce using rule 187
	'inline'       reduce using rule 187
	'int'          reduce using rule 187
	'len'          reduce using rule 187
	'mtype'        reduce using rule 187
	'never'        reduce using rule 187
	'np_'          reduce using rule 187
	'od'           reduce using rule 187
	'pc_value'     reduce using rule 187
	'print'        reduce using rule 187
	'printf'       reduce using rule 187
	'printm'       reduce using rule 187
	'proctype'     reduce using rule 187
	'run'          reduce using rule 187
	'select'       reduce using rule 187
	'set_priority' reduce using rule 187
	'short'        reduce using rule 187
	'show'         reduce using rule 187
	'skip'         reduce using rule 187
	'timeout'      reduce using rule 187
	'trace'        reduce using rule 187
	'true'         reduce using rule 187
	'typedef'      reduce using rule 187
	'unless'       reduce using rule 187
	'unsigned'     reduce using rule 187
	'xr'           reduce using rule 187
	'xs'           reduce using rule 187
	'{'            reduce using rule 187
	'|'            reduce using rule 187
	'||'           reduce using rule 187
	'}'            reduce using rule 187
	'~'            reduce using rule 187
	L_integ        reduce using rule 187
	L_PIdent       reduce using rule 187
	%eof           reduce using rule 187


State 101

	Const -> 'true' .                                   (rule 111)

	'!'            reduce using rule 111
	'!='           reduce using rule 111
	'%'            reduce using rule 111
	'&'            reduce using rule 111
	'&&'           reduce using rule 111
	'('            reduce using rule 111
	')'            reduce using rule 111
	'*'            reduce using rule 111
	'+'            reduce using rule 111
	','            reduce using rule 111
	'-'            reduce using rule 111
	'->'           reduce using rule 111
	'..'           reduce using rule 111
	'/'            reduce using rule 111
	':'            reduce using rule 111
	'::'           reduce using rule 111
	';'            reduce using rule 111
	'<'            reduce using rule 111
	'<<'           reduce using rule 111
	'<='           reduce using rule 111
	'='            reduce using rule 111
	'=='           reduce using rule 111
	'>'            reduce using rule 111
	'>='           reduce using rule 111
	'>>'           reduce using rule 111
	']'            reduce using rule 111
	'^'            reduce using rule 111
	'active'       reduce using rule 111
	'assert'       reduce using rule 111
	'atomic'       reduce using rule 111
	'bit'          reduce using rule 111
	'bool'         reduce using rule 111
	'break'        reduce using rule 111
	'byte'         reduce using rule 111
	'chan'         reduce using rule 111
	'd_step'       reduce using rule 111
	'do'           reduce using rule 111
	'else'         reduce using rule 111
	'empty'        reduce using rule 111
	'enabled'      reduce using rule 111
	'eval'         reduce using rule 111
	'false'        reduce using rule 111
	'fi'           reduce using rule 111
	'for'          reduce using rule 111
	'full'         reduce using rule 111
	'get_priority' reduce using rule 111
	'goto'         reduce using rule 111
	'hidden'       reduce using rule 111
	'if'           reduce using rule 111
	'init'         reduce using rule 111
	'inline'       reduce using rule 111
	'int'          reduce using rule 111
	'len'          reduce using rule 111
	'mtype'        reduce using rule 111
	'never'        reduce using rule 111
	'np_'          reduce using rule 111
	'od'           reduce using rule 111
	'pc_value'     reduce using rule 111
	'print'        reduce using rule 111
	'printf'       reduce using rule 111
	'printm'       reduce using rule 111
	'proctype'     reduce using rule 111
	'provided'     reduce using rule 111
	'run'          reduce using rule 111
	'select'       reduce using rule 111
	'set_priority' reduce using rule 111
	'short'        reduce using rule 111
	'show'         reduce using rule 111
	'skip'         reduce using rule 111
	'timeout'      reduce using rule 111
	'trace'        reduce using rule 111
	'true'         reduce using rule 111
	'typedef'      reduce using rule 111
	'unless'       reduce using rule 111
	'unsigned'     reduce using rule 111
	'xr'           reduce using rule 111
	'xs'           reduce using rule 111
	'{'            reduce using rule 111
	'|'            reduce using rule 111
	'||'           reduce using rule 111
	'}'            reduce using rule 111
	'~'            reduce using rule 111
	L_integ        reduce using rule 111
	L_PIdent       reduce using rule 111
	%eof           reduce using rule 111


State 102

	UnrOp -> '~' .                                      (rule 108)

	'!'            reduce using rule 108
	'('            reduce using rule 108
	'-'            reduce using rule 108
	'enabled'      reduce using rule 108
	'false'        reduce using rule 108
	'get_priority' reduce using rule 108
	'len'          reduce using rule 108
	'np_'          reduce using rule 108
	'pc_value'     reduce using rule 108
	'run'          reduce using rule 108
	'set_priority' reduce using rule 108
	'skip'         reduce using rule 108
	'timeout'      reduce using rule 108
	'true'         reduce using rule 108
	'~'            reduce using rule 108
	L_integ        reduce using rule 108
	L_PIdent       reduce using rule 108
	%eof           reduce using rule 108


State 103

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	ArgList -> AnyExpr . ',' ArgList                    (rule 219)
	ArgList -> AnyExpr .                                (rule 220)

	'!'            reduce using rule 220
	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	'('            reduce using rule 220
	')'            reduce using rule 220
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	','            shift, and enter state 332
	'-'            shift, and enter state 273
			(reduce using rule 220)

	'->'           reduce using rule 220
	'/'            shift, and enter state 274
	'::'           reduce using rule 220
	';'            reduce using rule 220
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'assert'       reduce using rule 220
	'atomic'       reduce using rule 220
	'bit'          reduce using rule 220
	'bool'         reduce using rule 220
	'break'        reduce using rule 220
	'byte'         reduce using rule 220
	'chan'         reduce using rule 220
	'd_step'       reduce using rule 220
	'do'           reduce using rule 220
	'else'         reduce using rule 220
	'empty'        reduce using rule 220
	'enabled'      reduce using rule 220
	'false'        reduce using rule 220
	'fi'           reduce using rule 220
	'for'          reduce using rule 220
	'full'         reduce using rule 220
	'get_priority' reduce using rule 220
	'goto'         reduce using rule 220
	'hidden'       reduce using rule 220
	'if'           reduce using rule 220
	'int'          reduce using rule 220
	'len'          reduce using rule 220
	'mtype'        reduce using rule 220
	'np_'          reduce using rule 220
	'od'           reduce using rule 220
	'pc_value'     reduce using rule 220
	'print'        reduce using rule 220
	'printf'       reduce using rule 220
	'printm'       reduce using rule 220
	'run'          reduce using rule 220
	'select'       reduce using rule 220
	'set_priority' reduce using rule 220
	'short'        reduce using rule 220
	'show'         reduce using rule 220
	'skip'         reduce using rule 220
	'timeout'      reduce using rule 220
	'true'         reduce using rule 220
	'unless'       reduce using rule 220
	'unsigned'     reduce using rule 220
	'xr'           reduce using rule 220
	'xs'           reduce using rule 220
	'{'            reduce using rule 220
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284
	'}'            reduce using rule 220
	'~'            reduce using rule 220
	L_integ        reduce using rule 220
	L_PIdent       reduce using rule 220
	%eof           reduce using rule 220

	AndOr          goto state 265
	BinOp          goto state 319

State 104

	RunArgs -> ArgList .                                (rule 264)

	')'            reduce using rule 264
	%eof           reduce using rule 264


State 105

	%start_pRunArgs -> RunArgs .                        (rule 66)

	%eof           accept


State 106

	AnyExpr -> '(' . AnyExpr ')'                        (rule 179)
	AnyExpr -> '(' . AnyExpr '->' AnyExpr ':' AnyExpr ')'    (rule 182)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 362
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 107

	RunPrio -> Priority .                               (rule 262)

	'!'            reduce using rule 262
	'!='           reduce using rule 262
	'%'            reduce using rule 262
	'&'            reduce using rule 262
	'&&'           reduce using rule 262
	'('            reduce using rule 262
	')'            reduce using rule 262
	'*'            reduce using rule 262
	'+'            reduce using rule 262
	','            reduce using rule 262
	'-'            reduce using rule 262
	'->'           reduce using rule 262
	'..'           reduce using rule 262
	'/'            reduce using rule 262
	':'            reduce using rule 262
	'::'           reduce using rule 262
	';'            reduce using rule 262
	'<'            reduce using rule 262
	'<<'           reduce using rule 262
	'<='           reduce using rule 262
	'=='           reduce using rule 262
	'>'            reduce using rule 262
	'>='           reduce using rule 262
	'>>'           reduce using rule 262
	']'            reduce using rule 262
	'^'            reduce using rule 262
	'active'       reduce using rule 262
	'assert'       reduce using rule 262
	'atomic'       reduce using rule 262
	'bit'          reduce using rule 262
	'bool'         reduce using rule 262
	'break'        reduce using rule 262
	'byte'         reduce using rule 262
	'chan'         reduce using rule 262
	'd_step'       reduce using rule 262
	'do'           reduce using rule 262
	'else'         reduce using rule 262
	'empty'        reduce using rule 262
	'enabled'      reduce using rule 262
	'false'        reduce using rule 262
	'fi'           reduce using rule 262
	'for'          reduce using rule 262
	'full'         reduce using rule 262
	'get_priority' reduce using rule 262
	'goto'         reduce using rule 262
	'hidden'       reduce using rule 262
	'if'           reduce using rule 262
	'init'         reduce using rule 262
	'inline'       reduce using rule 262
	'int'          reduce using rule 262
	'len'          reduce using rule 262
	'mtype'        reduce using rule 262
	'never'        reduce using rule 262
	'np_'          reduce using rule 262
	'od'           reduce using rule 262
	'pc_value'     reduce using rule 262
	'print'        reduce using rule 262
	'printf'       reduce using rule 262
	'printm'       reduce using rule 262
	'proctype'     reduce using rule 262
	'run'          reduce using rule 262
	'select'       reduce using rule 262
	'set_priority' reduce using rule 262
	'short'        reduce using rule 262
	'show'         reduce using rule 262
	'skip'         reduce using rule 262
	'timeout'      reduce using rule 262
	'trace'        reduce using rule 262
	'true'         reduce using rule 262
	'typedef'      reduce using rule 262
	'unless'       reduce using rule 262
	'unsigned'     reduce using rule 262
	'xr'           reduce using rule 262
	'xs'           reduce using rule 262
	'{'            reduce using rule 262
	'|'            reduce using rule 262
	'||'           reduce using rule 262
	'}'            reduce using rule 262
	'~'            reduce using rule 262
	L_integ        reduce using rule 262
	L_PIdent       reduce using rule 262
	%eof           reduce using rule 262


State 108

	%start_pRunPrio -> RunPrio .                        (rule 65)

	%eof           accept


State 109

	Priority -> 'priority' . Const                      (rule 164)

	'false'        shift, and enter state 91
	'skip'         shift, and enter state 99
	'true'         shift, and enter state 101
	L_integ        shift, and enter state 71

	Integer        goto state 77
	Const          goto state 361

State 110

	%start_pOptions -> Options .                        (rule 64)

	%eof           accept


State 111

	Options -> '::' . Sequence                          (rule 259)
	Options -> '::' . Sequence Options                  (rule 260)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)


	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 360
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 112

	%start_pRange -> Range .                            (rule 63)

	%eof           accept


State 113

	Range -> Name . 'in' Name                           (rule 257)
	Range -> Name . ':' AnyExpr '..' AnyExpr            (rule 258)

	':'            shift, and enter state 358
	'in'           shift, and enter state 359


State 114

	Stmt -> PrintType . '(' Pargs ')'                   (rule 253)

	'('            shift, and enter state 357


State 115

	AnyExpr -> VarRef .                                 (rule 185)
	Send -> VarRef . '!' SendArgs                       (rule 209)
	Send -> VarRef . '!' '!' SendArgs                   (rule 210)
	Receive -> VarRef . '?' RecvArgs                    (rule 211)
	Receive -> VarRef . '?' '?' RecvArgs                (rule 212)
	Receive -> VarRef . '?' '<' RecvArgs '>'            (rule 213)
	Receive -> VarRef . '?' '?' '<' RecvArgs '>'        (rule 214)
	Poll -> VarRef . '?' '[' RecvArgs ']'               (rule 215)
	Poll -> VarRef . '?' '?' '[' RecvArgs ']'           (rule 216)
	Assign -> VarRef . '=' AnyExpr                      (rule 231)
	Assign -> VarRef . '+' '+'                          (rule 232)
	Assign -> VarRef . '-' '-'                          (rule 233)

	'!'            shift, and enter state 328
			(reduce using rule 185)

	'!='           reduce using rule 185
	'%'            reduce using rule 185
	'&'            reduce using rule 185
	'&&'           reduce using rule 185
	'('            reduce using rule 185
	')'            reduce using rule 185
	'*'            reduce using rule 185
	'+'            shift, and enter state 338
			(reduce using rule 185)

	'-'            shift, and enter state 339
			(reduce using rule 185)

	'->'           reduce using rule 185
	'/'            reduce using rule 185
	'::'           reduce using rule 185
	';'            reduce using rule 185
	'<'            reduce using rule 185
	'<<'           reduce using rule 185
	'<='           reduce using rule 185
	'='            shift, and enter state 340
	'=='           reduce using rule 185
	'>'            reduce using rule 185
	'>='           reduce using rule 185
	'>>'           reduce using rule 185
	'?'            shift, and enter state 356
	'^'            reduce using rule 185
	'assert'       reduce using rule 185
	'atomic'       reduce using rule 185
	'bit'          reduce using rule 185
	'bool'         reduce using rule 185
	'break'        reduce using rule 185
	'byte'         reduce using rule 185
	'chan'         reduce using rule 185
	'd_step'       reduce using rule 185
	'do'           reduce using rule 185
	'else'         reduce using rule 185
	'empty'        reduce using rule 185
	'enabled'      reduce using rule 185
	'false'        reduce using rule 185
	'fi'           reduce using rule 185
	'for'          reduce using rule 185
	'full'         reduce using rule 185
	'get_priority' reduce using rule 185
	'goto'         reduce using rule 185
	'hidden'       reduce using rule 185
	'if'           reduce using rule 185
	'int'          reduce using rule 185
	'len'          reduce using rule 185
	'mtype'        reduce using rule 185
	'np_'          reduce using rule 185
	'od'           reduce using rule 185
	'pc_value'     reduce using rule 185
	'print'        reduce using rule 185
	'printf'       reduce using rule 185
	'printm'       reduce using rule 185
	'run'          reduce using rule 185
	'select'       reduce using rule 185
	'set_priority' reduce using rule 185
	'short'        reduce using rule 185
	'show'         reduce using rule 185
	'skip'         reduce using rule 185
	'timeout'      reduce using rule 185
	'true'         reduce using rule 185
	'unless'       reduce using rule 185
	'unsigned'     reduce using rule 185
	'xr'           reduce using rule 185
	'xs'           reduce using rule 185
	'{'            reduce using rule 185
	'|'            reduce using rule 185
	'||'           reduce using rule 185
	'}'            reduce using rule 185
	'~'            reduce using rule 185
	L_integ        reduce using rule 185
	L_PIdent       reduce using rule 185
	%eof           reduce using rule 185


State 116

	Stmt -> Send .                                      (rule 246)

	'!'            reduce using rule 246
	'('            reduce using rule 246
	')'            reduce using rule 246
	'-'            reduce using rule 246
	'->'           reduce using rule 246
	'::'           reduce using rule 246
	';'            reduce using rule 246
	'assert'       reduce using rule 246
	'atomic'       reduce using rule 246
	'bit'          reduce using rule 246
	'bool'         reduce using rule 246
	'break'        reduce using rule 246
	'byte'         reduce using rule 246
	'chan'         reduce using rule 246
	'd_step'       reduce using rule 246
	'do'           reduce using rule 246
	'else'         reduce using rule 246
	'empty'        reduce using rule 246
	'enabled'      reduce using rule 246
	'false'        reduce using rule 246
	'fi'           reduce using rule 246
	'for'          reduce using rule 246
	'full'         reduce using rule 246
	'get_priority' reduce using rule 246
	'goto'         reduce using rule 246
	'hidden'       reduce using rule 246
	'if'           reduce using rule 246
	'int'          reduce using rule 246
	'len'          reduce using rule 246
	'mtype'        reduce using rule 246
	'np_'          reduce using rule 246
	'od'           reduce using rule 246
	'pc_value'     reduce using rule 246
	'print'        reduce using rule 246
	'printf'       reduce using rule 246
	'printm'       reduce using rule 246
	'run'          reduce using rule 246
	'select'       reduce using rule 246
	'set_priority' reduce using rule 246
	'short'        reduce using rule 246
	'show'         reduce using rule 246
	'skip'         reduce using rule 246
	'timeout'      reduce using rule 246
	'true'         reduce using rule 246
	'unless'       reduce using rule 246
	'unsigned'     reduce using rule 246
	'xr'           reduce using rule 246
	'xs'           reduce using rule 246
	'{'            reduce using rule 246
	'}'            reduce using rule 246
	'~'            reduce using rule 246
	L_integ        reduce using rule 246
	L_PIdent       reduce using rule 246
	%eof           reduce using rule 246


State 117

	Stmt -> Receive .                                   (rule 247)

	'!'            reduce using rule 247
	'('            reduce using rule 247
	')'            reduce using rule 247
	'-'            reduce using rule 247
	'->'           reduce using rule 247
	'::'           reduce using rule 247
	';'            reduce using rule 247
	'assert'       reduce using rule 247
	'atomic'       reduce using rule 247
	'bit'          reduce using rule 247
	'bool'         reduce using rule 247
	'break'        reduce using rule 247
	'byte'         reduce using rule 247
	'chan'         reduce using rule 247
	'd_step'       reduce using rule 247
	'do'           reduce using rule 247
	'else'         reduce using rule 247
	'empty'        reduce using rule 247
	'enabled'      reduce using rule 247
	'false'        reduce using rule 247
	'fi'           reduce using rule 247
	'for'          reduce using rule 247
	'full'         reduce using rule 247
	'get_priority' reduce using rule 247
	'goto'         reduce using rule 247
	'hidden'       reduce using rule 247
	'if'           reduce using rule 247
	'int'          reduce using rule 247
	'len'          reduce using rule 247
	'mtype'        reduce using rule 247
	'np_'          reduce using rule 247
	'od'           reduce using rule 247
	'pc_value'     reduce using rule 247
	'print'        reduce using rule 247
	'printf'       reduce using rule 247
	'printm'       reduce using rule 247
	'run'          reduce using rule 247
	'select'       reduce using rule 247
	'set_priority' reduce using rule 247
	'short'        reduce using rule 247
	'show'         reduce using rule 247
	'skip'         reduce using rule 247
	'timeout'      reduce using rule 247
	'true'         reduce using rule 247
	'unless'       reduce using rule 247
	'unsigned'     reduce using rule 247
	'xr'           reduce using rule 247
	'xs'           reduce using rule 247
	'{'            reduce using rule 247
	'}'            reduce using rule 247
	'~'            reduce using rule 247
	L_integ        reduce using rule 247
	L_PIdent       reduce using rule 247
	%eof           reduce using rule 247


State 118

	Stmt -> Assign .                                    (rule 248)

	'!'            reduce using rule 248
	'('            reduce using rule 248
	')'            reduce using rule 248
	'-'            reduce using rule 248
	'->'           reduce using rule 248
	'::'           reduce using rule 248
	';'            reduce using rule 248
	'assert'       reduce using rule 248
	'atomic'       reduce using rule 248
	'bit'          reduce using rule 248
	'bool'         reduce using rule 248
	'break'        reduce using rule 248
	'byte'         reduce using rule 248
	'chan'         reduce using rule 248
	'd_step'       reduce using rule 248
	'do'           reduce using rule 248
	'else'         reduce using rule 248
	'empty'        reduce using rule 248
	'enabled'      reduce using rule 248
	'false'        reduce using rule 248
	'fi'           reduce using rule 248
	'for'          reduce using rule 248
	'full'         reduce using rule 248
	'get_priority' reduce using rule 248
	'goto'         reduce using rule 248
	'hidden'       reduce using rule 248
	'if'           reduce using rule 248
	'int'          reduce using rule 248
	'len'          reduce using rule 248
	'mtype'        reduce using rule 248
	'np_'          reduce using rule 248
	'od'           reduce using rule 248
	'pc_value'     reduce using rule 248
	'print'        reduce using rule 248
	'printf'       reduce using rule 248
	'printm'       reduce using rule 248
	'run'          reduce using rule 248
	'select'       reduce using rule 248
	'set_priority' reduce using rule 248
	'short'        reduce using rule 248
	'show'         reduce using rule 248
	'skip'         reduce using rule 248
	'timeout'      reduce using rule 248
	'true'         reduce using rule 248
	'unless'       reduce using rule 248
	'unsigned'     reduce using rule 248
	'xr'           reduce using rule 248
	'xs'           reduce using rule 248
	'{'            reduce using rule 248
	'}'            reduce using rule 248
	'~'            reduce using rule 248
	L_integ        reduce using rule 248
	L_PIdent       reduce using rule 248
	%eof           reduce using rule 248


State 119

	%start_pStmt -> Stmt .                              (rule 62)

	%eof           accept


State 120

	Stmt -> Expr .                                      (rule 256)
	Expr -> Expr . AndOr Expr                           (rule 267)

	'!'            reduce using rule 256
	'&&'           shift, and enter state 270
	'('            reduce using rule 256
	')'            reduce using rule 256
	'-'            reduce using rule 256
	'->'           reduce using rule 256
	'::'           reduce using rule 256
	';'            reduce using rule 256
	'assert'       reduce using rule 256
	'atomic'       reduce using rule 256
	'bit'          reduce using rule 256
	'bool'         reduce using rule 256
	'break'        reduce using rule 256
	'byte'         reduce using rule 256
	'chan'         reduce using rule 256
	'd_step'       reduce using rule 256
	'do'           reduce using rule 256
	'else'         reduce using rule 256
	'empty'        reduce using rule 256
	'enabled'      reduce using rule 256
	'false'        reduce using rule 256
	'fi'           reduce using rule 256
	'for'          reduce using rule 256
	'full'         reduce using rule 256
	'get_priority' reduce using rule 256
	'goto'         reduce using rule 256
	'hidden'       reduce using rule 256
	'if'           reduce using rule 256
	'int'          reduce using rule 256
	'len'          reduce using rule 256
	'mtype'        reduce using rule 256
	'np_'          reduce using rule 256
	'od'           reduce using rule 256
	'pc_value'     reduce using rule 256
	'print'        reduce using rule 256
	'printf'       reduce using rule 256
	'printm'       reduce using rule 256
	'run'          reduce using rule 256
	'select'       reduce using rule 256
	'set_priority' reduce using rule 256
	'short'        reduce using rule 256
	'show'         reduce using rule 256
	'skip'         reduce using rule 256
	'timeout'      reduce using rule 256
	'true'         reduce using rule 256
	'unless'       reduce using rule 256
	'unsigned'     reduce using rule 256
	'xr'           reduce using rule 256
	'xs'           reduce using rule 256
	'{'            reduce using rule 256
	'||'           shift, and enter state 284
	'}'            reduce using rule 256
	'~'            reduce using rule 256
	L_integ        reduce using rule 256
	L_PIdent       reduce using rule 256
	%eof           reduce using rule 256

	AndOr          goto state 355

State 121

	AnyExpr -> Name . '[' AnyExpr ']' '@' Name          (rule 191)
	VarRef -> Name . VarRefAnyExpr VarRefTypedef        (rule 204)
	Stmt -> Name . ':' Stmt                             (rule 252)
	Stmt -> Name . '(' ArgList ')'                      (rule 255)

	'!'            reduce using rule 205
	'!='           reduce using rule 205
	'%'            reduce using rule 205
	'&'            reduce using rule 205
	'&&'           reduce using rule 205
	'('            shift, and enter state 352
			(reduce using rule 205)

	')'            reduce using rule 205
	'*'            reduce using rule 205
	'+'            reduce using rule 205
	'-'            reduce using rule 205
	'->'           reduce using rule 205
	'.'            reduce using rule 205
	'/'            reduce using rule 205
	':'            shift, and enter state 353
	'::'           reduce using rule 205
	';'            reduce using rule 205
	'<'            reduce using rule 205
	'<<'           reduce using rule 205
	'<='           reduce using rule 205
	'='            reduce using rule 205
	'=='           reduce using rule 205
	'>'            reduce using rule 205
	'>='           reduce using rule 205
	'>>'           reduce using rule 205
	'?'            reduce using rule 205
	'['            shift, and enter state 354
	'^'            reduce using rule 205
	'assert'       reduce using rule 205
	'atomic'       reduce using rule 205
	'bit'          reduce using rule 205
	'bool'         reduce using rule 205
	'break'        reduce using rule 205
	'byte'         reduce using rule 205
	'chan'         reduce using rule 205
	'd_step'       reduce using rule 205
	'do'           reduce using rule 205
	'else'         reduce using rule 205
	'empty'        reduce using rule 205
	'enabled'      reduce using rule 205
	'false'        reduce using rule 205
	'fi'           reduce using rule 205
	'for'          reduce using rule 205
	'full'         reduce using rule 205
	'get_priority' reduce using rule 205
	'goto'         reduce using rule 205
	'hidden'       reduce using rule 205
	'if'           reduce using rule 205
	'int'          reduce using rule 205
	'len'          reduce using rule 205
	'mtype'        reduce using rule 205
	'np_'          reduce using rule 205
	'od'           reduce using rule 205
	'pc_value'     reduce using rule 205
	'print'        reduce using rule 205
	'printf'       reduce using rule 205
	'printm'       reduce using rule 205
	'run'          reduce using rule 205
	'select'       reduce using rule 205
	'set_priority' reduce using rule 205
	'short'        reduce using rule 205
	'show'         reduce using rule 205
	'skip'         reduce using rule 205
	'timeout'      reduce using rule 205
	'true'         reduce using rule 205
	'unless'       reduce using rule 205
	'unsigned'     reduce using rule 205
	'xr'           reduce using rule 205
	'xs'           reduce using rule 205
	'{'            reduce using rule 205
	'|'            reduce using rule 205
	'||'           reduce using rule 205
	'}'            reduce using rule 205
	'~'            reduce using rule 205
	L_integ        reduce using rule 205
	L_PIdent       reduce using rule 205
	%eof           reduce using rule 205

	VarRefAnyExpr  goto state 337

State 122

	Stmt -> 'assert' . Expr                             (rule 254)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 81
	VarRef         goto state 82
	Poll           goto state 83
	Expr           goto state 351
	Name           goto state 85

State 123

	Stmt -> 'atomic' . '{' Sequence '}'                 (rule 242)

	'{'            shift, and enter state 350


State 124

	Stmt -> 'break' .                                   (rule 250)

	'!'            reduce using rule 250
	'('            reduce using rule 250
	')'            reduce using rule 250
	'-'            reduce using rule 250
	'->'           reduce using rule 250
	'::'           reduce using rule 250
	';'            reduce using rule 250
	'assert'       reduce using rule 250
	'atomic'       reduce using rule 250
	'bit'          reduce using rule 250
	'bool'         reduce using rule 250
	'break'        reduce using rule 250
	'byte'         reduce using rule 250
	'chan'         reduce using rule 250
	'd_step'       reduce using rule 250
	'do'           reduce using rule 250
	'else'         reduce using rule 250
	'empty'        reduce using rule 250
	'enabled'      reduce using rule 250
	'false'        reduce using rule 250
	'fi'           reduce using rule 250
	'for'          reduce using rule 250
	'full'         reduce using rule 250
	'get_priority' reduce using rule 250
	'goto'         reduce using rule 250
	'hidden'       reduce using rule 250
	'if'           reduce using rule 250
	'int'          reduce using rule 250
	'len'          reduce using rule 250
	'mtype'        reduce using rule 250
	'np_'          reduce using rule 250
	'od'           reduce using rule 250
	'pc_value'     reduce using rule 250
	'print'        reduce using rule 250
	'printf'       reduce using rule 250
	'printm'       reduce using rule 250
	'run'          reduce using rule 250
	'select'       reduce using rule 250
	'set_priority' reduce using rule 250
	'short'        reduce using rule 250
	'show'         reduce using rule 250
	'skip'         reduce using rule 250
	'timeout'      reduce using rule 250
	'true'         reduce using rule 250
	'unless'       reduce using rule 250
	'unsigned'     reduce using rule 250
	'xr'           reduce using rule 250
	'xs'           reduce using rule 250
	'{'            reduce using rule 250
	'}'            reduce using rule 250
	'~'            reduce using rule 250
	L_integ        reduce using rule 250
	L_PIdent       reduce using rule 250
	%eof           reduce using rule 250


State 125

	Stmt -> 'd_step' . '{' Sequence '}'                 (rule 243)

	'{'            shift, and enter state 349


State 126

	Stmt -> 'do' . Options 'od'                         (rule 240)

	'::'           shift, and enter state 111

	Options        goto state 348

State 127

	Stmt -> 'else' .                                    (rule 249)

	'!'            reduce using rule 249
	'('            reduce using rule 249
	')'            reduce using rule 249
	'-'            reduce using rule 249
	'->'           reduce using rule 249
	'::'           reduce using rule 249
	';'            reduce using rule 249
	'assert'       reduce using rule 249
	'atomic'       reduce using rule 249
	'bit'          reduce using rule 249
	'bool'         reduce using rule 249
	'break'        reduce using rule 249
	'byte'         reduce using rule 249
	'chan'         reduce using rule 249
	'd_step'       reduce using rule 249
	'do'           reduce using rule 249
	'else'         reduce using rule 249
	'empty'        reduce using rule 249
	'enabled'      reduce using rule 249
	'false'        reduce using rule 249
	'fi'           reduce using rule 249
	'for'          reduce using rule 249
	'full'         reduce using rule 249
	'get_priority' reduce using rule 249
	'goto'         reduce using rule 249
	'hidden'       reduce using rule 249
	'if'           reduce using rule 249
	'int'          reduce using rule 249
	'len'          reduce using rule 249
	'mtype'        reduce using rule 249
	'np_'          reduce using rule 249
	'od'           reduce using rule 249
	'pc_value'     reduce using rule 249
	'print'        reduce using rule 249
	'printf'       reduce using rule 249
	'printm'       reduce using rule 249
	'run'          reduce using rule 249
	'select'       reduce using rule 249
	'set_priority' reduce using rule 249
	'short'        reduce using rule 249
	'show'         reduce using rule 249
	'skip'         reduce using rule 249
	'timeout'      reduce using rule 249
	'true'         reduce using rule 249
	'unless'       reduce using rule 249
	'unsigned'     reduce using rule 249
	'xr'           reduce using rule 249
	'xs'           reduce using rule 249
	'{'            reduce using rule 249
	'}'            reduce using rule 249
	'~'            reduce using rule 249
	L_integ        reduce using rule 249
	L_PIdent       reduce using rule 249
	%eof           reduce using rule 249


State 128

	Stmt -> 'for' . '(' Range ')' '{' Sequence '}'      (rule 241)

	'('            shift, and enter state 347


State 129

	Stmt -> 'goto' . Name                               (rule 251)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Name           goto state 346

State 130

	Stmt -> 'if' . Options 'fi'                         (rule 239)

	'::'           shift, and enter state 111

	Options        goto state 345

State 131

	PrintType -> 'print' .                              (rule 115)

	'('            reduce using rule 115
	%eof           reduce using rule 115


State 132

	PrintType -> 'printf' .                             (rule 116)

	'('            reduce using rule 116
	%eof           reduce using rule 116


State 133

	PrintType -> 'printm' .                             (rule 117)

	'('            reduce using rule 117
	%eof           reduce using rule 117


State 134

	Stmt -> 'select' . '(' Sequence ')'                 (rule 244)

	'('            shift, and enter state 344


State 135

	Stmt -> '{' . Sequence '}'                          (rule 245)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)


	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 343
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 136

	%start_pPargList -> PargList .                      (rule 61)

	%eof           accept


State 137

	PargList -> ',' . ArgList                           (rule 238)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
	%eof           reduce using rule 221

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 103
	VarRef         goto state 82
	Poll           goto state 83
	ArgList        goto state 342
	Name           goto state 85

State 138

	%start_pPArgList -> PArgList .                      (rule 60)

	%eof           accept


State 139

	Pargs -> String .                                   (rule 234)
	Pargs -> String . ',' ArgList                       (rule 236)

	')'            reduce using rule 234
	','            shift, and enter state 341
	%eof           reduce using rule 234


State 140

	Pargs -> ArgList .                                  (rule 235)

	')'            reduce using rule 235
	%eof           reduce using rule 235


State 141

	%start_pPargs -> Pargs .                            (rule 59)

	%eof           accept


State 142

	String -> L_quoted .                                (rule 71)

	')'            reduce using rule 71
	','            reduce using rule 71
	%eof           reduce using rule 71


State 143

	Assign -> VarRef . '=' AnyExpr                      (rule 231)
	Assign -> VarRef . '+' '+'                          (rule 232)
	Assign -> VarRef . '-' '-'                          (rule 233)

	'+'            shift, and enter state 338
	'-'            shift, and enter state 339
	'='            shift, and enter state 340


State 144

	%start_pAssign -> Assign .                          (rule 58)

	%eof           accept


State 145

	VarRef -> Name . VarRefAnyExpr VarRefTypedef        (rule 204)

	'!'            reduce using rule 205
	'!='           reduce using rule 205
	'%'            reduce using rule 205
	'&'            reduce using rule 205
	'&&'           reduce using rule 205
	'('            reduce using rule 205
	')'            reduce using rule 205
	'*'            reduce using rule 205
	'+'            reduce using rule 205
	','            reduce using rule 205
	'-'            reduce using rule 205
	'->'           reduce using rule 205
	'.'            reduce using rule 205
	'..'           reduce using rule 205
	'/'            reduce using rule 205
	':'            reduce using rule 205
	'::'           reduce using rule 205
	';'            reduce using rule 205
	'<'            reduce using rule 205
	'<<'           reduce using rule 205
	'<='           reduce using rule 205
	'='            reduce using rule 205
	'=='           reduce using rule 205
	'>'            reduce using rule 205
	'>='           reduce using rule 205
	'>>'           reduce using rule 205
	'?'            reduce using rule 205
	'['            shift, and enter state 169
	']'            reduce using rule 205
	'^'            reduce using rule 205
	'active'       reduce using rule 205
	'assert'       reduce using rule 205
	'atomic'       reduce using rule 205
	'bit'          reduce using rule 205
	'bool'         reduce using rule 205
	'break'        reduce using rule 205
	'byte'         reduce using rule 205
	'chan'         reduce using rule 205
	'd_step'       reduce using rule 205
	'do'           reduce using rule 205
	'else'         reduce using rule 205
	'empty'        reduce using rule 205
	'enabled'      reduce using rule 205
	'eval'         reduce using rule 205
	'false'        reduce using rule 205
	'fi'           reduce using rule 205
	'for'          reduce using rule 205
	'full'         reduce using rule 205
	'get_priority' reduce using rule 205
	'goto'         reduce using rule 205
	'hidden'       reduce using rule 205
	'if'           reduce using rule 205
	'init'         reduce using rule 205
	'inline'       reduce using rule 205
	'int'          reduce using rule 205
	'len'          reduce using rule 205
	'mtype'        reduce using rule 205
	'never'        reduce using rule 205
	'np_'          reduce using rule 205
	'od'           reduce using rule 205
	'pc_value'     reduce using rule 205
	'print'        reduce using rule 205
	'printf'       reduce using rule 205
	'printm'       reduce using rule 205
	'proctype'     reduce using rule 205
	'run'          reduce using rule 205
	'select'       reduce using rule 205
	'set_priority' reduce using rule 205
	'short'        reduce using rule 205
	'show'         reduce using rule 205
	'skip'         reduce using rule 205
	'timeout'      reduce using rule 205
	'trace'        reduce using rule 205
	'true'         reduce using rule 205
	'typedef'      reduce using rule 205
	'unless'       reduce using rule 205
	'unsigned'     reduce using rule 205
	'xr'           reduce using rule 205
	'xs'           reduce using rule 205
	'{'            reduce using rule 205
	'|'            reduce using rule 205
	'||'           reduce using rule 205
	'}'            reduce using rule 205
	'~'            reduce using rule 205
	L_integ        reduce using rule 205
	L_PIdent       reduce using rule 205
	%eof           reduce using rule 205

	VarRefAnyExpr  goto state 337

State 146

	RecvArg -> VarRef .                                 (rule 228)

	'!'            reduce using rule 228
	'('            reduce using rule 228
	')'            reduce using rule 228
	'-'            reduce using rule 228
	'->'           reduce using rule 228
	'::'           reduce using rule 228
	';'            reduce using rule 228
	'>'            reduce using rule 228
	']'            reduce using rule 228
	'assert'       reduce using rule 228
	'atomic'       reduce using rule 228
	'bit'          reduce using rule 228
	'bool'         reduce using rule 228
	'break'        reduce using rule 228
	'byte'         reduce using rule 228
	'chan'         reduce using rule 228
	'd_step'       reduce using rule 228
	'do'           reduce using rule 228
	'else'         reduce using rule 228
	'empty'        reduce using rule 228
	'enabled'      reduce using rule 228
	'eval'         reduce using rule 228
	'false'        reduce using rule 228
	'fi'           reduce using rule 228
	'for'          reduce using rule 228
	'full'         reduce using rule 228
	'get_priority' reduce using rule 228
	'goto'         reduce using rule 228
	'hidden'       reduce using rule 228
	'if'           reduce using rule 228
	'int'          reduce using rule 228
	'len'          reduce using rule 228
	'mtype'        reduce using rule 228
	'np_'          reduce using rule 228
	'od'           reduce using rule 228
	'pc_value'     reduce using rule 228
	'print'        reduce using rule 228
	'printf'       reduce using rule 228
	'printm'       reduce using rule 228
	'run'          reduce using rule 228
	'select'       reduce using rule 228
	'set_priority' reduce using rule 228
	'short'        reduce using rule 228
	'show'         reduce using rule 228
	'skip'         reduce using rule 228
	'timeout'      reduce using rule 228
	'true'         reduce using rule 228
	'unless'       reduce using rule 228
	'unsigned'     reduce using rule 228
	'xr'           reduce using rule 228
	'xs'           reduce using rule 228
	'{'            reduce using rule 228
	'}'            reduce using rule 228
	'~'            reduce using rule 228
	L_integ        reduce using rule 228
	L_PIdent       reduce using rule 228
	%eof           reduce using rule 228


State 147

	RecvArg -> UnaryMinus . Const                       (rule 230)

	'false'        shift, and enter state 91
	'skip'         shift, and enter state 99
	'true'         shift, and enter state 101
	L_integ        shift, and enter state 71

	Integer        goto state 77
	Const          goto state 336

State 148

	%start_pRecvArg -> RecvArg .                        (rule 57)

	%eof           accept


State 149

	UnaryMinus -> '-' .                                 (rule 227)

	'false'        reduce using rule 227
	'skip'         reduce using rule 227
	'true'         reduce using rule 227
	L_integ        reduce using rule 227
	%eof           reduce using rule 227


State 150

	RecvArg -> 'eval' . '(' VarRef ')'                  (rule 229)

	'('            shift, and enter state 335


State 151

	%start_pUnaryMinus -> UnaryMinus .                  (rule 56)

	%eof           accept


State 152

	%start_pRecvArgList -> RecvArgList .                (rule 55)

	%eof           accept


State 153

	RecvArgList -> RecvArg .                            (rule 224)
	RecvArgList -> RecvArg . RecvArgList                (rule 225)

	'!'            reduce using rule 224
	'('            reduce using rule 224
	')'            reduce using rule 224
	'-'            shift, and enter state 149
			(reduce using rule 224)

	'->'           reduce using rule 224
	'::'           reduce using rule 224
	';'            reduce using rule 224
	'>'            reduce using rule 224
	']'            reduce using rule 224
	'assert'       reduce using rule 224
	'atomic'       reduce using rule 224
	'bit'          reduce using rule 224
	'bool'         reduce using rule 224
	'break'        reduce using rule 224
	'byte'         reduce using rule 224
	'chan'         reduce using rule 224
	'd_step'       reduce using rule 224
	'do'           reduce using rule 224
	'else'         reduce using rule 224
	'empty'        reduce using rule 224
	'enabled'      reduce using rule 224
	'eval'         shift, and enter state 150
	'false'        reduce using rule 226
			(reduce using rule 224)

	'fi'           reduce using rule 224
	'for'          reduce using rule 224
	'full'         reduce using rule 224
	'get_priority' reduce using rule 224
	'goto'         reduce using rule 224
	'hidden'       reduce using rule 224
	'if'           reduce using rule 224
	'int'          reduce using rule 224
	'len'          reduce using rule 224
	'mtype'        reduce using rule 224
	'np_'          reduce using rule 224
	'od'           reduce using rule 224
	'pc_value'     reduce using rule 224
	'print'        reduce using rule 224
	'printf'       reduce using rule 224
	'printm'       reduce using rule 224
	'run'          reduce using rule 224
	'select'       reduce using rule 224
	'set_priority' reduce using rule 224
	'short'        reduce using rule 224
	'show'         reduce using rule 224
	'skip'         reduce using rule 226
			(reduce using rule 224)

	'timeout'      reduce using rule 224
	'true'         reduce using rule 226
			(reduce using rule 224)

	'unless'       reduce using rule 224
	'unsigned'     reduce using rule 224
	'xr'           reduce using rule 224
	'xs'           reduce using rule 224
	'{'            reduce using rule 224
	'}'            reduce using rule 224
	'~'            reduce using rule 224
	L_integ        reduce using rule 226
			(reduce using rule 224)

	L_PIdent       shift, and enter state 74
			(reduce using rule 224)

	%eof           reduce using rule 224

	PIdent         goto state 72
	VarRef         goto state 146
	RecvArgList    goto state 334
	UnaryMinus     goto state 147
	RecvArg        goto state 153
	Name           goto state 145

State 154

	%start_pRecvArgs -> RecvArgs .                      (rule 54)

	%eof           accept


State 155

	RecvArgs -> RecvArgList .                           (rule 222)
	RecvArgs -> RecvArgList . '(' RecvArgs ')'          (rule 223)

	'!'            reduce using rule 222
	'('            shift, and enter state 333
			(reduce using rule 222)

	')'            reduce using rule 222
	'-'            reduce using rule 222
	'->'           reduce using rule 222
	'::'           reduce using rule 222
	';'            reduce using rule 222
	'>'            reduce using rule 222
	']'            reduce using rule 222
	'assert'       reduce using rule 222
	'atomic'       reduce using rule 222
	'bit'          reduce using rule 222
	'bool'         reduce using rule 222
	'break'        reduce using rule 222
	'byte'         reduce using rule 222
	'chan'         reduce using rule 222
	'd_step'       reduce using rule 222
	'do'           reduce using rule 222
	'else'         reduce using rule 222
	'empty'        reduce using rule 222
	'enabled'      reduce using rule 222
	'false'        reduce using rule 222
	'fi'           reduce using rule 222
	'for'          reduce using rule 222
	'full'         reduce using rule 222
	'get_priority' reduce using rule 222
	'goto'         reduce using rule 222
	'hidden'       reduce using rule 222
	'if'           reduce using rule 222
	'int'          reduce using rule 222
	'len'          reduce using rule 222
	'mtype'        reduce using rule 222
	'np_'          reduce using rule 222
	'od'           reduce using rule 222
	'pc_value'     reduce using rule 222
	'print'        reduce using rule 222
	'printf'       reduce using rule 222
	'printm'       reduce using rule 222
	'run'          reduce using rule 222
	'select'       reduce using rule 222
	'set_priority' reduce using rule 222
	'short'        reduce using rule 222
	'show'         reduce using rule 222
	'skip'         reduce using rule 222
	'timeout'      reduce using rule 222
	'true'         reduce using rule 222
	'unless'       reduce using rule 222
	'unsigned'     reduce using rule 222
	'xr'           reduce using rule 222
	'xs'           reduce using rule 222
	'{'            reduce using rule 222
	'}'            reduce using rule 222
	'~'            reduce using rule 222
	L_integ        reduce using rule 222
	L_PIdent       reduce using rule 222
	%eof           reduce using rule 222


State 156

	%start_pArgList -> ArgList .                        (rule 53)

	%eof           accept


State 157

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	SendArgs -> AnyExpr . '(' ArgList ')'               (rule 218)
	ArgList -> AnyExpr . ',' ArgList                    (rule 219)
	ArgList -> AnyExpr .                                (rule 220)

	'!'            reduce using rule 220
	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	'('            shift, and enter state 331
			(reduce using rule 220)

	')'            reduce using rule 220
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	','            shift, and enter state 332
	'-'            shift, and enter state 273
			(reduce using rule 220)

	'->'           reduce using rule 220
	'/'            shift, and enter state 274
	'::'           reduce using rule 220
	';'            reduce using rule 220
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'assert'       reduce using rule 220
	'atomic'       reduce using rule 220
	'bit'          reduce using rule 220
	'bool'         reduce using rule 220
	'break'        reduce using rule 220
	'byte'         reduce using rule 220
	'chan'         reduce using rule 220
	'd_step'       reduce using rule 220
	'do'           reduce using rule 220
	'else'         reduce using rule 220
	'empty'        reduce using rule 220
	'enabled'      reduce using rule 220
	'false'        reduce using rule 220
	'fi'           reduce using rule 220
	'for'          reduce using rule 220
	'full'         reduce using rule 220
	'get_priority' reduce using rule 220
	'goto'         reduce using rule 220
	'hidden'       reduce using rule 220
	'if'           reduce using rule 220
	'int'          reduce using rule 220
	'len'          reduce using rule 220
	'mtype'        reduce using rule 220
	'np_'          reduce using rule 220
	'od'           reduce using rule 220
	'pc_value'     reduce using rule 220
	'print'        reduce using rule 220
	'printf'       reduce using rule 220
	'printm'       reduce using rule 220
	'run'          reduce using rule 220
	'select'       reduce using rule 220
	'set_priority' reduce using rule 220
	'short'        reduce using rule 220
	'show'         reduce using rule 220
	'skip'         reduce using rule 220
	'timeout'      reduce using rule 220
	'true'         reduce using rule 220
	'unless'       reduce using rule 220
	'unsigned'     reduce using rule 220
	'xr'           reduce using rule 220
	'xs'           reduce using rule 220
	'{'            reduce using rule 220
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284
	'}'            reduce using rule 220
	'~'            reduce using rule 220
	L_integ        reduce using rule 220
	L_PIdent       reduce using rule 220
	%eof           reduce using rule 220

	AndOr          goto state 265
	BinOp          goto state 319

State 158

	%start_pSendArgs -> SendArgs .                      (rule 52)

	%eof           accept


State 159

	SendArgs -> ArgList .                               (rule 217)

	'!'            reduce using rule 217
	'('            reduce using rule 217
	')'            reduce using rule 217
	'-'            reduce using rule 217
	'->'           reduce using rule 217
	'::'           reduce using rule 217
	';'            reduce using rule 217
	'assert'       reduce using rule 217
	'atomic'       reduce using rule 217
	'bit'          reduce using rule 217
	'bool'         reduce using rule 217
	'break'        reduce using rule 217
	'byte'         reduce using rule 217
	'chan'         reduce using rule 217
	'd_step'       reduce using rule 217
	'do'           reduce using rule 217
	'else'         reduce using rule 217
	'empty'        reduce using rule 217
	'enabled'      reduce using rule 217
	'false'        reduce using rule 217
	'fi'           reduce using rule 217
	'for'          reduce using rule 217
	'full'         reduce using rule 217
	'get_priority' reduce using rule 217
	'goto'         reduce using rule 217
	'hidden'       reduce using rule 217
	'if'           reduce using rule 217
	'int'          reduce using rule 217
	'len'          reduce using rule 217
	'mtype'        reduce using rule 217
	'np_'          reduce using rule 217
	'od'           reduce using rule 217
	'pc_value'     reduce using rule 217
	'print'        reduce using rule 217
	'printf'       reduce using rule 217
	'printm'       reduce using rule 217
	'run'          reduce using rule 217
	'select'       reduce using rule 217
	'set_priority' reduce using rule 217
	'short'        reduce using rule 217
	'show'         reduce using rule 217
	'skip'         reduce using rule 217
	'timeout'      reduce using rule 217
	'true'         reduce using rule 217
	'unless'       reduce using rule 217
	'unsigned'     reduce using rule 217
	'xr'           reduce using rule 217
	'xs'           reduce using rule 217
	'{'            reduce using rule 217
	'}'            reduce using rule 217
	'~'            reduce using rule 217
	L_integ        reduce using rule 217
	L_PIdent       reduce using rule 217
	%eof           reduce using rule 217


State 160

	Poll -> VarRef . '?' '[' RecvArgs ']'               (rule 215)
	Poll -> VarRef . '?' '?' '[' RecvArgs ']'           (rule 216)

	'?'            shift, and enter state 330


State 161

	%start_pPoll -> Poll .                              (rule 51)

	%eof           accept


State 162

	Receive -> VarRef . '?' RecvArgs                    (rule 211)
	Receive -> VarRef . '?' '?' RecvArgs                (rule 212)
	Receive -> VarRef . '?' '<' RecvArgs '>'            (rule 213)
	Receive -> VarRef . '?' '?' '<' RecvArgs '>'        (rule 214)

	'?'            shift, and enter state 329


State 163

	%start_pReceive -> Receive .                        (rule 50)

	%eof           accept


State 164

	Send -> VarRef . '!' SendArgs                       (rule 209)
	Send -> VarRef . '!' '!' SendArgs                   (rule 210)

	'!'            shift, and enter state 328


State 165

	%start_pSend -> Send .                              (rule 49)

	%eof           accept


State 166

	%start_pVarRefTypedef -> VarRefTypedef .            (rule 48)

	%eof           accept


State 167

	VarRefTypedef -> '.' . VarRef                       (rule 208)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 327
	Name           goto state 145

State 168

	%start_pVarRefAnyExpr -> VarRefAnyExpr .            (rule 47)

	%eof           accept


State 169

	VarRefAnyExpr -> '[' . AnyExpr ']'                  (rule 206)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 326
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 170

	%start_pVarRef -> VarRef .                          (rule 46)

	%eof           accept


State 171

	ChType -> Typename .                                (rule 202)
	ChType -> Typename . ',' ChType                     (rule 203)

	','            shift, and enter state 325
	'}'            reduce using rule 202
	%eof           reduce using rule 202


State 172

	%start_pChType -> ChType .                          (rule 45)

	%eof           accept


State 173

	Typename -> Uname .                                 (rule 88)

	','            reduce using rule 88
	'}'            reduce using rule 88
	L_PIdent       reduce using rule 88
	%eof           reduce using rule 88


State 174

	Typename -> 'bit' .                                 (rule 81)

	','            reduce using rule 81
	'}'            reduce using rule 81
	L_PIdent       reduce using rule 81
	%eof           reduce using rule 81


State 175

	Typename -> 'bool' .                                (rule 82)

	','            reduce using rule 82
	'}'            reduce using rule 82
	L_PIdent       reduce using rule 82
	%eof           reduce using rule 82


State 176

	Typename -> 'byte' .                                (rule 83)

	','            reduce using rule 83
	'}'            reduce using rule 83
	L_PIdent       reduce using rule 83
	%eof           reduce using rule 83


State 177

	Typename -> 'chan' .                                (rule 87)

	','            reduce using rule 87
	'}'            reduce using rule 87
	L_PIdent       reduce using rule 87
	%eof           reduce using rule 87


State 178

	Typename -> 'int' .                                 (rule 85)

	','            reduce using rule 85
	'}'            reduce using rule 85
	L_PIdent       reduce using rule 85
	%eof           reduce using rule 85


State 179

	Typename -> 'mtype' .                               (rule 86)

	','            reduce using rule 86
	'}'            reduce using rule 86
	L_PIdent       reduce using rule 86
	%eof           reduce using rule 86


State 180

	Typename -> 'short' .                               (rule 84)

	','            reduce using rule 84
	'}'            reduce using rule 84
	L_PIdent       reduce using rule 84
	%eof           reduce using rule 84


State 181

	%start_pChInit -> ChInit .                          (rule 44)

	%eof           accept


State 182

	ChInit -> '[' . Const ']' 'of' '{' ChType '}'       (rule 201)

	'false'        shift, and enter state 91
	'skip'         shift, and enter state 99
	'true'         shift, and enter state 101
	L_integ        shift, and enter state 71

	Integer        goto state 77
	Const          goto state 324

State 183

	%start_pIvarAssign -> IvarAssign .                  (rule 43)

	%eof           accept


State 184

	IvarAssign -> '=' . AnyExpr                         (rule 199)
	IvarAssign -> '=' . ChInit                          (rule 200)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'['            shift, and enter state 182
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 322
	ChInit         goto state 323
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 185

	%start_pIvarConst -> IvarConst .                    (rule 42)

	%eof           accept


State 186

	IvarConst -> '[' . Const ']'                        (rule 197)

	'false'        shift, and enter state 91
	'skip'         shift, and enter state 99
	'true'         shift, and enter state 101
	L_integ        shift, and enter state 71

	Integer        goto state 77
	Const          goto state 321

State 187

	%start_pIvar -> Ivar .                              (rule 41)

	%eof           accept


State 188

	Ivar -> Name . IvarConst IvarAssign                 (rule 195)

	'!'            reduce using rule 196
	'('            reduce using rule 196
	')'            reduce using rule 196
	','            reduce using rule 196
	'-'            reduce using rule 196
	'->'           reduce using rule 196
	'::'           reduce using rule 196
	';'            reduce using rule 196
	'='            reduce using rule 196
	'['            shift, and enter state 186
	'active'       reduce using rule 196
	'assert'       reduce using rule 196
	'atomic'       reduce using rule 196
	'bit'          reduce using rule 196
	'bool'         reduce using rule 196
	'break'        reduce using rule 196
	'byte'         reduce using rule 196
	'chan'         reduce using rule 196
	'd_step'       reduce using rule 196
	'do'           reduce using rule 196
	'else'         reduce using rule 196
	'empty'        reduce using rule 196
	'enabled'      reduce using rule 196
	'false'        reduce using rule 196
	'fi'           reduce using rule 196
	'for'          reduce using rule 196
	'full'         reduce using rule 196
	'get_priority' reduce using rule 196
	'goto'         reduce using rule 196
	'hidden'       reduce using rule 196
	'if'           reduce using rule 196
	'init'         reduce using rule 196
	'inline'       reduce using rule 196
	'int'          reduce using rule 196
	'len'          reduce using rule 196
	'mtype'        reduce using rule 196
	'never'        reduce using rule 196
	'np_'          reduce using rule 196
	'od'           reduce using rule 196
	'pc_value'     reduce using rule 196
	'print'        reduce using rule 196
	'printf'       reduce using rule 196
	'printm'       reduce using rule 196
	'proctype'     reduce using rule 196
	'run'          reduce using rule 196
	'select'       reduce using rule 196
	'set_priority' reduce using rule 196
	'short'        reduce using rule 196
	'show'         reduce using rule 196
	'skip'         reduce using rule 196
	'timeout'      reduce using rule 196
	'trace'        reduce using rule 196
	'true'         reduce using rule 196
	'typedef'      reduce using rule 196
	'unsigned'     reduce using rule 196
	'xr'           reduce using rule 196
	'xs'           reduce using rule 196
	'{'            reduce using rule 196
	'}'            reduce using rule 196
	'~'            reduce using rule 196
	L_integ        reduce using rule 196
	L_PIdent       reduce using rule 196
	%eof           reduce using rule 196

	IvarConst      goto state 320

State 189

	%start_pAnyExpr -> AnyExpr .                        (rule 40)
	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)

	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
	'/'            shift, and enter state 274
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284
	%eof           accept

	AndOr          goto state 265
	BinOp          goto state 319

State 190

	%start_pVarRefList -> VarRefList .                  (rule 39)

	%eof           accept


State 191

	VarRefList -> VarRef .                              (rule 177)
	VarRefList -> VarRef . ',' VarRefList               (rule 178)

	'!'            reduce using rule 177
	'('            reduce using rule 177
	')'            reduce using rule 177
	','            shift, and enter state 318
	'-'            reduce using rule 177
	'->'           reduce using rule 177
	'::'           reduce using rule 177
	';'            reduce using rule 177
	'assert'       reduce using rule 177
	'atomic'       reduce using rule 177
	'bit'          reduce using rule 177
	'bool'         reduce using rule 177
	'break'        reduce using rule 177
	'byte'         reduce using rule 177
	'chan'         reduce using rule 177
	'd_step'       reduce using rule 177
	'do'           reduce using rule 177
	'else'         reduce using rule 177
	'empty'        reduce using rule 177
	'enabled'      reduce using rule 177
	'false'        reduce using rule 177
	'fi'           reduce using rule 177
	'for'          reduce using rule 177
	'full'         reduce using rule 177
	'get_priority' reduce using rule 177
	'goto'         reduce using rule 177
	'hidden'       reduce using rule 177
	'if'           reduce using rule 177
	'int'          reduce using rule 177
	'len'          reduce using rule 177
	'mtype'        reduce using rule 177
	'np_'          reduce using rule 177
	'od'           reduce using rule 177
	'pc_value'     reduce using rule 177
	'print'        reduce using rule 177
	'printf'       reduce using rule 177
	'printm'       reduce using rule 177
	'run'          reduce using rule 177
	'select'       reduce using rule 177
	'set_priority' reduce using rule 177
	'short'        reduce using rule 177
	'show'         reduce using rule 177
	'skip'         reduce using rule 177
	'timeout'      reduce using rule 177
	'true'         reduce using rule 177
	'unsigned'     reduce using rule 177
	'xr'           reduce using rule 177
	'xs'           reduce using rule 177
	'{'            reduce using rule 177
	'}'            reduce using rule 177
	'~'            reduce using rule 177
	L_integ        reduce using rule 177
	L_PIdent       reduce using rule 177
	%eof           reduce using rule 177


State 192

	DeclVisible -> Visible .                            (rule 157)

	'bit'          reduce using rule 157
	'bool'         reduce using rule 157
	'byte'         reduce using rule 157
	'chan'         reduce using rule 157
	'int'          reduce using rule 157
	'mtype'        reduce using rule 157
	'short'        reduce using rule 157
	'unsigned'     reduce using rule 157
	L_PIdent       reduce using rule 157
	%eof           reduce using rule 157


State 193

	Step -> Mtype .                                     (rule 172)

	'!'            reduce using rule 172
	'('            reduce using rule 172
	')'            reduce using rule 172
	'-'            reduce using rule 172
	'->'           reduce using rule 172
	'::'           reduce using rule 172
	';'            reduce using rule 172
	'assert'       reduce using rule 172
	'atomic'       reduce using rule 172
	'bit'          reduce using rule 172
	'bool'         reduce using rule 172
	'break'        reduce using rule 172
	'byte'         reduce using rule 172
	'chan'         reduce using rule 172
	'd_step'       reduce using rule 172
	'do'           reduce using rule 172
	'else'         reduce using rule 172
	'empty'        reduce using rule 172
	'enabled'      reduce using rule 172
	'false'        reduce using rule 172
	'fi'           reduce using rule 172
	'for'          reduce using rule 172
	'full'         reduce using rule 172
	'get_priority' reduce using rule 172
	'goto'         reduce using rule 172
	'hidden'       reduce using rule 172
	'if'           reduce using rule 172
	'int'          reduce using rule 172
	'len'          reduce using rule 172
	'mtype'        reduce using rule 172
	'np_'          reduce using rule 172
	'od'           reduce using rule 172
	'pc_value'     reduce using rule 172
	'print'        reduce using rule 172
	'printf'       reduce using rule 172
	'printm'       reduce using rule 172
	'run'          reduce using rule 172
	'select'       reduce using rule 172
	'set_priority' reduce using rule 172
	'short'        reduce using rule 172
	'show'         reduce using rule 172
	'skip'         reduce using rule 172
	'timeout'      reduce using rule 172
	'true'         reduce using rule 172
	'unsigned'     reduce using rule 172
	'xr'           reduce using rule 172
	'xs'           reduce using rule 172
	'{'            reduce using rule 172
	'}'            reduce using rule 172
	'~'            reduce using rule 172
	L_integ        reduce using rule 172
	L_PIdent       reduce using rule 172
	%eof           reduce using rule 172


State 194

	Step -> DeclList .                                  (rule 174)

	'!'            reduce using rule 174
	'('            reduce using rule 174
	')'            reduce using rule 174
	'-'            reduce using rule 174
	'->'           reduce using rule 174
	'::'           reduce using rule 174
	';'            reduce using rule 174
	'assert'       reduce using rule 174
	'atomic'       reduce using rule 174
	'bit'          reduce using rule 174
	'bool'         reduce using rule 174
	'break'        reduce using rule 174
	'byte'         reduce using rule 174
	'chan'         reduce using rule 174
	'd_step'       reduce using rule 174
	'do'           reduce using rule 174
	'else'         reduce using rule 174
	'empty'        reduce using rule 174
	'enabled'      reduce using rule 174
	'false'        reduce using rule 174
	'fi'           reduce using rule 174
	'for'          reduce using rule 174
	'full'         reduce using rule 174
	'get_priority' reduce using rule 174
	'goto'         reduce using rule 174
	'hidden'       reduce using rule 174
	'if'           reduce using rule 174
	'int'          reduce using rule 174
	'len'          reduce using rule 174
	'mtype'        reduce using rule 174
	'np_'          reduce using rule 174
	'od'           reduce using rule 174
	'pc_value'     reduce using rule 174
	'print'        reduce using rule 174
	'printf'       reduce using rule 174
	'printm'       reduce using rule 174
	'run'          reduce using rule 174
	'select'       reduce using rule 174
	'set_priority' reduce using rule 174
	'short'        reduce using rule 174
	'show'         reduce using rule 174
	'skip'         reduce using rule 174
	'timeout'      reduce using rule 174
	'true'         reduce using rule 174
	'unsigned'     reduce using rule 174
	'xr'           reduce using rule 174
	'xs'           reduce using rule 174
	'{'            reduce using rule 174
	'}'            reduce using rule 174
	'~'            reduce using rule 174
	L_integ        reduce using rule 174
	L_PIdent       reduce using rule 174
	%eof           reduce using rule 174


State 195

	DeclList -> Decl . Separator                        (rule 149)
	DeclList -> Decl .                                  (rule 150)
	DeclList -> Decl . Separator DeclList               (rule 151)

	'!'            reduce using rule 150
	'('            reduce using rule 150
	')'            reduce using rule 150
	'-'            reduce using rule 150
	'->'           shift, and enter state 288
			(reduce using rule 150)

	'::'           reduce using rule 150
	';'            shift, and enter state 289
			(reduce using rule 150)

	'active'       reduce using rule 150
	'assert'       reduce using rule 150
	'atomic'       reduce using rule 150
	'bit'          reduce using rule 150
	'bool'         reduce using rule 150
	'break'        reduce using rule 150
	'byte'         reduce using rule 150
	'chan'         reduce using rule 150
	'd_step'       reduce using rule 150
	'do'           reduce using rule 150
	'else'         reduce using rule 150
	'empty'        reduce using rule 150
	'enabled'      reduce using rule 150
	'false'        reduce using rule 150
	'fi'           reduce using rule 150
	'for'          reduce using rule 150
	'full'         reduce using rule 150
	'get_priority' reduce using rule 150
	'goto'         reduce using rule 150
	'hidden'       reduce using rule 150
	'if'           reduce using rule 150
	'init'         reduce using rule 150
	'inline'       reduce using rule 150
	'int'          reduce using rule 150
	'len'          reduce using rule 150
	'mtype'        reduce using rule 150
	'never'        reduce using rule 150
	'np_'          reduce using rule 150
	'od'           reduce using rule 150
	'pc_value'     reduce using rule 150
	'print'        reduce using rule 150
	'printf'       reduce using rule 150
	'printm'       reduce using rule 150
	'proctype'     reduce using rule 150
	'run'          reduce using rule 150
	'select'       reduce using rule 150
	'set_priority' reduce using rule 150
	'short'        reduce using rule 150
	'show'         reduce using rule 150
	'skip'         reduce using rule 150
	'timeout'      reduce using rule 150
	'trace'        reduce using rule 150
	'true'         reduce using rule 150
	'typedef'      reduce using rule 150
	'unsigned'     reduce using rule 150
	'xr'           reduce using rule 150
	'xs'           reduce using rule 150
	'{'            reduce using rule 150
	'}'            reduce using rule 150
	'~'            reduce using rule 150
	L_integ        reduce using rule 150
	L_PIdent       reduce using rule 150
	%eof           reduce using rule 150

	Separator      goto state 317

State 196

	Decl -> DeclVisible . Typename DclIvar              (rule 152)
	Decl -> DeclVisible . UnsignedDecl                  (rule 153)

	'bit'          shift, and enter state 174
	'bool'         shift, and enter state 175
	'byte'         shift, and enter state 176
	'chan'         shift, and enter state 177
	'int'          shift, and enter state 178
	'mtype'        shift, and enter state 179
	'short'        shift, and enter state 180
	'unsigned'     shift, and enter state 218
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Typename       goto state 315
	UnsignedDecl   goto state 316
	Uname          goto state 173
	Name           goto state 76

State 197

	%start_pStep -> Step .                              (rule 38)

	%eof           accept


State 198

	Step -> Stmt . UStmt                                (rule 173)

	'!'            reduce using rule 170
	'('            reduce using rule 170
	')'            reduce using rule 170
	'-'            reduce using rule 170
	'->'           reduce using rule 170
	'::'           reduce using rule 170
	';'            reduce using rule 170
	'assert'       reduce using rule 170
	'atomic'       reduce using rule 170
	'bit'          reduce using rule 170
	'bool'         reduce using rule 170
	'break'        reduce using rule 170
	'byte'         reduce using rule 170
	'chan'         reduce using rule 170
	'd_step'       reduce using rule 170
	'do'           reduce using rule 170
	'else'         reduce using rule 170
	'empty'        reduce using rule 170
	'enabled'      reduce using rule 170
	'false'        reduce using rule 170
	'fi'           reduce using rule 170
	'for'          reduce using rule 170
	'full'         reduce using rule 170
	'get_priority' reduce using rule 170
	'goto'         reduce using rule 170
	'hidden'       reduce using rule 170
	'if'           reduce using rule 170
	'int'          reduce using rule 170
	'len'          reduce using rule 170
	'mtype'        reduce using rule 170
	'np_'          reduce using rule 170
	'od'           reduce using rule 170
	'pc_value'     reduce using rule 170
	'print'        reduce using rule 170
	'printf'       reduce using rule 170
	'printm'       reduce using rule 170
	'run'          reduce using rule 170
	'select'       reduce using rule 170
	'set_priority' reduce using rule 170
	'short'        reduce using rule 170
	'show'         reduce using rule 170
	'skip'         reduce using rule 170
	'timeout'      reduce using rule 170
	'true'         reduce using rule 170
	'unless'       shift, and enter state 205
	'unsigned'     reduce using rule 170
	'xr'           reduce using rule 170
	'xs'           reduce using rule 170
	'{'            reduce using rule 170
	'}'            reduce using rule 170
	'~'            reduce using rule 170
	L_integ        reduce using rule 170
	L_PIdent       reduce using rule 170
	%eof           reduce using rule 170

	UStmt          goto state 314

State 199

	Visible -> 'hidden' .                               (rule 75)

	'bit'          reduce using rule 75
	'bool'         reduce using rule 75
	'byte'         reduce using rule 75
	'chan'         reduce using rule 75
	'int'          reduce using rule 75
	'mtype'        reduce using rule 75
	'short'        reduce using rule 75
	'unsigned'     reduce using rule 75
	L_PIdent       reduce using rule 75
	%eof           reduce using rule 75


State 200

	Mtype -> 'mtype' . Mequals '{' Mname '}' Msep       (rule 142)

	'='            shift, and enter state 227
	'{'            reduce using rule 145

	Mequals        goto state 313

State 201

	Visible -> 'show' .                                 (rule 76)

	'bit'          reduce using rule 76
	'bool'         reduce using rule 76
	'byte'         reduce using rule 76
	'chan'         reduce using rule 76
	'int'          reduce using rule 76
	'mtype'        reduce using rule 76
	'short'        reduce using rule 76
	'unsigned'     reduce using rule 76
	L_PIdent       reduce using rule 76
	%eof           reduce using rule 76


State 202

	Step -> 'xr' . VarRefList                           (rule 175)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRefList     goto state 312
	VarRef         goto state 191
	Name           goto state 145

State 203

	Step -> 'xs' . VarRefList                           (rule 176)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRefList     goto state 311
	VarRef         goto state 191
	Name           goto state 145

State 204

	%start_pUStmt -> UStmt .                            (rule 37)

	%eof           accept


State 205

	UStmt -> 'unless' . Stmt                            (rule 171)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'break'        shift, and enter state 124
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'if'           shift, and enter state 130
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 310
	Expr           goto state 120
	Name           goto state 121

State 206

	%start_pSequence -> Sequence .                      (rule 36)

	%eof           accept


State 207

	Sequence -> Step .                                  (rule 166)
	Sequence -> Step . Separator                        (rule 167)
	Sequence -> Step . Sequence                         (rule 168)
	Sequence -> Step . Separator Sequence               (rule 169)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	')'            reduce using rule 166
	'-'            shift, and enter state 88
	'->'           shift, and enter state 288
	'::'           reduce using rule 166
	';'            shift, and enter state 289
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'fi'           reduce using rule 166
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'od'           reduce using rule 166
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'}'            reduce using rule 166
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)

	%eof           reduce using rule 166

	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	Separator      goto state 308
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 309
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 208

	%start_pEnabler -> Enabler .                        (rule 35)

	%eof           accept


State 209

	Enabler -> 'provided' . '(' Expr ')'                (rule 165)

	'('            shift, and enter state 307


State 210

	%start_pPriority -> Priority .                      (rule 34)

	%eof           accept


State 211

	%start_pAConst -> AConst .                          (rule 33)

	%eof           accept


State 212

	AConst -> '[' . Const ']'                           (rule 163)

	'false'        shift, and enter state 91
	'skip'         shift, and enter state 99
	'true'         shift, and enter state 101
	L_integ        shift, and enter state 71

	Integer        goto state 77
	Const          goto state 306

State 213

	%start_pActive -> Active .                          (rule 32)

	%eof           accept


State 214

	Active -> 'active' . AConst                         (rule 161)

	'['            shift, and enter state 212
	'proctype'     reduce using rule 162
	%eof           reduce using rule 162

	AConst         goto state 305

State 215

	%start_pUDclAssign -> UDclAssign .                  (rule 31)

	%eof           accept


State 216

	UDclAssign -> '=' . AnyExpr                         (rule 160)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 304
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 217

	%start_pUnsignedDecl -> UnsignedDecl .              (rule 30)

	%eof           accept


State 218

	UnsignedDecl -> 'unsigned' . Name ':' Const UDclAssign    (rule 158)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Name           goto state 303

State 219

	%start_pDeclVisible -> DeclVisible .                (rule 29)

	%eof           accept


State 220

	%start_pDclIvar -> DclIvar .                        (rule 28)

	%eof           accept


State 221

	DclIvar -> Ivar . ',' DclIvar                       (rule 154)
	DclIvar -> Ivar .                                   (rule 155)

	'!'            reduce using rule 155
	'('            reduce using rule 155
	')'            reduce using rule 155
	','            shift, and enter state 302
	'-'            reduce using rule 155
	'->'           reduce using rule 155
	'::'           reduce using rule 155
	';'            reduce using rule 155
	'active'       reduce using rule 155
	'assert'       reduce using rule 155
	'atomic'       reduce using rule 155
	'bit'          reduce using rule 155
	'bool'         reduce using rule 155
	'break'        reduce using rule 155
	'byte'         reduce using rule 155
	'chan'         reduce using rule 155
	'd_step'       reduce using rule 155
	'do'           reduce using rule 155
	'else'         reduce using rule 155
	'empty'        reduce using rule 155
	'enabled'      reduce using rule 155
	'false'        reduce using rule 155
	'fi'           reduce using rule 155
	'for'          reduce using rule 155
	'full'         reduce using rule 155
	'get_priority' reduce using rule 155
	'goto'         reduce using rule 155
	'hidden'       reduce using rule 155
	'if'           reduce using rule 155
	'init'         reduce using rule 155
	'inline'       reduce using rule 155
	'int'          reduce using rule 155
	'len'          reduce using rule 155
	'mtype'        reduce using rule 155
	'never'        reduce using rule 155
	'np_'          reduce using rule 155
	'od'           reduce using rule 155
	'pc_value'     reduce using rule 155
	'print'        reduce using rule 155
	'printf'       reduce using rule 155
	'printm'       reduce using rule 155
	'proctype'     reduce using rule 155
	'run'          reduce using rule 155
	'select'       reduce using rule 155
	'set_priority' reduce using rule 155
	'short'        reduce using rule 155
	'show'         reduce using rule 155
	'skip'         reduce using rule 155
	'timeout'      reduce using rule 155
	'trace'        reduce using rule 155
	'true'         reduce using rule 155
	'typedef'      reduce using rule 155
	'unsigned'     reduce using rule 155
	'xr'           reduce using rule 155
	'xs'           reduce using rule 155
	'{'            reduce using rule 155
	'}'            reduce using rule 155
	'~'            reduce using rule 155
	L_integ        reduce using rule 155
	L_PIdent       reduce using rule 155
	%eof           reduce using rule 155


State 222

	%start_pDecl -> Decl .                              (rule 27)

	%eof           accept


State 223

	%start_pDeclList -> DeclList .                      (rule 26)

	%eof           accept


State 224

	%start_pMname -> Mname .                            (rule 25)

	%eof           accept


State 225

	Mname -> Name .                                     (rule 147)
	Mname -> Name . ',' Mname                           (rule 148)

	','            shift, and enter state 301
	'}'            reduce using rule 147
	%eof           reduce using rule 147


State 226

	%start_pMequals -> Mequals .                        (rule 24)

	%eof           accept


State 227

	Mequals -> '=' .                                    (rule 146)

	'{'            reduce using rule 146
	%eof           reduce using rule 146


State 228

	%start_pMsep -> Msep .                              (rule 23)

	%eof           accept


State 229

	Msep -> ';' .                                       (rule 144)

	'!'            reduce using rule 144
	'('            reduce using rule 144
	')'            reduce using rule 144
	'-'            reduce using rule 144
	'->'           reduce using rule 144
	'::'           reduce using rule 144
	';'            reduce using rule 144
	'active'       reduce using rule 144
	'assert'       reduce using rule 144
	'atomic'       reduce using rule 144
	'bit'          reduce using rule 144
	'bool'         reduce using rule 144
	'break'        reduce using rule 144
	'byte'         reduce using rule 144
	'chan'         reduce using rule 144
	'd_step'       reduce using rule 144
	'do'           reduce using rule 144
	'else'         reduce using rule 144
	'empty'        reduce using rule 144
	'enabled'      reduce using rule 144
	'false'        reduce using rule 144
	'fi'           reduce using rule 144
	'for'          reduce using rule 144
	'full'         reduce using rule 144
	'get_priority' reduce using rule 144
	'goto'         reduce using rule 144
	'hidden'       reduce using rule 144
	'if'           reduce using rule 144
	'init'         reduce using rule 144
	'inline'       reduce using rule 144
	'int'          reduce using rule 144
	'len'          reduce using rule 144
	'mtype'        reduce using rule 144
	'never'        reduce using rule 144
	'np_'          reduce using rule 144
	'od'           reduce using rule 144
	'pc_value'     reduce using rule 144
	'print'        reduce using rule 144
	'printf'       reduce using rule 144
	'printm'       reduce using rule 144
	'proctype'     reduce using rule 144
	'run'          reduce using rule 144
	'select'       reduce using rule 144
	'set_priority' reduce using rule 144
	'short'        reduce using rule 144
	'show'         reduce using rule 144
	'skip'         reduce using rule 144
	'timeout'      reduce using rule 144
	'trace'        reduce using rule 144
	'true'         reduce using rule 144
	'typedef'      reduce using rule 144
	'unsigned'     reduce using rule 144
	'xr'           reduce using rule 144
	'xs'           reduce using rule 144
	'{'            reduce using rule 144
	'}'            reduce using rule 144
	'~'            reduce using rule 144
	L_integ        reduce using rule 144
	L_PIdent       reduce using rule 144
	%eof           reduce using rule 144


State 230

	%start_pMtype -> Mtype .                            (rule 22)

	%eof           accept


State 231

	%start_pUtype -> Utype .                            (rule 21)

	%eof           accept


State 232

	Utype -> 'typedef' . Name '{' DeclList '}' ';'      (rule 141)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Name           goto state 300

State 233

	%start_pTrace -> Trace .                            (rule 20)

	%eof           accept


State 234

	Trace -> 'trace' . '{' Sequence '}'                 (rule 140)

	'{'            shift, and enter state 299


State 235

	%start_pNever -> Never .                            (rule 19)

	%eof           accept


State 236

	Never -> 'never' . '{' Sequence '}'                 (rule 139)

	'{'            shift, and enter state 298


State 237

	%start_pIpriority -> Ipriority .                    (rule 18)

	%eof           accept


State 238

	Ipriority -> Priority .                             (rule 138)

	'{'            reduce using rule 138
	%eof           reduce using rule 138


State 239

	%start_pInit -> Init .                              (rule 17)

	%eof           accept


State 240

	Init -> 'init' . Ipriority '{' Sequence '}'         (rule 136)

	'priority'     shift, and enter state 109
	'{'            reduce using rule 137

	Ipriority      goto state 297
	Priority       goto state 238

State 241

	%start_pPenabler -> Penabler .                      (rule 16)

	%eof           accept


State 242

	Penabler -> Enabler .                               (rule 135)

	'{'            reduce using rule 135
	%eof           reduce using rule 135


State 243

	%start_pPpriority -> Ppriority .                    (rule 15)

	%eof           accept


State 244

	Ppriority -> Priority .                             (rule 133)

	'provided'     reduce using rule 133
	'{'            reduce using rule 133
	%eof           reduce using rule 133


State 245

	%start_pPdeclList -> PdeclList .                    (rule 14)

	%eof           accept


State 246

	PdeclList -> DeclList .                             (rule 131)

	')'            reduce using rule 131
	%eof           reduce using rule 131


State 247

	%start_pPactive -> Pactive .                        (rule 13)

	%eof           accept


State 248

	Pactive -> Active .                                 (rule 129)

	'proctype'     reduce using rule 129
	%eof           reduce using rule 129


State 249

	%start_pInline -> Inline .                          (rule 12)

	%eof           accept


State 250

	Inline -> 'inline' . Name '(' ArgList ')' '{' Sequence '}'    (rule 127)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Name           goto state 296

State 251

	%start_pProctype -> Proctype .                      (rule 11)

	%eof           accept


State 252

	Proctype -> Pactive . 'proctype' Name '(' PdeclList ')' Ppriority Penabler '{' Sequence '}'    (rule 126)

	'proctype'     shift, and enter state 295


State 253

	%start_pModule -> Module .                          (rule 10)

	%eof           accept


State 254

	Module -> Proctype .                                (rule 118)

	'active'       reduce using rule 118
	'bit'          reduce using rule 118
	'bool'         reduce using rule 118
	'byte'         reduce using rule 118
	'chan'         reduce using rule 118
	'hidden'       reduce using rule 118
	'init'         reduce using rule 118
	'inline'       reduce using rule 118
	'int'          reduce using rule 118
	'mtype'        reduce using rule 118
	'never'        reduce using rule 118
	'proctype'     reduce using rule 118
	'short'        reduce using rule 118
	'show'         reduce using rule 118
	'trace'        reduce using rule 118
	'typedef'      reduce using rule 118
	'unsigned'     reduce using rule 118
	L_PIdent       reduce using rule 118
	%eof           reduce using rule 118


State 255

	Module -> Inline .                                  (rule 119)

	'active'       reduce using rule 119
	'bit'          reduce using rule 119
	'bool'         reduce using rule 119
	'byte'         reduce using rule 119
	'chan'         reduce using rule 119
	'hidden'       reduce using rule 119
	'init'         reduce using rule 119
	'inline'       reduce using rule 119
	'int'          reduce using rule 119
	'mtype'        reduce using rule 119
	'never'        reduce using rule 119
	'proctype'     reduce using rule 119
	'short'        reduce using rule 119
	'show'         reduce using rule 119
	'trace'        reduce using rule 119
	'typedef'      reduce using rule 119
	'unsigned'     reduce using rule 119
	L_PIdent       reduce using rule 119
	%eof           reduce using rule 119


State 256

	Module -> Init .                                    (rule 120)

	'active'       reduce using rule 120
	'bit'          reduce using rule 120
	'bool'         reduce using rule 120
	'byte'         reduce using rule 120
	'chan'         reduce using rule 120
	'hidden'       reduce using rule 120
	'init'         reduce using rule 120
	'inline'       reduce using rule 120
	'int'          reduce using rule 120
	'mtype'        reduce using rule 120
	'never'        reduce using rule 120
	'proctype'     reduce using rule 120
	'short'        reduce using rule 120
	'show'         reduce using rule 120
	'trace'        reduce using rule 120
	'typedef'      reduce using rule 120
	'unsigned'     reduce using rule 120
	L_PIdent       reduce using rule 120
	%eof           reduce using rule 120


State 257

	Module -> Never .                                   (rule 121)

	'active'       reduce using rule 121
	'bit'          reduce using rule 121
	'bool'         reduce using rule 121
	'byte'         reduce using rule 121
	'chan'         reduce using rule 121
	'hidden'       reduce using rule 121
	'init'         reduce using rule 121
	'inline'       reduce using rule 121
	'int'          reduce using rule 121
	'mtype'        reduce using rule 121
	'never'        reduce using rule 121
	'proctype'     reduce using rule 121
	'short'        reduce using rule 121
	'show'         reduce using rule 121
	'trace'        reduce using rule 121
	'typedef'      reduce using rule 121
	'unsigned'     reduce using rule 121
	L_PIdent       reduce using rule 121
	%eof           reduce using rule 121


State 258

	Module -> Trace .                                   (rule 122)

	'active'       reduce using rule 122
	'bit'          reduce using rule 122
	'bool'         reduce using rule 122
	'byte'         reduce using rule 122
	'chan'         reduce using rule 122
	'hidden'       reduce using rule 122
	'init'         reduce using rule 122
	'inline'       reduce using rule 122
	'int'          reduce using rule 122
	'mtype'        reduce using rule 122
	'never'        reduce using rule 122
	'proctype'     reduce using rule 122
	'short'        reduce using rule 122
	'show'         reduce using rule 122
	'trace'        reduce using rule 122
	'typedef'      reduce using rule 122
	'unsigned'     reduce using rule 122
	L_PIdent       reduce using rule 122
	%eof           reduce using rule 122


State 259

	Module -> Utype .                                   (rule 123)

	'active'       reduce using rule 123
	'bit'          reduce using rule 123
	'bool'         reduce using rule 123
	'byte'         reduce using rule 123
	'chan'         reduce using rule 123
	'hidden'       reduce using rule 123
	'init'         reduce using rule 123
	'inline'       reduce using rule 123
	'int'          reduce using rule 123
	'mtype'        reduce using rule 123
	'never'        reduce using rule 123
	'proctype'     reduce using rule 123
	'short'        reduce using rule 123
	'show'         reduce using rule 123
	'trace'        reduce using rule 123
	'typedef'      reduce using rule 123
	'unsigned'     reduce using rule 123
	L_PIdent       reduce using rule 123
	%eof           reduce using rule 123


State 260

	Module -> Mtype .                                   (rule 124)

	'active'       reduce using rule 124
	'bit'          reduce using rule 124
	'bool'         reduce using rule 124
	'byte'         reduce using rule 124
	'chan'         reduce using rule 124
	'hidden'       reduce using rule 124
	'init'         reduce using rule 124
	'inline'       reduce using rule 124
	'int'          reduce using rule 124
	'mtype'        reduce using rule 124
	'never'        reduce using rule 124
	'proctype'     reduce using rule 124
	'short'        reduce using rule 124
	'show'         reduce using rule 124
	'trace'        reduce using rule 124
	'typedef'      reduce using rule 124
	'unsigned'     reduce using rule 124
	L_PIdent       reduce using rule 124
	%eof           reduce using rule 124


State 261

	Module -> DeclList .                                (rule 125)

	'active'       reduce using rule 125
	'bit'          reduce using rule 125
	'bool'         reduce using rule 125
	'byte'         reduce using rule 125
	'chan'         reduce using rule 125
	'hidden'       reduce using rule 125
	'init'         reduce using rule 125
	'inline'       reduce using rule 125
	'int'          reduce using rule 125
	'mtype'        reduce using rule 125
	'never'        reduce using rule 125
	'proctype'     reduce using rule 125
	'short'        reduce using rule 125
	'show'         reduce using rule 125
	'trace'        reduce using rule 125
	'typedef'      reduce using rule 125
	'unsigned'     reduce using rule 125
	L_PIdent       reduce using rule 125
	%eof           reduce using rule 125


State 262

	%start_pPrintType -> PrintType .                    (rule 9)

	%eof           accept


State 263

	%start_pConst -> Const .                            (rule 8)

	%eof           accept


State 264

	%start_pUnrOp -> UnrOp .                            (rule 7)

	%eof           accept


State 265

	BinOp -> AndOr .                                    (rule 107)

	'!'            reduce using rule 107
	'('            reduce using rule 107
	'-'            reduce using rule 107
	'enabled'      reduce using rule 107
	'false'        reduce using rule 107
	'get_priority' reduce using rule 107
	'len'          reduce using rule 107
	'np_'          reduce using rule 107
	'pc_value'     reduce using rule 107
	'run'          reduce using rule 107
	'set_priority' reduce using rule 107
	'skip'         reduce using rule 107
	'timeout'      reduce using rule 107
	'true'         reduce using rule 107
	'~'            reduce using rule 107
	L_integ        reduce using rule 107
	L_PIdent       reduce using rule 107
	%eof           reduce using rule 107


State 266

	%start_pBinOp -> BinOp .                            (rule 6)

	%eof           accept


State 267

	BinOp -> '!=' .                                     (rule 104)

	'!'            reduce using rule 104
	'('            reduce using rule 104
	'-'            reduce using rule 104
	'enabled'      reduce using rule 104
	'false'        reduce using rule 104
	'get_priority' reduce using rule 104
	'len'          reduce using rule 104
	'np_'          reduce using rule 104
	'pc_value'     reduce using rule 104
	'run'          reduce using rule 104
	'set_priority' reduce using rule 104
	'skip'         reduce using rule 104
	'timeout'      reduce using rule 104
	'true'         reduce using rule 104
	'~'            reduce using rule 104
	L_integ        reduce using rule 104
	L_PIdent       reduce using rule 104
	%eof           reduce using rule 104


State 268

	BinOp -> '%' .                                      (rule 95)

	'!'            reduce using rule 95
	'('            reduce using rule 95
	'-'            reduce using rule 95
	'enabled'      reduce using rule 95
	'false'        reduce using rule 95
	'get_priority' reduce using rule 95
	'len'          reduce using rule 95
	'np_'          reduce using rule 95
	'pc_value'     reduce using rule 95
	'run'          reduce using rule 95
	'set_priority' reduce using rule 95
	'skip'         reduce using rule 95
	'timeout'      reduce using rule 95
	'true'         reduce using rule 95
	'~'            reduce using rule 95
	L_integ        reduce using rule 95
	L_PIdent       reduce using rule 95
	%eof           reduce using rule 95


State 269

	BinOp -> '&' .                                      (rule 96)

	'!'            reduce using rule 96
	'('            reduce using rule 96
	'-'            reduce using rule 96
	'enabled'      reduce using rule 96
	'false'        reduce using rule 96
	'get_priority' reduce using rule 96
	'len'          reduce using rule 96
	'np_'          reduce using rule 96
	'pc_value'     reduce using rule 96
	'run'          reduce using rule 96
	'set_priority' reduce using rule 96
	'skip'         reduce using rule 96
	'timeout'      reduce using rule 96
	'true'         reduce using rule 96
	'~'            reduce using rule 96
	L_integ        reduce using rule 96
	L_PIdent       reduce using rule 96
	%eof           reduce using rule 96


State 270

	AndOr -> '&&' .                                     (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'empty'        reduce using rule 89
	'enabled'      reduce using rule 89
	'false'        reduce using rule 89
	'full'         reduce using rule 89
	'get_priority' reduce using rule 89
	'len'          reduce using rule 89
	'np_'          reduce using rule 89
	'pc_value'     reduce using rule 89
	'run'          reduce using rule 89
	'set_priority' reduce using rule 89
	'skip'         reduce using rule 89
	'timeout'      reduce using rule 89
	'true'         reduce using rule 89
	'~'            reduce using rule 89
	L_integ        reduce using rule 89
	L_PIdent       reduce using rule 89
	%eof           reduce using rule 89


State 271

	BinOp -> '*' .                                      (rule 93)

	'!'            reduce using rule 93
	'('            reduce using rule 93
	'-'            reduce using rule 93
	'enabled'      reduce using rule 93
	'false'        reduce using rule 93
	'get_priority' reduce using rule 93
	'len'          reduce using rule 93
	'np_'          reduce using rule 93
	'pc_value'     reduce using rule 93
	'run'          reduce using rule 93
	'set_priority' reduce using rule 93
	'skip'         reduce using rule 93
	'timeout'      reduce using rule 93
	'true'         reduce using rule 93
	'~'            reduce using rule 93
	L_integ        reduce using rule 93
	L_PIdent       reduce using rule 93
	%eof           reduce using rule 93


State 272

	BinOp -> '+' .                                      (rule 91)

	'!'            reduce using rule 91
	'('            reduce using rule 91
	'-'            reduce using rule 91
	'enabled'      reduce using rule 91
	'false'        reduce using rule 91
	'get_priority' reduce using rule 91
	'len'          reduce using rule 91
	'np_'          reduce using rule 91
	'pc_value'     reduce using rule 91
	'run'          reduce using rule 91
	'set_priority' reduce using rule 91
	'skip'         reduce using rule 91
	'timeout'      reduce using rule 91
	'true'         reduce using rule 91
	'~'            reduce using rule 91
	L_integ        reduce using rule 91
	L_PIdent       reduce using rule 91
	%eof           reduce using rule 91


State 273

	BinOp -> '-' .                                      (rule 92)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'-'            reduce using rule 92
	'enabled'      reduce using rule 92
	'false'        reduce using rule 92
	'get_priority' reduce using rule 92
	'len'          reduce using rule 92
	'np_'          reduce using rule 92
	'pc_value'     reduce using rule 92
	'run'          reduce using rule 92
	'set_priority' reduce using rule 92
	'skip'         reduce using rule 92
	'timeout'      reduce using rule 92
	'true'         reduce using rule 92
	'~'            reduce using rule 92
	L_integ        reduce using rule 92
	L_PIdent       reduce using rule 92
	%eof           reduce using rule 92


State 274

	BinOp -> '/' .                                      (rule 94)

	'!'            reduce using rule 94
	'('            reduce using rule 94
	'-'            reduce using rule 94
	'enabled'      reduce using rule 94
	'false'        reduce using rule 94
	'get_priority' reduce using rule 94
	'len'          reduce using rule 94
	'np_'          reduce using rule 94
	'pc_value'     reduce using rule 94
	'run'          reduce using rule 94
	'set_priority' reduce using rule 94
	'skip'         reduce using rule 94
	'timeout'      reduce using rule 94
	'true'         reduce using rule 94
	'~'            reduce using rule 94
	L_integ        reduce using rule 94
	L_PIdent       reduce using rule 94
	%eof           reduce using rule 94


State 275

	BinOp -> '<' .                                      (rule 100)

	'!'            reduce using rule 100
	'('            reduce using rule 100
	'-'            reduce using rule 100
	'enabled'      reduce using rule 100
	'false'        reduce using rule 100
	'get_priority' reduce using rule 100
	'len'          reduce using rule 100
	'np_'          reduce using rule 100
	'pc_value'     reduce using rule 100
	'run'          reduce using rule 100
	'set_priority' reduce using rule 100
	'skip'         reduce using rule 100
	'timeout'      reduce using rule 100
	'true'         reduce using rule 100
	'~'            reduce using rule 100
	L_integ        reduce using rule 100
	L_PIdent       reduce using rule 100
	%eof           reduce using rule 100


State 276

	BinOp -> '<<' .                                     (rule 105)

	'!'            reduce using rule 105
	'('            reduce using rule 105
	'-'            reduce using rule 105
	'enabled'      reduce using rule 105
	'false'        reduce using rule 105
	'get_priority' reduce using rule 105
	'len'          reduce using rule 105
	'np_'          reduce using rule 105
	'pc_value'     reduce using rule 105
	'run'          reduce using rule 105
	'set_priority' reduce using rule 105
	'skip'         reduce using rule 105
	'timeout'      reduce using rule 105
	'true'         reduce using rule 105
	'~'            reduce using rule 105
	L_integ        reduce using rule 105
	L_PIdent       reduce using rule 105
	%eof           reduce using rule 105


State 277

	BinOp -> '<=' .                                     (rule 102)

	'!'            reduce using rule 102
	'('            reduce using rule 102
	'-'            reduce using rule 102
	'enabled'      reduce using rule 102
	'false'        reduce using rule 102
	'get_priority' reduce using rule 102
	'len'          reduce using rule 102
	'np_'          reduce using rule 102
	'pc_value'     reduce using rule 102
	'run'          reduce using rule 102
	'set_priority' reduce using rule 102
	'skip'         reduce using rule 102
	'timeout'      reduce using rule 102
	'true'         reduce using rule 102
	'~'            reduce using rule 102
	L_integ        reduce using rule 102
	L_PIdent       reduce using rule 102
	%eof           reduce using rule 102


State 278

	BinOp -> '==' .                                     (rule 103)

	'!'            reduce using rule 103
	'('            reduce using rule 103
	'-'            reduce using rule 103
	'enabled'      reduce using rule 103
	'false'        reduce using rule 103
	'get_priority' reduce using rule 103
	'len'          reduce using rule 103
	'np_'          reduce using rule 103
	'pc_value'     reduce using rule 103
	'run'          reduce using rule 103
	'set_priority' reduce using rule 103
	'skip'         reduce using rule 103
	'timeout'      reduce using rule 103
	'true'         reduce using rule 103
	'~'            reduce using rule 103
	L_integ        reduce using rule 103
	L_PIdent       reduce using rule 103
	%eof           reduce using rule 103


State 279

	BinOp -> '>' .                                      (rule 99)

	'!'            reduce using rule 99
	'('            reduce using rule 99
	'-'            reduce using rule 99
	'enabled'      reduce using rule 99
	'false'        reduce using rule 99
	'get_priority' reduce using rule 99
	'len'          reduce using rule 99
	'np_'          reduce using rule 99
	'pc_value'     reduce using rule 99
	'run'          reduce using rule 99
	'set_priority' reduce using rule 99
	'skip'         reduce using rule 99
	'timeout'      reduce using rule 99
	'true'         reduce using rule 99
	'~'            reduce using rule 99
	L_integ        reduce using rule 99
	L_PIdent       reduce using rule 99
	%eof           reduce using rule 99


State 280

	BinOp -> '>=' .                                     (rule 101)

	'!'            reduce using rule 101
	'('            reduce using rule 101
	'-'            reduce using rule 101
	'enabled'      reduce using rule 101
	'false'        reduce using rule 101
	'get_priority' reduce using rule 101
	'len'          reduce using rule 101
	'np_'          reduce using rule 101
	'pc_value'     reduce using rule 101
	'run'          reduce using rule 101
	'set_priority' reduce using rule 101
	'skip'         reduce using rule 101
	'timeout'      reduce using rule 101
	'true'         reduce using rule 101
	'~'            reduce using rule 101
	L_integ        reduce using rule 101
	L_PIdent       reduce using rule 101
	%eof           reduce using rule 101


State 281

	BinOp -> '>>' .                                     (rule 106)

	'!'            reduce using rule 106
	'('            reduce using rule 106
	'-'            reduce using rule 106
	'enabled'      reduce using rule 106
	'false'        reduce using rule 106
	'get_priority' reduce using rule 106
	'len'          reduce using rule 106
	'np_'          reduce using rule 106
	'pc_value'     reduce using rule 106
	'run'          reduce using rule 106
	'set_priority' reduce using rule 106
	'skip'         reduce using rule 106
	'timeout'      reduce using rule 106
	'true'         reduce using rule 106
	'~'            reduce using rule 106
	L_integ        reduce using rule 106
	L_PIdent       reduce using rule 106
	%eof           reduce using rule 106


State 282

	BinOp -> '^' .                                      (rule 97)

	'!'            reduce using rule 97
	'('            reduce using rule 97
	'-'            reduce using rule 97
	'enabled'      reduce using rule 97
	'false'        reduce using rule 97
	'get_priority' reduce using rule 97
	'len'          reduce using rule 97
	'np_'          reduce using rule 97
	'pc_value'     reduce using rule 97
	'run'          reduce using rule 97
	'set_priority' reduce using rule 97
	'skip'         reduce using rule 97
	'timeout'      reduce using rule 97
	'true'         reduce using rule 97
	'~'            reduce using rule 97
	L_integ        reduce using rule 97
	L_PIdent       reduce using rule 97
	%eof           reduce using rule 97


State 283

	BinOp -> '|' .                                      (rule 98)

	'!'            reduce using rule 98
	'('            reduce using rule 98
	'-'            reduce using rule 98
	'enabled'      reduce using rule 98
	'false'        reduce using rule 98
	'get_priority' reduce using rule 98
	'len'          reduce using rule 98
	'np_'          reduce using rule 98
	'pc_value'     reduce using rule 98
	'run'          reduce using rule 98
	'set_priority' reduce using rule 98
	'skip'         reduce using rule 98
	'timeout'      reduce using rule 98
	'true'         reduce using rule 98
	'~'            reduce using rule 98
	L_integ        reduce using rule 98
	L_PIdent       reduce using rule 98
	%eof           reduce using rule 98


State 284

	AndOr -> '||' .                                     (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'empty'        reduce using rule 90
	'enabled'      reduce using rule 90
	'false'        reduce using rule 90
	'full'         reduce using rule 90
	'get_priority' reduce using rule 90
	'len'          reduce using rule 90
	'np_'          reduce using rule 90
	'pc_value'     reduce using rule 90
	'run'          reduce using rule 90
	'set_priority' reduce using rule 90
	'skip'         reduce using rule 90
	'timeout'      reduce using rule 90
	'true'         reduce using rule 90
	'~'            reduce using rule 90
	L_integ        reduce using rule 90
	L_PIdent       reduce using rule 90
	%eof           reduce using rule 90


State 285

	%start_pAndOr -> AndOr .                            (rule 5)

	%eof           accept


State 286

	%start_pTypename -> Typename .                      (rule 4)

	%eof           accept


State 287

	%start_pSeparator -> Separator .                    (rule 3)

	%eof           accept


State 288

	Separator -> '->' .                                 (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	'-'            reduce using rule 80
	'->'           reduce using rule 80
	'::'           reduce using rule 80
	';'            reduce using rule 80
	'active'       reduce using rule 80
	'assert'       reduce using rule 80
	'atomic'       reduce using rule 80
	'bit'          reduce using rule 80
	'bool'         reduce using rule 80
	'break'        reduce using rule 80
	'byte'         reduce using rule 80
	'chan'         reduce using rule 80
	'd_step'       reduce using rule 80
	'do'           reduce using rule 80
	'else'         reduce using rule 80
	'empty'        reduce using rule 80
	'enabled'      reduce using rule 80
	'false'        reduce using rule 80
	'fi'           reduce using rule 80
	'for'          reduce using rule 80
	'full'         reduce using rule 80
	'get_priority' reduce using rule 80
	'goto'         reduce using rule 80
	'hidden'       reduce using rule 80
	'if'           reduce using rule 80
	'init'         reduce using rule 80
	'inline'       reduce using rule 80
	'int'          reduce using rule 80
	'len'          reduce using rule 80
	'mtype'        reduce using rule 80
	'never'        reduce using rule 80
	'np_'          reduce using rule 80
	'od'           reduce using rule 80
	'pc_value'     reduce using rule 80
	'print'        reduce using rule 80
	'printf'       reduce using rule 80
	'printm'       reduce using rule 80
	'proctype'     reduce using rule 80
	'run'          reduce using rule 80
	'select'       reduce using rule 80
	'set_priority' reduce using rule 80
	'short'        reduce using rule 80
	'show'         reduce using rule 80
	'skip'         reduce using rule 80
	'timeout'      reduce using rule 80
	'trace'        reduce using rule 80
	'true'         reduce using rule 80
	'typedef'      reduce using rule 80
	'unsigned'     reduce using rule 80
	'xr'           reduce using rule 80
	'xs'           reduce using rule 80
	'{'            reduce using rule 80
	'}'            reduce using rule 80
	'~'            reduce using rule 80
	L_integ        reduce using rule 80
	L_PIdent       reduce using rule 80
	%eof           reduce using rule 80


State 289

	Separator -> ';' .                                  (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	'-'            reduce using rule 79
	'->'           reduce using rule 79
	'::'           reduce using rule 79
	';'            reduce using rule 79
	'active'       reduce using rule 79
	'assert'       reduce using rule 79
	'atomic'       reduce using rule 79
	'bit'          reduce using rule 79
	'bool'         reduce using rule 79
	'break'        reduce using rule 79
	'byte'         reduce using rule 79
	'chan'         reduce using rule 79
	'd_step'       reduce using rule 79
	'do'           reduce using rule 79
	'else'         reduce using rule 79
	'empty'        reduce using rule 79
	'enabled'      reduce using rule 79
	'false'        reduce using rule 79
	'fi'           reduce using rule 79
	'for'          reduce using rule 79
	'full'         reduce using rule 79
	'get_priority' reduce using rule 79
	'goto'         reduce using rule 79
	'hidden'       reduce using rule 79
	'if'           reduce using rule 79
	'init'         reduce using rule 79
	'inline'       reduce using rule 79
	'int'          reduce using rule 79
	'len'          reduce using rule 79
	'mtype'        reduce using rule 79
	'never'        reduce using rule 79
	'np_'          reduce using rule 79
	'od'           reduce using rule 79
	'pc_value'     reduce using rule 79
	'print'        reduce using rule 79
	'printf'       reduce using rule 79
	'printm'       reduce using rule 79
	'proctype'     reduce using rule 79
	'run'          reduce using rule 79
	'select'       reduce using rule 79
	'set_priority' reduce using rule 79
	'short'        reduce using rule 79
	'show'         reduce using rule 79
	'skip'         reduce using rule 79
	'timeout'      reduce using rule 79
	'trace'        reduce using rule 79
	'true'         reduce using rule 79
	'typedef'      reduce using rule 79
	'unsigned'     reduce using rule 79
	'xr'           reduce using rule 79
	'xs'           reduce using rule 79
	'{'            reduce using rule 79
	'}'            reduce using rule 79
	'~'            reduce using rule 79
	L_integ        reduce using rule 79
	L_PIdent       reduce using rule 79
	%eof           reduce using rule 79


State 290

	%start_pChanPoll -> ChanPoll .                      (rule 2)

	%eof           accept


State 291

	%start_pVisible -> Visible .                        (rule 1)

	%eof           accept


State 292

	%start_pListModule -> ListModule .                  (rule 0)

	%eof           accept


State 293

	ListModule -> Module .                              (rule 73)
	ListModule -> Module . ListModule                   (rule 74)

	'active'       shift, and enter state 214
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'hidden'       shift, and enter state 199
	'init'         shift, and enter state 240
	'inline'       shift, and enter state 250
	'int'          reduce using rule 156
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'never'        shift, and enter state 236
	'proctype'     reduce using rule 128
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'trace'        shift, and enter state 234
	'typedef'      shift, and enter state 232
	'unsigned'     reduce using rule 156
	L_PIdent       reduce using rule 156
	%eof           reduce using rule 73

	ListModule     goto state 294
	Visible        goto state 192
	Module         goto state 293
	Proctype       goto state 254
	Inline         goto state 255
	Pactive        goto state 252
	Init           goto state 256
	Never          goto state 257
	Trace          goto state 258
	Utype          goto state 259
	Mtype          goto state 260
	DeclList       goto state 261
	Decl           goto state 195
	DeclVisible    goto state 196
	Active         goto state 248

State 294

	ListModule -> Module ListModule .                   (rule 74)

	%eof           reduce using rule 74


State 295

	Proctype -> Pactive 'proctype' . Name '(' PdeclList ')' Ppriority Penabler '{' Sequence '}'    (rule 126)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Name           goto state 438

State 296

	Inline -> 'inline' Name . '(' ArgList ')' '{' Sequence '}'    (rule 127)

	'('            shift, and enter state 437


State 297

	Init -> 'init' Ipriority . '{' Sequence '}'         (rule 136)

	'{'            shift, and enter state 436


State 298

	Never -> 'never' '{' . Sequence '}'                 (rule 139)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)


	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 435
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 299

	Trace -> 'trace' '{' . Sequence '}'                 (rule 140)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)


	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 434
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 300

	Utype -> 'typedef' Name . '{' DeclList '}' ';'      (rule 141)

	'{'            shift, and enter state 433


State 301

	Mname -> Name ',' . Mname                           (rule 148)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Mname          goto state 432
	Name           goto state 225

State 302

	DclIvar -> Ivar ',' . DclIvar                       (rule 154)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	DclIvar        goto state 431
	Ivar           goto state 221
	Name           goto state 188

State 303

	UnsignedDecl -> 'unsigned' Name . ':' Const UDclAssign    (rule 158)

	':'            shift, and enter state 430


State 304

	UDclAssign -> '=' AnyExpr .                         (rule 160)
	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)

	'!'            reduce using rule 160
	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	'('            reduce using rule 160
	')'            reduce using rule 160
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
			(reduce using rule 160)

	'->'           reduce using rule 160
	'/'            shift, and enter state 274
	'::'           reduce using rule 160
	';'            reduce using rule 160
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'active'       reduce using rule 160
	'assert'       reduce using rule 160
	'atomic'       reduce using rule 160
	'bit'          reduce using rule 160
	'bool'         reduce using rule 160
	'break'        reduce using rule 160
	'byte'         reduce using rule 160
	'chan'         reduce using rule 160
	'd_step'       reduce using rule 160
	'do'           reduce using rule 160
	'else'         reduce using rule 160
	'empty'        reduce using rule 160
	'enabled'      reduce using rule 160
	'false'        reduce using rule 160
	'fi'           reduce using rule 160
	'for'          reduce using rule 160
	'full'         reduce using rule 160
	'get_priority' reduce using rule 160
	'goto'         reduce using rule 160
	'hidden'       reduce using rule 160
	'if'           reduce using rule 160
	'init'         reduce using rule 160
	'inline'       reduce using rule 160
	'int'          reduce using rule 160
	'len'          reduce using rule 160
	'mtype'        reduce using rule 160
	'never'        reduce using rule 160
	'np_'          reduce using rule 160
	'od'           reduce using rule 160
	'pc_value'     reduce using rule 160
	'print'        reduce using rule 160
	'printf'       reduce using rule 160
	'printm'       reduce using rule 160
	'proctype'     reduce using rule 160
	'run'          reduce using rule 160
	'select'       reduce using rule 160
	'set_priority' reduce using rule 160
	'short'        reduce using rule 160
	'show'         reduce using rule 160
	'skip'         reduce using rule 160
	'timeout'      reduce using rule 160
	'trace'        reduce using rule 160
	'true'         reduce using rule 160
	'typedef'      reduce using rule 160
	'unsigned'     reduce using rule 160
	'xr'           reduce using rule 160
	'xs'           reduce using rule 160
	'{'            reduce using rule 160
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284
	'}'            reduce using rule 160
	'~'            reduce using rule 160
	L_integ        reduce using rule 160
	L_PIdent       reduce using rule 160
	%eof           reduce using rule 160

	AndOr          goto state 265
	BinOp          goto state 319

State 305

	Active -> 'active' AConst .                         (rule 161)

	'proctype'     reduce using rule 161
	%eof           reduce using rule 161


State 306

	AConst -> '[' Const . ']'                           (rule 163)

	']'            shift, and enter state 429


State 307

	Enabler -> 'provided' '(' . Expr ')'                (rule 165)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 81
	VarRef         goto state 82
	Poll           goto state 83
	Expr           goto state 428
	Name           goto state 85

State 308

	Sequence -> Step Separator .                        (rule 167)
	Sequence -> Step Separator . Sequence               (rule 169)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	')'            reduce using rule 167
	'-'            shift, and enter state 88
	'::'           reduce using rule 167
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'fi'           reduce using rule 167
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'od'           reduce using rule 167
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'}'            reduce using rule 167
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)

	%eof           reduce using rule 167

	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 427
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 309

	Sequence -> Step Sequence .                         (rule 168)

	')'            reduce using rule 168
	'::'           reduce using rule 168
	'fi'           reduce using rule 168
	'od'           reduce using rule 168
	'}'            reduce using rule 168
	%eof           reduce using rule 168


State 310

	UStmt -> 'unless' Stmt .                            (rule 171)

	'!'            reduce using rule 171
	'('            reduce using rule 171
	')'            reduce using rule 171
	'-'            reduce using rule 171
	'->'           reduce using rule 171
	'::'           reduce using rule 171
	';'            reduce using rule 171
	'assert'       reduce using rule 171
	'atomic'       reduce using rule 171
	'bit'          reduce using rule 171
	'bool'         reduce using rule 171
	'break'        reduce using rule 171
	'byte'         reduce using rule 171
	'chan'         reduce using rule 171
	'd_step'       reduce using rule 171
	'do'           reduce using rule 171
	'else'         reduce using rule 171
	'empty'        reduce using rule 171
	'enabled'      reduce using rule 171
	'false'        reduce using rule 171
	'fi'           reduce using rule 171
	'for'          reduce using rule 171
	'full'         reduce using rule 171
	'get_priority' reduce using rule 171
	'goto'         reduce using rule 171
	'hidden'       reduce using rule 171
	'if'           reduce using rule 171
	'int'          reduce using rule 171
	'len'          reduce using rule 171
	'mtype'        reduce using rule 171
	'np_'          reduce using rule 171
	'od'           reduce using rule 171
	'pc_value'     reduce using rule 171
	'print'        reduce using rule 171
	'printf'       reduce using rule 171
	'printm'       reduce using rule 171
	'run'          reduce using rule 171
	'select'       reduce using rule 171
	'set_priority' reduce using rule 171
	'short'        reduce using rule 171
	'show'         reduce using rule 171
	'skip'         reduce using rule 171
	'timeout'      reduce using rule 171
	'true'         reduce using rule 171
	'unsigned'     reduce using rule 171
	'xr'           reduce using rule 171
	'xs'           reduce using rule 171
	'{'            reduce using rule 171
	'}'            reduce using rule 171
	'~'            reduce using rule 171
	L_integ        reduce using rule 171
	L_PIdent       reduce using rule 171
	%eof           reduce using rule 171


State 311

	Step -> 'xs' VarRefList .                           (rule 176)

	'!'            reduce using rule 176
	'('            reduce using rule 176
	')'            reduce using rule 176
	'-'            reduce using rule 176
	'->'           reduce using rule 176
	'::'           reduce using rule 176
	';'            reduce using rule 176
	'assert'       reduce using rule 176
	'atomic'       reduce using rule 176
	'bit'          reduce using rule 176
	'bool'         reduce using rule 176
	'break'        reduce using rule 176
	'byte'         reduce using rule 176
	'chan'         reduce using rule 176
	'd_step'       reduce using rule 176
	'do'           reduce using rule 176
	'else'         reduce using rule 176
	'empty'        reduce using rule 176
	'enabled'      reduce using rule 176
	'false'        reduce using rule 176
	'fi'           reduce using rule 176
	'for'          reduce using rule 176
	'full'         reduce using rule 176
	'get_priority' reduce using rule 176
	'goto'         reduce using rule 176
	'hidden'       reduce using rule 176
	'if'           reduce using rule 176
	'int'          reduce using rule 176
	'len'          reduce using rule 176
	'mtype'        reduce using rule 176
	'np_'          reduce using rule 176
	'od'           reduce using rule 176
	'pc_value'     reduce using rule 176
	'print'        reduce using rule 176
	'printf'       reduce using rule 176
	'printm'       reduce using rule 176
	'run'          reduce using rule 176
	'select'       reduce using rule 176
	'set_priority' reduce using rule 176
	'short'        reduce using rule 176
	'show'         reduce using rule 176
	'skip'         reduce using rule 176
	'timeout'      reduce using rule 176
	'true'         reduce using rule 176
	'unsigned'     reduce using rule 176
	'xr'           reduce using rule 176
	'xs'           reduce using rule 176
	'{'            reduce using rule 176
	'}'            reduce using rule 176
	'~'            reduce using rule 176
	L_integ        reduce using rule 176
	L_PIdent       reduce using rule 176
	%eof           reduce using rule 176


State 312

	Step -> 'xr' VarRefList .                           (rule 175)

	'!'            reduce using rule 175
	'('            reduce using rule 175
	')'            reduce using rule 175
	'-'            reduce using rule 175
	'->'           reduce using rule 175
	'::'           reduce using rule 175
	';'            reduce using rule 175
	'assert'       reduce using rule 175
	'atomic'       reduce using rule 175
	'bit'          reduce using rule 175
	'bool'         reduce using rule 175
	'break'        reduce using rule 175
	'byte'         reduce using rule 175
	'chan'         reduce using rule 175
	'd_step'       reduce using rule 175
	'do'           reduce using rule 175
	'else'         reduce using rule 175
	'empty'        reduce using rule 175
	'enabled'      reduce using rule 175
	'false'        reduce using rule 175
	'fi'           reduce using rule 175
	'for'          reduce using rule 175
	'full'         reduce using rule 175
	'get_priority' reduce using rule 175
	'goto'         reduce using rule 175
	'hidden'       reduce using rule 175
	'if'           reduce using rule 175
	'int'          reduce using rule 175
	'len'          reduce using rule 175
	'mtype'        reduce using rule 175
	'np_'          reduce using rule 175
	'od'           reduce using rule 175
	'pc_value'     reduce using rule 175
	'print'        reduce using rule 175
	'printf'       reduce using rule 175
	'printm'       reduce using rule 175
	'run'          reduce using rule 175
	'select'       reduce using rule 175
	'set_priority' reduce using rule 175
	'short'        reduce using rule 175
	'show'         reduce using rule 175
	'skip'         reduce using rule 175
	'timeout'      reduce using rule 175
	'true'         reduce using rule 175
	'unsigned'     reduce using rule 175
	'xr'           reduce using rule 175
	'xs'           reduce using rule 175
	'{'            reduce using rule 175
	'}'            reduce using rule 175
	'~'            reduce using rule 175
	L_integ        reduce using rule 175
	L_PIdent       reduce using rule 175
	%eof           reduce using rule 175


State 313

	Mtype -> 'mtype' Mequals . '{' Mname '}' Msep       (rule 142)

	'{'            shift, and enter state 426


State 314

	Step -> Stmt UStmt .                                (rule 173)

	'!'            reduce using rule 173
	'('            reduce using rule 173
	')'            reduce using rule 173
	'-'            reduce using rule 173
	'->'           reduce using rule 173
	'::'           reduce using rule 173
	';'            reduce using rule 173
	'assert'       reduce using rule 173
	'atomic'       reduce using rule 173
	'bit'          reduce using rule 173
	'bool'         reduce using rule 173
	'break'        reduce using rule 173
	'byte'         reduce using rule 173
	'chan'         reduce using rule 173
	'd_step'       reduce using rule 173
	'do'           reduce using rule 173
	'else'         reduce using rule 173
	'empty'        reduce using rule 173
	'enabled'      reduce using rule 173
	'false'        reduce using rule 173
	'fi'           reduce using rule 173
	'for'          reduce using rule 173
	'full'         reduce using rule 173
	'get_priority' reduce using rule 173
	'goto'         reduce using rule 173
	'hidden'       reduce using rule 173
	'if'           reduce using rule 173
	'int'          reduce using rule 173
	'len'          reduce using rule 173
	'mtype'        reduce using rule 173
	'np_'          reduce using rule 173
	'od'           reduce using rule 173
	'pc_value'     reduce using rule 173
	'print'        reduce using rule 173
	'printf'       reduce using rule 173
	'printm'       reduce using rule 173
	'run'          reduce using rule 173
	'select'       reduce using rule 173
	'set_priority' reduce using rule 173
	'short'        reduce using rule 173
	'show'         reduce using rule 173
	'skip'         reduce using rule 173
	'timeout'      reduce using rule 173
	'true'         reduce using rule 173
	'unsigned'     reduce using rule 173
	'xr'           reduce using rule 173
	'xs'           reduce using rule 173
	'{'            reduce using rule 173
	'}'            reduce using rule 173
	'~'            reduce using rule 173
	L_integ        reduce using rule 173
	L_PIdent       reduce using rule 173
	%eof           reduce using rule 173


State 315

	Decl -> DeclVisible Typename . DclIvar              (rule 152)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	DclIvar        goto state 425
	Ivar           goto state 221
	Name           goto state 188

State 316

	Decl -> DeclVisible UnsignedDecl .                  (rule 153)

	'!'            reduce using rule 153
	'('            reduce using rule 153
	')'            reduce using rule 153
	'-'            reduce using rule 153
	'->'           reduce using rule 153
	'::'           reduce using rule 153
	';'            reduce using rule 153
	'active'       reduce using rule 153
	'assert'       reduce using rule 153
	'atomic'       reduce using rule 153
	'bit'          reduce using rule 153
	'bool'         reduce using rule 153
	'break'        reduce using rule 153
	'byte'         reduce using rule 153
	'chan'         reduce using rule 153
	'd_step'       reduce using rule 153
	'do'           reduce using rule 153
	'else'         reduce using rule 153
	'empty'        reduce using rule 153
	'enabled'      reduce using rule 153
	'false'        reduce using rule 153
	'fi'           reduce using rule 153
	'for'          reduce using rule 153
	'full'         reduce using rule 153
	'get_priority' reduce using rule 153
	'goto'         reduce using rule 153
	'hidden'       reduce using rule 153
	'if'           reduce using rule 153
	'init'         reduce using rule 153
	'inline'       reduce using rule 153
	'int'          reduce using rule 153
	'len'          reduce using rule 153
	'mtype'        reduce using rule 153
	'never'        reduce using rule 153
	'np_'          reduce using rule 153
	'od'           reduce using rule 153
	'pc_value'     reduce using rule 153
	'print'        reduce using rule 153
	'printf'       reduce using rule 153
	'printm'       reduce using rule 153
	'proctype'     reduce using rule 153
	'run'          reduce using rule 153
	'select'       reduce using rule 153
	'set_priority' reduce using rule 153
	'short'        reduce using rule 153
	'show'         reduce using rule 153
	'skip'         reduce using rule 153
	'timeout'      reduce using rule 153
	'trace'        reduce using rule 153
	'true'         reduce using rule 153
	'typedef'      reduce using rule 153
	'unsigned'     reduce using rule 153
	'xr'           reduce using rule 153
	'xs'           reduce using rule 153
	'{'            reduce using rule 153
	'}'            reduce using rule 153
	'~'            reduce using rule 153
	L_integ        reduce using rule 153
	L_PIdent       reduce using rule 153
	%eof           reduce using rule 153


State 317

	DeclList -> Decl Separator .                        (rule 149)
	DeclList -> Decl Separator . DeclList               (rule 151)

	'!'            reduce using rule 149
	'('            reduce using rule 149
	')'            reduce using rule 149
	'-'            reduce using rule 149
	'->'           reduce using rule 149
	'::'           reduce using rule 149
	';'            reduce using rule 149
	'active'       reduce using rule 149
	'assert'       reduce using rule 149
	'atomic'       reduce using rule 149
	'bit'          reduce using rule 156
			(reduce using rule 149)

	'bool'         reduce using rule 156
			(reduce using rule 149)

	'break'        reduce using rule 149
	'byte'         reduce using rule 156
			(reduce using rule 149)

	'chan'         reduce using rule 156
			(reduce using rule 149)

	'd_step'       reduce using rule 149
	'do'           reduce using rule 149
	'else'         reduce using rule 149
	'empty'        reduce using rule 149
	'enabled'      reduce using rule 149
	'false'        reduce using rule 149
	'fi'           reduce using rule 149
	'for'          reduce using rule 149
	'full'         reduce using rule 149
	'get_priority' reduce using rule 149
	'goto'         reduce using rule 149
	'hidden'       shift, and enter state 199
			(reduce using rule 149)

	'if'           reduce using rule 149
	'init'         reduce using rule 149
	'inline'       reduce using rule 149
	'int'          reduce using rule 156
			(reduce using rule 149)

	'len'          reduce using rule 149
	'mtype'        reduce using rule 156
			(reduce using rule 149)

	'never'        reduce using rule 149
	'np_'          reduce using rule 149
	'od'           reduce using rule 149
	'pc_value'     reduce using rule 149
	'print'        reduce using rule 149
	'printf'       reduce using rule 149
	'printm'       reduce using rule 149
	'proctype'     reduce using rule 149
	'run'          reduce using rule 149
	'select'       reduce using rule 149
	'set_priority' reduce using rule 149
	'short'        reduce using rule 156
			(reduce using rule 149)

	'show'         shift, and enter state 201
			(reduce using rule 149)

	'skip'         reduce using rule 149
	'timeout'      reduce using rule 149
	'trace'        reduce using rule 149
	'true'         reduce using rule 149
	'typedef'      reduce using rule 149
	'unsigned'     reduce using rule 156
			(reduce using rule 149)

	'xr'           reduce using rule 149
	'xs'           reduce using rule 149
	'{'            reduce using rule 149
	'}'            reduce using rule 149
	'~'            reduce using rule 149
	L_integ        reduce using rule 149
	L_PIdent       reduce using rule 156
			(reduce using rule 149)

	%eof           reduce using rule 149

	Visible        goto state 192
	DeclList       goto state 424
	Decl           goto state 195
	DeclVisible    goto state 196

State 318

	VarRefList -> VarRef ',' . VarRefList               (rule 178)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRefList     goto state 423
	VarRef         goto state 191
	Name           goto state 145

State 319

	AnyExpr -> AnyExpr BinOp . AnyExpr                  (rule 180)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 422
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 320

	Ivar -> Name IvarConst . IvarAssign                 (rule 195)

	'!'            reduce using rule 198
	'('            reduce using rule 198
	')'            reduce using rule 198
	','            reduce using rule 198
	'-'            reduce using rule 198
	'->'           reduce using rule 198
	'::'           reduce using rule 198
	';'            reduce using rule 198
	'='            shift, and enter state 184
	'active'       reduce using rule 198
	'assert'       reduce using rule 198
	'atomic'       reduce using rule 198
	'bit'          reduce using rule 198
	'bool'         reduce using rule 198
	'break'        reduce using rule 198
	'byte'         reduce using rule 198
	'chan'         reduce using rule 198
	'd_step'       reduce using rule 198
	'do'           reduce using rule 198
	'else'         reduce using rule 198
	'empty'        reduce using rule 198
	'enabled'      reduce using rule 198
	'false'        reduce using rule 198
	'fi'           reduce using rule 198
	'for'          reduce using rule 198
	'full'         reduce using rule 198
	'get_priority' reduce using rule 198
	'goto'         reduce using rule 198
	'hidden'       reduce using rule 198
	'if'           reduce using rule 198
	'init'         reduce using rule 198
	'inline'       reduce using rule 198
	'int'          reduce using rule 198
	'len'          reduce using rule 198
	'mtype'        reduce using rule 198
	'never'        reduce using rule 198
	'np_'          reduce using rule 198
	'od'           reduce using rule 198
	'pc_value'     reduce using rule 198
	'print'        reduce using rule 198
	'printf'       reduce using rule 198
	'printm'       reduce using rule 198
	'proctype'     reduce using rule 198
	'run'          reduce using rule 198
	'select'       reduce using rule 198
	'set_priority' reduce using rule 198
	'short'        reduce using rule 198
	'show'         reduce using rule 198
	'skip'         reduce using rule 198
	'timeout'      reduce using rule 198
	'trace'        reduce using rule 198
	'true'         reduce using rule 198
	'typedef'      reduce using rule 198
	'unsigned'     reduce using rule 198
	'xr'           reduce using rule 198
	'xs'           reduce using rule 198
	'{'            reduce using rule 198
	'}'            reduce using rule 198
	'~'            reduce using rule 198
	L_integ        reduce using rule 198
	L_PIdent       reduce using rule 198
	%eof           reduce using rule 198

	IvarAssign     goto state 421

State 321

	IvarConst -> '[' Const . ']'                        (rule 197)

	']'            shift, and enter state 420


State 322

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	IvarAssign -> '=' AnyExpr .                         (rule 199)

	'!'            reduce using rule 199
	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	'('            reduce using rule 199
	')'            reduce using rule 199
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	','            reduce using rule 199
	'-'            shift, and enter state 273
			(reduce using rule 199)

	'->'           reduce using rule 199
	'/'            shift, and enter state 274
	'::'           reduce using rule 199
	';'            reduce using rule 199
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'active'       reduce using rule 199
	'assert'       reduce using rule 199
	'atomic'       reduce using rule 199
	'bit'          reduce using rule 199
	'bool'         reduce using rule 199
	'break'        reduce using rule 199
	'byte'         reduce using rule 199
	'chan'         reduce using rule 199
	'd_step'       reduce using rule 199
	'do'           reduce using rule 199
	'else'         reduce using rule 199
	'empty'        reduce using rule 199
	'enabled'      reduce using rule 199
	'false'        reduce using rule 199
	'fi'           reduce using rule 199
	'for'          reduce using rule 199
	'full'         reduce using rule 199
	'get_priority' reduce using rule 199
	'goto'         reduce using rule 199
	'hidden'       reduce using rule 199
	'if'           reduce using rule 199
	'init'         reduce using rule 199
	'inline'       reduce using rule 199
	'int'          reduce using rule 199
	'len'          reduce using rule 199
	'mtype'        reduce using rule 199
	'never'        reduce using rule 199
	'np_'          reduce using rule 199
	'od'           reduce using rule 199
	'pc_value'     reduce using rule 199
	'print'        reduce using rule 199
	'printf'       reduce using rule 199
	'printm'       reduce using rule 199
	'proctype'     reduce using rule 199
	'run'          reduce using rule 199
	'select'       reduce using rule 199
	'set_priority' reduce using rule 199
	'short'        reduce using rule 199
	'show'         reduce using rule 199
	'skip'         reduce using rule 199
	'timeout'      reduce using rule 199
	'trace'        reduce using rule 199
	'true'         reduce using rule 199
	'typedef'      reduce using rule 199
	'unsigned'     reduce using rule 199
	'xr'           reduce using rule 199
	'xs'           reduce using rule 199
	'{'            reduce using rule 199
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284
	'}'            reduce using rule 199
	'~'            reduce using rule 199
	L_integ        reduce using rule 199
	L_PIdent       reduce using rule 199
	%eof           reduce using rule 199

	AndOr          goto state 265
	BinOp          goto state 319

State 323

	IvarAssign -> '=' ChInit .                          (rule 200)

	'!'            reduce using rule 200
	'('            reduce using rule 200
	')'            reduce using rule 200
	','            reduce using rule 200
	'-'            reduce using rule 200
	'->'           reduce using rule 200
	'::'           reduce using rule 200
	';'            reduce using rule 200
	'active'       reduce using rule 200
	'assert'       reduce using rule 200
	'atomic'       reduce using rule 200
	'bit'          reduce using rule 200
	'bool'         reduce using rule 200
	'break'        reduce using rule 200
	'byte'         reduce using rule 200
	'chan'         reduce using rule 200
	'd_step'       reduce using rule 200
	'do'           reduce using rule 200
	'else'         reduce using rule 200
	'empty'        reduce using rule 200
	'enabled'      reduce using rule 200
	'false'        reduce using rule 200
	'fi'           reduce using rule 200
	'for'          reduce using rule 200
	'full'         reduce using rule 200
	'get_priority' reduce using rule 200
	'goto'         reduce using rule 200
	'hidden'       reduce using rule 200
	'if'           reduce using rule 200
	'init'         reduce using rule 200
	'inline'       reduce using rule 200
	'int'          reduce using rule 200
	'len'          reduce using rule 200
	'mtype'        reduce using rule 200
	'never'        reduce using rule 200
	'np_'          reduce using rule 200
	'od'           reduce using rule 200
	'pc_value'     reduce using rule 200
	'print'        reduce using rule 200
	'printf'       reduce using rule 200
	'printm'       reduce using rule 200
	'proctype'     reduce using rule 200
	'run'          reduce using rule 200
	'select'       reduce using rule 200
	'set_priority' reduce using rule 200
	'short'        reduce using rule 200
	'show'         reduce using rule 200
	'skip'         reduce using rule 200
	'timeout'      reduce using rule 200
	'trace'        reduce using rule 200
	'true'         reduce using rule 200
	'typedef'      reduce using rule 200
	'unsigned'     reduce using rule 200
	'xr'           reduce using rule 200
	'xs'           reduce using rule 200
	'{'            reduce using rule 200
	'}'            reduce using rule 200
	'~'            reduce using rule 200
	L_integ        reduce using rule 200
	L_PIdent       reduce using rule 200
	%eof           reduce using rule 200


State 324

	ChInit -> '[' Const . ']' 'of' '{' ChType '}'       (rule 201)

	']'            shift, and enter state 419


State 325

	ChType -> Typename ',' . ChType                     (rule 203)

	'bit'          shift, and enter state 174
	'bool'         shift, and enter state 175
	'byte'         shift, and enter state 176
	'chan'         shift, and enter state 177
	'int'          shift, and enter state 178
	'mtype'        shift, and enter state 179
	'short'        shift, and enter state 180
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Typename       goto state 171
	ChType         goto state 418
	Uname          goto state 173
	Name           goto state 76

State 326

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	VarRefAnyExpr -> '[' AnyExpr . ']'                  (rule 206)

	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
	'/'            shift, and enter state 274
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	']'            shift, and enter state 417
	'^'            shift, and enter state 282
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284

	AndOr          goto state 265
	BinOp          goto state 319

State 327

	VarRefTypedef -> '.' VarRef .                       (rule 208)

	'!'            reduce using rule 208
	'!='           reduce using rule 208
	'%'            reduce using rule 208
	'&'            reduce using rule 208
	'&&'           reduce using rule 208
	'('            reduce using rule 208
	')'            reduce using rule 208
	'*'            reduce using rule 208
	'+'            reduce using rule 208
	','            reduce using rule 208
	'-'            reduce using rule 208
	'->'           reduce using rule 208
	'..'           reduce using rule 208
	'/'            reduce using rule 208
	':'            reduce using rule 208
	'::'           reduce using rule 208
	';'            reduce using rule 208
	'<'            reduce using rule 208
	'<<'           reduce using rule 208
	'<='           reduce using rule 208
	'='            reduce using rule 208
	'=='           reduce using rule 208
	'>'            reduce using rule 208
	'>='           reduce using rule 208
	'>>'           reduce using rule 208
	'?'            reduce using rule 208
	']'            reduce using rule 208
	'^'            reduce using rule 208
	'active'       reduce using rule 208
	'assert'       reduce using rule 208
	'atomic'       reduce using rule 208
	'bit'          reduce using rule 208
	'bool'         reduce using rule 208
	'break'        reduce using rule 208
	'byte'         reduce using rule 208
	'chan'         reduce using rule 208
	'd_step'       reduce using rule 208
	'do'           reduce using rule 208
	'else'         reduce using rule 208
	'empty'        reduce using rule 208
	'enabled'      reduce using rule 208
	'eval'         reduce using rule 208
	'false'        reduce using rule 208
	'fi'           reduce using rule 208
	'for'          reduce using rule 208
	'full'         reduce using rule 208
	'get_priority' reduce using rule 208
	'goto'         reduce using rule 208
	'hidden'       reduce using rule 208
	'if'           reduce using rule 208
	'init'         reduce using rule 208
	'inline'       reduce using rule 208
	'int'          reduce using rule 208
	'len'          reduce using rule 208
	'mtype'        reduce using rule 208
	'never'        reduce using rule 208
	'np_'          reduce using rule 208
	'od'           reduce using rule 208
	'pc_value'     reduce using rule 208
	'print'        reduce using rule 208
	'printf'       reduce using rule 208
	'printm'       reduce using rule 208
	'proctype'     reduce using rule 208
	'run'          reduce using rule 208
	'select'       reduce using rule 208
	'set_priority' reduce using rule 208
	'short'        reduce using rule 208
	'show'         reduce using rule 208
	'skip'         reduce using rule 208
	'timeout'      reduce using rule 208
	'trace'        reduce using rule 208
	'true'         reduce using rule 208
	'typedef'      reduce using rule 208
	'unless'       reduce using rule 208
	'unsigned'     reduce using rule 208
	'xr'           reduce using rule 208
	'xs'           reduce using rule 208
	'{'            reduce using rule 208
	'|'            reduce using rule 208
	'||'           reduce using rule 208
	'}'            reduce using rule 208
	'~'            reduce using rule 208
	L_integ        reduce using rule 208
	L_PIdent       reduce using rule 208
	%eof           reduce using rule 208


State 328

	Send -> VarRef '!' . SendArgs                       (rule 209)
	Send -> VarRef '!' . '!' SendArgs                   (rule 210)

	'!'            shift, and enter state 416
			(reduce using rule 221)

	'('            shift, and enter state 106
			(reduce using rule 221)

	')'            reduce using rule 221
	'-'            shift, and enter state 88
			(reduce using rule 221)

	'->'           reduce using rule 221
	'::'           reduce using rule 221
	';'            reduce using rule 221
	'assert'       reduce using rule 221
	'atomic'       reduce using rule 221
	'bit'          reduce using rule 221
	'bool'         reduce using rule 221
	'break'        reduce using rule 221
	'byte'         reduce using rule 221
	'chan'         reduce using rule 221
	'd_step'       reduce using rule 221
	'do'           reduce using rule 221
	'else'         reduce using rule 221
	'empty'        reduce using rule 221
	'enabled'      shift, and enter state 90
			(reduce using rule 221)

	'false'        shift, and enter state 91
			(reduce using rule 221)

	'fi'           reduce using rule 221
	'for'          reduce using rule 221
	'full'         reduce using rule 221
	'get_priority' shift, and enter state 93
			(reduce using rule 221)

	'goto'         reduce using rule 221
	'hidden'       reduce using rule 221
	'if'           reduce using rule 221
	'int'          reduce using rule 221
	'len'          shift, and enter state 94
			(reduce using rule 221)

	'mtype'        reduce using rule 221
	'np_'          shift, and enter state 95
			(reduce using rule 221)

	'od'           reduce using rule 221
	'pc_value'     shift, and enter state 96
			(reduce using rule 221)

	'print'        reduce using rule 221
	'printf'       reduce using rule 221
	'printm'       reduce using rule 221
	'run'          shift, and enter state 97
			(reduce using rule 221)

	'select'       reduce using rule 221
	'set_priority' shift, and enter state 98
			(reduce using rule 221)

	'short'        reduce using rule 221
	'show'         reduce using rule 221
	'skip'         shift, and enter state 99
			(reduce using rule 221)

	'timeout'      shift, and enter state 100
			(reduce using rule 221)

	'true'         shift, and enter state 101
			(reduce using rule 221)

	'unless'       reduce using rule 221
	'unsigned'     reduce using rule 221
	'xr'           reduce using rule 221
	'xs'           reduce using rule 221
	'{'            reduce using rule 221
	'}'            reduce using rule 221
	'~'            shift, and enter state 102
			(reduce using rule 221)

	L_integ        shift, and enter state 71
			(reduce using rule 221)

	L_PIdent       shift, and enter state 74
			(reduce using rule 221)

	%eof           reduce using rule 221

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 157
	VarRef         goto state 82
	Poll           goto state 83
	SendArgs       goto state 415
	ArgList        goto state 159
	Name           goto state 85

State 329

	Receive -> VarRef '?' . RecvArgs                    (rule 211)
	Receive -> VarRef '?' . '?' RecvArgs                (rule 212)
	Receive -> VarRef '?' . '<' RecvArgs '>'            (rule 213)
	Receive -> VarRef '?' . '?' '<' RecvArgs '>'        (rule 214)

	'-'            shift, and enter state 149
	'<'            shift, and enter state 390
	'?'            shift, and enter state 414
	'eval'         shift, and enter state 150
	'false'        reduce using rule 226
	'skip'         reduce using rule 226
	'true'         reduce using rule 226
	L_integ        reduce using rule 226
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 146
	RecvArgs       goto state 389
	RecvArgList    goto state 155
	UnaryMinus     goto state 147
	RecvArg        goto state 153
	Name           goto state 145

State 330

	Poll -> VarRef '?' . '[' RecvArgs ']'               (rule 215)
	Poll -> VarRef '?' . '?' '[' RecvArgs ']'           (rule 216)

	'?'            shift, and enter state 413
	'['            shift, and enter state 392


State 331

	SendArgs -> AnyExpr '(' . ArgList ')'               (rule 218)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	')'            reduce using rule 221
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 103
	VarRef         goto state 82
	Poll           goto state 83
	ArgList        goto state 412
	Name           goto state 85

State 332

	ArgList -> AnyExpr ',' . ArgList                    (rule 219)

	'!'            shift, and enter state 86
			(reduce using rule 221)

	'('            shift, and enter state 106
			(reduce using rule 221)

	')'            reduce using rule 221
	'-'            shift, and enter state 88
			(reduce using rule 221)

	'->'           reduce using rule 221
	'::'           reduce using rule 221
	';'            reduce using rule 221
	'assert'       reduce using rule 221
	'atomic'       reduce using rule 221
	'bit'          reduce using rule 221
	'bool'         reduce using rule 221
	'break'        reduce using rule 221
	'byte'         reduce using rule 221
	'chan'         reduce using rule 221
	'd_step'       reduce using rule 221
	'do'           reduce using rule 221
	'else'         reduce using rule 221
	'empty'        reduce using rule 221
	'enabled'      shift, and enter state 90
			(reduce using rule 221)

	'false'        shift, and enter state 91
			(reduce using rule 221)

	'fi'           reduce using rule 221
	'for'          reduce using rule 221
	'full'         reduce using rule 221
	'get_priority' shift, and enter state 93
			(reduce using rule 221)

	'goto'         reduce using rule 221
	'hidden'       reduce using rule 221
	'if'           reduce using rule 221
	'int'          reduce using rule 221
	'len'          shift, and enter state 94
			(reduce using rule 221)

	'mtype'        reduce using rule 221
	'np_'          shift, and enter state 95
			(reduce using rule 221)

	'od'           reduce using rule 221
	'pc_value'     shift, and enter state 96
			(reduce using rule 221)

	'print'        reduce using rule 221
	'printf'       reduce using rule 221
	'printm'       reduce using rule 221
	'run'          shift, and enter state 97
			(reduce using rule 221)

	'select'       reduce using rule 221
	'set_priority' shift, and enter state 98
			(reduce using rule 221)

	'short'        reduce using rule 221
	'show'         reduce using rule 221
	'skip'         shift, and enter state 99
			(reduce using rule 221)

	'timeout'      shift, and enter state 100
			(reduce using rule 221)

	'true'         shift, and enter state 101
			(reduce using rule 221)

	'unless'       reduce using rule 221
	'unsigned'     reduce using rule 221
	'xr'           reduce using rule 221
	'xs'           reduce using rule 221
	'{'            reduce using rule 221
	'}'            reduce using rule 221
	'~'            shift, and enter state 102
			(reduce using rule 221)

	L_integ        shift, and enter state 71
			(reduce using rule 221)

	L_PIdent       shift, and enter state 74
			(reduce using rule 221)

	%eof           reduce using rule 221

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 103
	VarRef         goto state 82
	Poll           goto state 83
	ArgList        goto state 411
	Name           goto state 85

State 333

	RecvArgs -> RecvArgList '(' . RecvArgs ')'          (rule 223)

	'-'            shift, and enter state 149
	'eval'         shift, and enter state 150
	'false'        reduce using rule 226
	'skip'         reduce using rule 226
	'true'         reduce using rule 226
	L_integ        reduce using rule 226
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 146
	RecvArgs       goto state 410
	RecvArgList    goto state 155
	UnaryMinus     goto state 147
	RecvArg        goto state 153
	Name           goto state 145

State 334

	RecvArgList -> RecvArg RecvArgList .                (rule 225)

	'!'            reduce using rule 225
	'('            reduce using rule 225
	')'            reduce using rule 225
	'-'            reduce using rule 225
	'->'           reduce using rule 225
	'::'           reduce using rule 225
	';'            reduce using rule 225
	'>'            reduce using rule 225
	']'            reduce using rule 225
	'assert'       reduce using rule 225
	'atomic'       reduce using rule 225
	'bit'          reduce using rule 225
	'bool'         reduce using rule 225
	'break'        reduce using rule 225
	'byte'         reduce using rule 225
	'chan'         reduce using rule 225
	'd_step'       reduce using rule 225
	'do'           reduce using rule 225
	'else'         reduce using rule 225
	'empty'        reduce using rule 225
	'enabled'      reduce using rule 225
	'false'        reduce using rule 225
	'fi'           reduce using rule 225
	'for'          reduce using rule 225
	'full'         reduce using rule 225
	'get_priority' reduce using rule 225
	'goto'         reduce using rule 225
	'hidden'       reduce using rule 225
	'if'           reduce using rule 225
	'int'          reduce using rule 225
	'len'          reduce using rule 225
	'mtype'        reduce using rule 225
	'np_'          reduce using rule 225
	'od'           reduce using rule 225
	'pc_value'     reduce using rule 225
	'print'        reduce using rule 225
	'printf'       reduce using rule 225
	'printm'       reduce using rule 225
	'run'          reduce using rule 225
	'select'       reduce using rule 225
	'set_priority' reduce using rule 225
	'short'        reduce using rule 225
	'show'         reduce using rule 225
	'skip'         reduce using rule 225
	'timeout'      reduce using rule 225
	'true'         reduce using rule 225
	'unless'       reduce using rule 225
	'unsigned'     reduce using rule 225
	'xr'           reduce using rule 225
	'xs'           reduce using rule 225
	'{'            reduce using rule 225
	'}'            reduce using rule 225
	'~'            reduce using rule 225
	L_integ        reduce using rule 225
	L_PIdent       reduce using rule 225
	%eof           reduce using rule 225


State 335

	RecvArg -> 'eval' '(' . VarRef ')'                  (rule 229)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 409
	Name           goto state 145

State 336

	RecvArg -> UnaryMinus Const .                       (rule 230)

	'!'            reduce using rule 230
	'('            reduce using rule 230
	')'            reduce using rule 230
	'-'            reduce using rule 230
	'->'           reduce using rule 230
	'::'           reduce using rule 230
	';'            reduce using rule 230
	'>'            reduce using rule 230
	']'            reduce using rule 230
	'assert'       reduce using rule 230
	'atomic'       reduce using rule 230
	'bit'          reduce using rule 230
	'bool'         reduce using rule 230
	'break'        reduce using rule 230
	'byte'         reduce using rule 230
	'chan'         reduce using rule 230
	'd_step'       reduce using rule 230
	'do'           reduce using rule 230
	'else'         reduce using rule 230
	'empty'        reduce using rule 230
	'enabled'      reduce using rule 230
	'eval'         reduce using rule 230
	'false'        reduce using rule 230
	'fi'           reduce using rule 230
	'for'          reduce using rule 230
	'full'         reduce using rule 230
	'get_priority' reduce using rule 230
	'goto'         reduce using rule 230
	'hidden'       reduce using rule 230
	'if'           reduce using rule 230
	'int'          reduce using rule 230
	'len'          reduce using rule 230
	'mtype'        reduce using rule 230
	'np_'          reduce using rule 230
	'od'           reduce using rule 230
	'pc_value'     reduce using rule 230
	'print'        reduce using rule 230
	'printf'       reduce using rule 230
	'printm'       reduce using rule 230
	'run'          reduce using rule 230
	'select'       reduce using rule 230
	'set_priority' reduce using rule 230
	'short'        reduce using rule 230
	'show'         reduce using rule 230
	'skip'         reduce using rule 230
	'timeout'      reduce using rule 230
	'true'         reduce using rule 230
	'unless'       reduce using rule 230
	'unsigned'     reduce using rule 230
	'xr'           reduce using rule 230
	'xs'           reduce using rule 230
	'{'            reduce using rule 230
	'}'            reduce using rule 230
	'~'            reduce using rule 230
	L_integ        reduce using rule 230
	L_PIdent       reduce using rule 230
	%eof           reduce using rule 230


State 337

	VarRef -> Name VarRefAnyExpr . VarRefTypedef        (rule 204)

	'!'            reduce using rule 207
	'!='           reduce using rule 207
	'%'            reduce using rule 207
	'&'            reduce using rule 207
	'&&'           reduce using rule 207
	'('            reduce using rule 207
	')'            reduce using rule 207
	'*'            reduce using rule 207
	'+'            reduce using rule 207
	','            reduce using rule 207
	'-'            reduce using rule 207
	'->'           reduce using rule 207
	'.'            shift, and enter state 167
	'..'           reduce using rule 207
	'/'            reduce using rule 207
	':'            reduce using rule 207
	'::'           reduce using rule 207
	';'            reduce using rule 207
	'<'            reduce using rule 207
	'<<'           reduce using rule 207
	'<='           reduce using rule 207
	'='            reduce using rule 207
	'=='           reduce using rule 207
	'>'            reduce using rule 207
	'>='           reduce using rule 207
	'>>'           reduce using rule 207
	'?'            reduce using rule 207
	']'            reduce using rule 207
	'^'            reduce using rule 207
	'active'       reduce using rule 207
	'assert'       reduce using rule 207
	'atomic'       reduce using rule 207
	'bit'          reduce using rule 207
	'bool'         reduce using rule 207
	'break'        reduce using rule 207
	'byte'         reduce using rule 207
	'chan'         reduce using rule 207
	'd_step'       reduce using rule 207
	'do'           reduce using rule 207
	'else'         reduce using rule 207
	'empty'        reduce using rule 207
	'enabled'      reduce using rule 207
	'eval'         reduce using rule 207
	'false'        reduce using rule 207
	'fi'           reduce using rule 207
	'for'          reduce using rule 207
	'full'         reduce using rule 207
	'get_priority' reduce using rule 207
	'goto'         reduce using rule 207
	'hidden'       reduce using rule 207
	'if'           reduce using rule 207
	'init'         reduce using rule 207
	'inline'       reduce using rule 207
	'int'          reduce using rule 207
	'len'          reduce using rule 207
	'mtype'        reduce using rule 207
	'never'        reduce using rule 207
	'np_'          reduce using rule 207
	'od'           reduce using rule 207
	'pc_value'     reduce using rule 207
	'print'        reduce using rule 207
	'printf'       reduce using rule 207
	'printm'       reduce using rule 207
	'proctype'     reduce using rule 207
	'run'          reduce using rule 207
	'select'       reduce using rule 207
	'set_priority' reduce using rule 207
	'short'        reduce using rule 207
	'show'         reduce using rule 207
	'skip'         reduce using rule 207
	'timeout'      reduce using rule 207
	'trace'        reduce using rule 207
	'true'         reduce using rule 207
	'typedef'      reduce using rule 207
	'unless'       reduce using rule 207
	'unsigned'     reduce using rule 207
	'xr'           reduce using rule 207
	'xs'           reduce using rule 207
	'{'            reduce using rule 207
	'|'            reduce using rule 207
	'||'           reduce using rule 207
	'}'            reduce using rule 207
	'~'            reduce using rule 207
	L_integ        reduce using rule 207
	L_PIdent       reduce using rule 207
	%eof           reduce using rule 207

	VarRefTypedef  goto state 408

State 338

	Assign -> VarRef '+' . '+'                          (rule 232)

	'+'            shift, and enter state 407


State 339

	Assign -> VarRef '-' . '-'                          (rule 233)

	'-'            shift, and enter state 406


State 340

	Assign -> VarRef '=' . AnyExpr                      (rule 231)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 405
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 341

	Pargs -> String ',' . ArgList                       (rule 236)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	')'            reduce using rule 221
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
	%eof           reduce using rule 221

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 103
	VarRef         goto state 82
	Poll           goto state 83
	ArgList        goto state 404
	Name           goto state 85

State 342

	PargList -> ',' ArgList .                           (rule 238)

	%eof           reduce using rule 238


State 343

	Stmt -> '{' Sequence . '}'                          (rule 245)

	'}'            shift, and enter state 403


State 344

	Stmt -> 'select' '(' . Sequence ')'                 (rule 244)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)


	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 402
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 345

	Stmt -> 'if' Options . 'fi'                         (rule 239)

	'fi'           shift, and enter state 401


State 346

	Stmt -> 'goto' Name .                               (rule 251)

	'!'            reduce using rule 251
	'('            reduce using rule 251
	')'            reduce using rule 251
	'-'            reduce using rule 251
	'->'           reduce using rule 251
	'::'           reduce using rule 251
	';'            reduce using rule 251
	'assert'       reduce using rule 251
	'atomic'       reduce using rule 251
	'bit'          reduce using rule 251
	'bool'         reduce using rule 251
	'break'        reduce using rule 251
	'byte'         reduce using rule 251
	'chan'         reduce using rule 251
	'd_step'       reduce using rule 251
	'do'           reduce using rule 251
	'else'         reduce using rule 251
	'empty'        reduce using rule 251
	'enabled'      reduce using rule 251
	'false'        reduce using rule 251
	'fi'           reduce using rule 251
	'for'          reduce using rule 251
	'full'         reduce using rule 251
	'get_priority' reduce using rule 251
	'goto'         reduce using rule 251
	'hidden'       reduce using rule 251
	'if'           reduce using rule 251
	'int'          reduce using rule 251
	'len'          reduce using rule 251
	'mtype'        reduce using rule 251
	'np_'          reduce using rule 251
	'od'           reduce using rule 251
	'pc_value'     reduce using rule 251
	'print'        reduce using rule 251
	'printf'       reduce using rule 251
	'printm'       reduce using rule 251
	'run'          reduce using rule 251
	'select'       reduce using rule 251
	'set_priority' reduce using rule 251
	'short'        reduce using rule 251
	'show'         reduce using rule 251
	'skip'         reduce using rule 251
	'timeout'      reduce using rule 251
	'true'         reduce using rule 251
	'unless'       reduce using rule 251
	'unsigned'     reduce using rule 251
	'xr'           reduce using rule 251
	'xs'           reduce using rule 251
	'{'            reduce using rule 251
	'}'            reduce using rule 251
	'~'            reduce using rule 251
	L_integ        reduce using rule 251
	L_PIdent       reduce using rule 251
	%eof           reduce using rule 251


State 347

	Stmt -> 'for' '(' . Range ')' '{' Sequence '}'      (rule 241)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Range          goto state 400
	Name           goto state 113

State 348

	Stmt -> 'do' Options . 'od'                         (rule 240)

	'od'           shift, and enter state 399


State 349

	Stmt -> 'd_step' '{' . Sequence '}'                 (rule 243)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)


	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 398
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 350

	Stmt -> 'atomic' '{' . Sequence '}'                 (rule 242)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)


	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 397
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 351

	Stmt -> 'assert' Expr .                             (rule 254)
	Expr -> Expr . AndOr Expr                           (rule 267)

	'!'            reduce using rule 254
	'&&'           shift, and enter state 270
	'('            reduce using rule 254
	')'            reduce using rule 254
	'-'            reduce using rule 254
	'->'           reduce using rule 254
	'::'           reduce using rule 254
	';'            reduce using rule 254
	'assert'       reduce using rule 254
	'atomic'       reduce using rule 254
	'bit'          reduce using rule 254
	'bool'         reduce using rule 254
	'break'        reduce using rule 254
	'byte'         reduce using rule 254
	'chan'         reduce using rule 254
	'd_step'       reduce using rule 254
	'do'           reduce using rule 254
	'else'         reduce using rule 254
	'empty'        reduce using rule 254
	'enabled'      reduce using rule 254
	'false'        reduce using rule 254
	'fi'           reduce using rule 254
	'for'          reduce using rule 254
	'full'         reduce using rule 254
	'get_priority' reduce using rule 254
	'goto'         reduce using rule 254
	'hidden'       reduce using rule 254
	'if'           reduce using rule 254
	'int'          reduce using rule 254
	'len'          reduce using rule 254
	'mtype'        reduce using rule 254
	'np_'          reduce using rule 254
	'od'           reduce using rule 254
	'pc_value'     reduce using rule 254
	'print'        reduce using rule 254
	'printf'       reduce using rule 254
	'printm'       reduce using rule 254
	'run'          reduce using rule 254
	'select'       reduce using rule 254
	'set_priority' reduce using rule 254
	'short'        reduce using rule 254
	'show'         reduce using rule 254
	'skip'         reduce using rule 254
	'timeout'      reduce using rule 254
	'true'         reduce using rule 254
	'unless'       reduce using rule 254
	'unsigned'     reduce using rule 254
	'xr'           reduce using rule 254
	'xs'           reduce using rule 254
	'{'            reduce using rule 254
	'||'           shift, and enter state 284
	'}'            reduce using rule 254
	'~'            reduce using rule 254
	L_integ        reduce using rule 254
	L_PIdent       reduce using rule 254
	%eof           reduce using rule 254

	AndOr          goto state 355

State 352

	Stmt -> Name '(' . ArgList ')'                      (rule 255)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	')'            reduce using rule 221
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 103
	VarRef         goto state 82
	Poll           goto state 83
	ArgList        goto state 396
	Name           goto state 85

State 353

	Stmt -> Name ':' . Stmt                             (rule 252)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'break'        shift, and enter state 124
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'if'           shift, and enter state 130
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 395
	Expr           goto state 120
	Name           goto state 121

State 354

	AnyExpr -> Name '[' . AnyExpr ']' '@' Name          (rule 191)
	VarRefAnyExpr -> '[' . AnyExpr ']'                  (rule 206)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 394
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 355

	Expr -> Expr AndOr . Expr                           (rule 267)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 81
	VarRef         goto state 82
	Poll           goto state 83
	Expr           goto state 393
	Name           goto state 85

State 356

	Receive -> VarRef '?' . RecvArgs                    (rule 211)
	Receive -> VarRef '?' . '?' RecvArgs                (rule 212)
	Receive -> VarRef '?' . '<' RecvArgs '>'            (rule 213)
	Receive -> VarRef '?' . '?' '<' RecvArgs '>'        (rule 214)
	Poll -> VarRef '?' . '[' RecvArgs ']'               (rule 215)
	Poll -> VarRef '?' . '?' '[' RecvArgs ']'           (rule 216)

	'-'            shift, and enter state 149
	'<'            shift, and enter state 390
	'?'            shift, and enter state 391
	'['            shift, and enter state 392
	'eval'         shift, and enter state 150
	'false'        reduce using rule 226
	'skip'         reduce using rule 226
	'true'         reduce using rule 226
	L_integ        reduce using rule 226
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 146
	RecvArgs       goto state 389
	RecvArgList    goto state 155
	UnaryMinus     goto state 147
	RecvArg        goto state 153
	Name           goto state 145

State 357

	Stmt -> PrintType '(' . Pargs ')'                   (rule 253)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	')'            reduce using rule 221
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_quoted       shift, and enter state 142
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	String         goto state 139
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 103
	VarRef         goto state 82
	Poll           goto state 83
	ArgList        goto state 140
	Pargs          goto state 388
	Name           goto state 85

State 358

	Range -> Name ':' . AnyExpr '..' AnyExpr            (rule 258)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 387
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 359

	Range -> Name 'in' . Name                           (rule 257)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Name           goto state 386

State 360

	Options -> '::' Sequence .                          (rule 259)
	Options -> '::' Sequence . Options                  (rule 260)

	'::'           shift, and enter state 111
	'fi'           reduce using rule 259
	'od'           reduce using rule 259
	%eof           reduce using rule 259

	Options        goto state 385

State 361

	Priority -> 'priority' Const .                      (rule 164)

	'!'            reduce using rule 164
	'!='           reduce using rule 164
	'%'            reduce using rule 164
	'&'            reduce using rule 164
	'&&'           reduce using rule 164
	'('            reduce using rule 164
	')'            reduce using rule 164
	'*'            reduce using rule 164
	'+'            reduce using rule 164
	','            reduce using rule 164
	'-'            reduce using rule 164
	'->'           reduce using rule 164
	'..'           reduce using rule 164
	'/'            reduce using rule 164
	':'            reduce using rule 164
	'::'           reduce using rule 164
	';'            reduce using rule 164
	'<'            reduce using rule 164
	'<<'           reduce using rule 164
	'<='           reduce using rule 164
	'=='           reduce using rule 164
	'>'            reduce using rule 164
	'>='           reduce using rule 164
	'>>'           reduce using rule 164
	']'            reduce using rule 164
	'^'            reduce using rule 164
	'active'       reduce using rule 164
	'assert'       reduce using rule 164
	'atomic'       reduce using rule 164
	'bit'          reduce using rule 164
	'bool'         reduce using rule 164
	'break'        reduce using rule 164
	'byte'         reduce using rule 164
	'chan'         reduce using rule 164
	'd_step'       reduce using rule 164
	'do'           reduce using rule 164
	'else'         reduce using rule 164
	'empty'        reduce using rule 164
	'enabled'      reduce using rule 164
	'false'        reduce using rule 164
	'fi'           reduce using rule 164
	'for'          reduce using rule 164
	'full'         reduce using rule 164
	'get_priority' reduce using rule 164
	'goto'         reduce using rule 164
	'hidden'       reduce using rule 164
	'if'           reduce using rule 164
	'init'         reduce using rule 164
	'inline'       reduce using rule 164
	'int'          reduce using rule 164
	'len'          reduce using rule 164
	'mtype'        reduce using rule 164
	'never'        reduce using rule 164
	'np_'          reduce using rule 164
	'od'           reduce using rule 164
	'pc_value'     reduce using rule 164
	'print'        reduce using rule 164
	'printf'       reduce using rule 164
	'printm'       reduce using rule 164
	'proctype'     reduce using rule 164
	'provided'     reduce using rule 164
	'run'          reduce using rule 164
	'select'       reduce using rule 164
	'set_priority' reduce using rule 164
	'short'        reduce using rule 164
	'show'         reduce using rule 164
	'skip'         reduce using rule 164
	'timeout'      reduce using rule 164
	'trace'        reduce using rule 164
	'true'         reduce using rule 164
	'typedef'      reduce using rule 164
	'unless'       reduce using rule 164
	'unsigned'     reduce using rule 164
	'xr'           reduce using rule 164
	'xs'           reduce using rule 164
	'{'            reduce using rule 164
	'|'            reduce using rule 164
	'||'           reduce using rule 164
	'}'            reduce using rule 164
	'~'            reduce using rule 164
	L_integ        reduce using rule 164
	L_PIdent       reduce using rule 164
	%eof           reduce using rule 164


State 362

	AnyExpr -> '(' AnyExpr . ')'                        (rule 179)
	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	AnyExpr -> '(' AnyExpr . '->' AnyExpr ':' AnyExpr ')'    (rule 182)

	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	')'            shift, and enter state 376
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
	'->'           shift, and enter state 377
	'/'            shift, and enter state 274
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284

	AndOr          goto state 265
	BinOp          goto state 319

State 363

	AnyExpr -> 'set_priority' '(' . Expr ',' Expr ')'    (rule 194)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 81
	VarRef         goto state 82
	Poll           goto state 83
	Expr           goto state 384
	Name           goto state 85

State 364

	AnyExpr -> 'run' Name . '(' RunArgs ')' RunPrio     (rule 192)

	'('            shift, and enter state 383


State 365

	AnyExpr -> 'pc_value' '(' . AnyExpr ')'             (rule 190)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 382
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 366

	AnyExpr -> 'len' '(' . VarRef ')'                   (rule 183)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 381
	Name           goto state 145

State 367

	AnyExpr -> 'get_priority' '(' . Expr ')'            (rule 193)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 81
	VarRef         goto state 82
	Poll           goto state 83
	Expr           goto state 380
	Name           goto state 85

State 368

	AnyExpr -> 'enabled' '(' . AnyExpr ')'              (rule 189)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 379
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 369

	ChanPoll -> 'empty' 'nfull' . 'nempty'              (rule 78)

	'nempty'       shift, and enter state 378


State 370

	AnyExpr -> '(' AnyExpr . ')'                        (rule 179)
	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	AnyExpr -> '(' AnyExpr . '->' AnyExpr ':' AnyExpr ')'    (rule 182)
	Expr -> AnyExpr .                                   (rule 265)

	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
			(reduce using rule 265)

	')'            shift, and enter state 376
			(reduce using rule 265)

	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
	'->'           shift, and enter state 377
	'/'            shift, and enter state 274
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284
			(reduce using rule 265)


	AndOr          goto state 265
	BinOp          goto state 319

State 371

	Expr -> '(' Expr . ')'                              (rule 266)
	Expr -> Expr . AndOr Expr                           (rule 267)

	'&&'           shift, and enter state 270
	')'            shift, and enter state 375
	'||'           shift, and enter state 284

	AndOr          goto state 355

State 372

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	AnyExpr -> UnrOp AnyExpr .                          (rule 181)

	'!'            reduce using rule 181
	'!='           shift, and enter state 267
			(reduce using rule 181)

	'%'            shift, and enter state 268
			(reduce using rule 181)

	'&'            shift, and enter state 269
			(reduce using rule 181)

	'&&'           shift, and enter state 270
			(reduce using rule 181)

	'('            reduce using rule 181
	')'            reduce using rule 181
	'*'            shift, and enter state 271
			(reduce using rule 181)

	'+'            shift, and enter state 272
			(reduce using rule 181)

	','            reduce using rule 181
	'-'            shift, and enter state 273
			(reduce using rule 181)

	'->'           reduce using rule 181
	'..'           reduce using rule 181
	'/'            shift, and enter state 274
			(reduce using rule 181)

	':'            reduce using rule 181
	'::'           reduce using rule 181
	';'            reduce using rule 181
	'<'            shift, and enter state 275
			(reduce using rule 181)

	'<<'           shift, and enter state 276
			(reduce using rule 181)

	'<='           shift, and enter state 277
			(reduce using rule 181)

	'=='           shift, and enter state 278
			(reduce using rule 181)

	'>'            shift, and enter state 279
			(reduce using rule 181)

	'>='           shift, and enter state 280
			(reduce using rule 181)

	'>>'           shift, and enter state 281
			(reduce using rule 181)

	']'            reduce using rule 181
	'^'            shift, and enter state 282
			(reduce using rule 181)

	'active'       reduce using rule 181
	'assert'       reduce using rule 181
	'atomic'       reduce using rule 181
	'bit'          reduce using rule 181
	'bool'         reduce using rule 181
	'break'        reduce using rule 181
	'byte'         reduce using rule 181
	'chan'         reduce using rule 181
	'd_step'       reduce using rule 181
	'do'           reduce using rule 181
	'else'         reduce using rule 181
	'empty'        reduce using rule 181
	'enabled'      reduce using rule 181
	'false'        reduce using rule 181
	'fi'           reduce using rule 181
	'for'          reduce using rule 181
	'full'         reduce using rule 181
	'get_priority' reduce using rule 181
	'goto'         reduce using rule 181
	'hidden'       reduce using rule 181
	'if'           reduce using rule 181
	'init'         reduce using rule 181
	'inline'       reduce using rule 181
	'int'          reduce using rule 181
	'len'          reduce using rule 181
	'mtype'        reduce using rule 181
	'never'        reduce using rule 181
	'np_'          reduce using rule 181
	'od'           reduce using rule 181
	'pc_value'     reduce using rule 181
	'print'        reduce using rule 181
	'printf'       reduce using rule 181
	'printm'       reduce using rule 181
	'proctype'     reduce using rule 181
	'run'          reduce using rule 181
	'select'       reduce using rule 181
	'set_priority' reduce using rule 181
	'short'        reduce using rule 181
	'show'         reduce using rule 181
	'skip'         reduce using rule 181
	'timeout'      reduce using rule 181
	'trace'        reduce using rule 181
	'true'         reduce using rule 181
	'typedef'      reduce using rule 181
	'unless'       reduce using rule 181
	'unsigned'     reduce using rule 181
	'xr'           reduce using rule 181
	'xs'           reduce using rule 181
	'{'            reduce using rule 181
	'|'            shift, and enter state 283
			(reduce using rule 181)

	'||'           shift, and enter state 284
			(reduce using rule 181)

	'}'            reduce using rule 181
	'~'            reduce using rule 181
	L_integ        reduce using rule 181
	L_PIdent       reduce using rule 181
	%eof           reduce using rule 181

	AndOr          goto state 265
	BinOp          goto state 319

State 373

	Expr -> ChanPoll '(' . VarRef ')'                   (rule 268)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 374
	Name           goto state 145

State 374

	Expr -> ChanPoll '(' VarRef . ')'                   (rule 268)

	')'            shift, and enter state 473


State 375

	Expr -> '(' Expr ')' .                              (rule 266)

	'!'            reduce using rule 266
	'&&'           reduce using rule 266
	'('            reduce using rule 266
	')'            reduce using rule 266
	','            reduce using rule 266
	'-'            reduce using rule 266
	'->'           reduce using rule 266
	'::'           reduce using rule 266
	';'            reduce using rule 266
	'assert'       reduce using rule 266
	'atomic'       reduce using rule 266
	'bit'          reduce using rule 266
	'bool'         reduce using rule 266
	'break'        reduce using rule 266
	'byte'         reduce using rule 266
	'chan'         reduce using rule 266
	'd_step'       reduce using rule 266
	'do'           reduce using rule 266
	'else'         reduce using rule 266
	'empty'        reduce using rule 266
	'enabled'      reduce using rule 266
	'false'        reduce using rule 266
	'fi'           reduce using rule 266
	'for'          reduce using rule 266
	'full'         reduce using rule 266
	'get_priority' reduce using rule 266
	'goto'         reduce using rule 266
	'hidden'       reduce using rule 266
	'if'           reduce using rule 266
	'int'          reduce using rule 266
	'len'          reduce using rule 266
	'mtype'        reduce using rule 266
	'np_'          reduce using rule 266
	'od'           reduce using rule 266
	'pc_value'     reduce using rule 266
	'print'        reduce using rule 266
	'printf'       reduce using rule 266
	'printm'       reduce using rule 266
	'run'          reduce using rule 266
	'select'       reduce using rule 266
	'set_priority' reduce using rule 266
	'short'        reduce using rule 266
	'show'         reduce using rule 266
	'skip'         reduce using rule 266
	'timeout'      reduce using rule 266
	'true'         reduce using rule 266
	'unless'       reduce using rule 266
	'unsigned'     reduce using rule 266
	'xr'           reduce using rule 266
	'xs'           reduce using rule 266
	'{'            reduce using rule 266
	'||'           reduce using rule 266
	'}'            reduce using rule 266
	'~'            reduce using rule 266
	L_integ        reduce using rule 266
	L_PIdent       reduce using rule 266
	%eof           reduce using rule 266


State 376

	AnyExpr -> '(' AnyExpr ')' .                        (rule 179)

	'!'            reduce using rule 179
	'!='           reduce using rule 179
	'%'            reduce using rule 179
	'&'            reduce using rule 179
	'&&'           reduce using rule 179
	'('            reduce using rule 179
	')'            reduce using rule 179
	'*'            reduce using rule 179
	'+'            reduce using rule 179
	','            reduce using rule 179
	'-'            reduce using rule 179
	'->'           reduce using rule 179
	'..'           reduce using rule 179
	'/'            reduce using rule 179
	':'            reduce using rule 179
	'::'           reduce using rule 179
	';'            reduce using rule 179
	'<'            reduce using rule 179
	'<<'           reduce using rule 179
	'<='           reduce using rule 179
	'=='           reduce using rule 179
	'>'            reduce using rule 179
	'>='           reduce using rule 179
	'>>'           reduce using rule 179
	']'            reduce using rule 179
	'^'            reduce using rule 179
	'active'       reduce using rule 179
	'assert'       reduce using rule 179
	'atomic'       reduce using rule 179
	'bit'          reduce using rule 179
	'bool'         reduce using rule 179
	'break'        reduce using rule 179
	'byte'         reduce using rule 179
	'chan'         reduce using rule 179
	'd_step'       reduce using rule 179
	'do'           reduce using rule 179
	'else'         reduce using rule 179
	'empty'        reduce using rule 179
	'enabled'      reduce using rule 179
	'false'        reduce using rule 179
	'fi'           reduce using rule 179
	'for'          reduce using rule 179
	'full'         reduce using rule 179
	'get_priority' reduce using rule 179
	'goto'         reduce using rule 179
	'hidden'       reduce using rule 179
	'if'           reduce using rule 179
	'init'         reduce using rule 179
	'inline'       reduce using rule 179
	'int'          reduce using rule 179
	'len'          reduce using rule 179
	'mtype'        reduce using rule 179
	'never'        reduce using rule 179
	'np_'          reduce using rule 179
	'od'           reduce using rule 179
	'pc_value'     reduce using rule 179
	'print'        reduce using rule 179
	'printf'       reduce using rule 179
	'printm'       reduce using rule 179
	'proctype'     reduce using rule 179
	'run'          reduce using rule 179
	'select'       reduce using rule 179
	'set_priority' reduce using rule 179
	'short'        reduce using rule 179
	'show'         reduce using rule 179
	'skip'         reduce using rule 179
	'timeout'      reduce using rule 179
	'trace'        reduce using rule 179
	'true'         reduce using rule 179
	'typedef'      reduce using rule 179
	'unless'       reduce using rule 179
	'unsigned'     reduce using rule 179
	'xr'           reduce using rule 179
	'xs'           reduce using rule 179
	'{'            reduce using rule 179
	'|'            reduce using rule 179
	'||'           reduce using rule 179
	'}'            reduce using rule 179
	'~'            reduce using rule 179
	L_integ        reduce using rule 179
	L_PIdent       reduce using rule 179
	%eof           reduce using rule 179


State 377

	AnyExpr -> '(' AnyExpr '->' . AnyExpr ':' AnyExpr ')'    (rule 182)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 472
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 378

	ChanPoll -> 'empty' 'nfull' 'nempty' .              (rule 78)

	'('            reduce using rule 78
	%eof           reduce using rule 78


State 379

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	AnyExpr -> 'enabled' '(' AnyExpr . ')'              (rule 189)

	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	')'            shift, and enter state 471
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
	'/'            shift, and enter state 274
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284

	AndOr          goto state 265
	BinOp          goto state 319

State 380

	AnyExpr -> 'get_priority' '(' Expr . ')'            (rule 193)
	Expr -> Expr . AndOr Expr                           (rule 267)

	'&&'           shift, and enter state 270
	')'            shift, and enter state 470
	'||'           shift, and enter state 284

	AndOr          goto state 355

State 381

	AnyExpr -> 'len' '(' VarRef . ')'                   (rule 183)

	')'            shift, and enter state 469


State 382

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	AnyExpr -> 'pc_value' '(' AnyExpr . ')'             (rule 190)

	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	')'            shift, and enter state 468
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
	'/'            shift, and enter state 274
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284

	AndOr          goto state 265
	BinOp          goto state 319

State 383

	AnyExpr -> 'run' Name '(' . RunArgs ')' RunPrio     (rule 192)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	')'            reduce using rule 263
			(reduce using rule 221)

	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 103
	VarRef         goto state 82
	Poll           goto state 83
	ArgList        goto state 104
	RunArgs        goto state 467
	Name           goto state 85

State 384

	AnyExpr -> 'set_priority' '(' Expr . ',' Expr ')'    (rule 194)
	Expr -> Expr . AndOr Expr                           (rule 267)

	'&&'           shift, and enter state 270
	','            shift, and enter state 466
	'||'           shift, and enter state 284

	AndOr          goto state 355

State 385

	Options -> '::' Sequence Options .                  (rule 260)

	'fi'           reduce using rule 260
	'od'           reduce using rule 260
	%eof           reduce using rule 260


State 386

	Range -> Name 'in' Name .                           (rule 257)

	')'            reduce using rule 257
	%eof           reduce using rule 257


State 387

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	Range -> Name ':' AnyExpr . '..' AnyExpr            (rule 258)

	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
	'..'           shift, and enter state 465
	'/'            shift, and enter state 274
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284

	AndOr          goto state 265
	BinOp          goto state 319

State 388

	Stmt -> PrintType '(' Pargs . ')'                   (rule 253)

	')'            shift, and enter state 464


State 389

	Receive -> VarRef '?' RecvArgs .                    (rule 211)

	'!'            reduce using rule 211
	'('            reduce using rule 211
	')'            reduce using rule 211
	'-'            reduce using rule 211
	'->'           reduce using rule 211
	'::'           reduce using rule 211
	';'            reduce using rule 211
	'assert'       reduce using rule 211
	'atomic'       reduce using rule 211
	'bit'          reduce using rule 211
	'bool'         reduce using rule 211
	'break'        reduce using rule 211
	'byte'         reduce using rule 211
	'chan'         reduce using rule 211
	'd_step'       reduce using rule 211
	'do'           reduce using rule 211
	'else'         reduce using rule 211
	'empty'        reduce using rule 211
	'enabled'      reduce using rule 211
	'false'        reduce using rule 211
	'fi'           reduce using rule 211
	'for'          reduce using rule 211
	'full'         reduce using rule 211
	'get_priority' reduce using rule 211
	'goto'         reduce using rule 211
	'hidden'       reduce using rule 211
	'if'           reduce using rule 211
	'int'          reduce using rule 211
	'len'          reduce using rule 211
	'mtype'        reduce using rule 211
	'np_'          reduce using rule 211
	'od'           reduce using rule 211
	'pc_value'     reduce using rule 211
	'print'        reduce using rule 211
	'printf'       reduce using rule 211
	'printm'       reduce using rule 211
	'run'          reduce using rule 211
	'select'       reduce using rule 211
	'set_priority' reduce using rule 211
	'short'        reduce using rule 211
	'show'         reduce using rule 211
	'skip'         reduce using rule 211
	'timeout'      reduce using rule 211
	'true'         reduce using rule 211
	'unless'       reduce using rule 211
	'unsigned'     reduce using rule 211
	'xr'           reduce using rule 211
	'xs'           reduce using rule 211
	'{'            reduce using rule 211
	'}'            reduce using rule 211
	'~'            reduce using rule 211
	L_integ        reduce using rule 211
	L_PIdent       reduce using rule 211
	%eof           reduce using rule 211


State 390

	Receive -> VarRef '?' '<' . RecvArgs '>'            (rule 213)

	'-'            shift, and enter state 149
	'eval'         shift, and enter state 150
	'false'        reduce using rule 226
	'skip'         reduce using rule 226
	'true'         reduce using rule 226
	L_integ        reduce using rule 226
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 146
	RecvArgs       goto state 463
	RecvArgList    goto state 155
	UnaryMinus     goto state 147
	RecvArg        goto state 153
	Name           goto state 145

State 391

	Receive -> VarRef '?' '?' . RecvArgs                (rule 212)
	Receive -> VarRef '?' '?' . '<' RecvArgs '>'        (rule 214)
	Poll -> VarRef '?' '?' . '[' RecvArgs ']'           (rule 216)

	'-'            shift, and enter state 149
	'<'            shift, and enter state 451
	'['            shift, and enter state 452
	'eval'         shift, and enter state 150
	'false'        reduce using rule 226
	'skip'         reduce using rule 226
	'true'         reduce using rule 226
	L_integ        reduce using rule 226
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 146
	RecvArgs       goto state 450
	RecvArgList    goto state 155
	UnaryMinus     goto state 147
	RecvArg        goto state 153
	Name           goto state 145

State 392

	Poll -> VarRef '?' '[' . RecvArgs ']'               (rule 215)

	'-'            shift, and enter state 149
	'eval'         shift, and enter state 150
	'false'        reduce using rule 226
	'skip'         reduce using rule 226
	'true'         reduce using rule 226
	L_integ        reduce using rule 226
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 146
	RecvArgs       goto state 462
	RecvArgList    goto state 155
	UnaryMinus     goto state 147
	RecvArg        goto state 153
	Name           goto state 145

State 393

	Expr -> Expr . AndOr Expr                           (rule 267)
	Expr -> Expr AndOr Expr .                           (rule 267)

	'!'            reduce using rule 267
	'&&'           shift, and enter state 270
			(reduce using rule 267)

	'('            reduce using rule 267
	')'            reduce using rule 267
	','            reduce using rule 267
	'-'            reduce using rule 267
	'->'           reduce using rule 267
	'::'           reduce using rule 267
	';'            reduce using rule 267
	'assert'       reduce using rule 267
	'atomic'       reduce using rule 267
	'bit'          reduce using rule 267
	'bool'         reduce using rule 267
	'break'        reduce using rule 267
	'byte'         reduce using rule 267
	'chan'         reduce using rule 267
	'd_step'       reduce using rule 267
	'do'           reduce using rule 267
	'else'         reduce using rule 267
	'empty'        reduce using rule 267
	'enabled'      reduce using rule 267
	'false'        reduce using rule 267
	'fi'           reduce using rule 267
	'for'          reduce using rule 267
	'full'         reduce using rule 267
	'get_priority' reduce using rule 267
	'goto'         reduce using rule 267
	'hidden'       reduce using rule 267
	'if'           reduce using rule 267
	'int'          reduce using rule 267
	'len'          reduce using rule 267
	'mtype'        reduce using rule 267
	'np_'          reduce using rule 267
	'od'           reduce using rule 267
	'pc_value'     reduce using rule 267
	'print'        reduce using rule 267
	'printf'       reduce using rule 267
	'printm'       reduce using rule 267
	'run'          reduce using rule 267
	'select'       reduce using rule 267
	'set_priority' reduce using rule 267
	'short'        reduce using rule 267
	'show'         reduce using rule 267
	'skip'         reduce using rule 267
	'timeout'      reduce using rule 267
	'true'         reduce using rule 267
	'unless'       reduce using rule 267
	'unsigned'     reduce using rule 267
	'xr'           reduce using rule 267
	'xs'           reduce using rule 267
	'{'            reduce using rule 267
	'||'           shift, and enter state 284
			(reduce using rule 267)

	'}'            reduce using rule 267
	'~'            reduce using rule 267
	L_integ        reduce using rule 267
	L_PIdent       reduce using rule 267
	%eof           reduce using rule 267

	AndOr          goto state 355

State 394

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	AnyExpr -> Name '[' AnyExpr . ']' '@' Name          (rule 191)
	VarRefAnyExpr -> '[' AnyExpr . ']'                  (rule 206)

	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
	'/'            shift, and enter state 274
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	']'            shift, and enter state 461
	'^'            shift, and enter state 282
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284

	AndOr          goto state 265
	BinOp          goto state 319

State 395

	Stmt -> Name ':' Stmt .                             (rule 252)

	'!'            reduce using rule 252
	'('            reduce using rule 252
	')'            reduce using rule 252
	'-'            reduce using rule 252
	'->'           reduce using rule 252
	'::'           reduce using rule 252
	';'            reduce using rule 252
	'assert'       reduce using rule 252
	'atomic'       reduce using rule 252
	'bit'          reduce using rule 252
	'bool'         reduce using rule 252
	'break'        reduce using rule 252
	'byte'         reduce using rule 252
	'chan'         reduce using rule 252
	'd_step'       reduce using rule 252
	'do'           reduce using rule 252
	'else'         reduce using rule 252
	'empty'        reduce using rule 252
	'enabled'      reduce using rule 252
	'false'        reduce using rule 252
	'fi'           reduce using rule 252
	'for'          reduce using rule 252
	'full'         reduce using rule 252
	'get_priority' reduce using rule 252
	'goto'         reduce using rule 252
	'hidden'       reduce using rule 252
	'if'           reduce using rule 252
	'int'          reduce using rule 252
	'len'          reduce using rule 252
	'mtype'        reduce using rule 252
	'np_'          reduce using rule 252
	'od'           reduce using rule 252
	'pc_value'     reduce using rule 252
	'print'        reduce using rule 252
	'printf'       reduce using rule 252
	'printm'       reduce using rule 252
	'run'          reduce using rule 252
	'select'       reduce using rule 252
	'set_priority' reduce using rule 252
	'short'        reduce using rule 252
	'show'         reduce using rule 252
	'skip'         reduce using rule 252
	'timeout'      reduce using rule 252
	'true'         reduce using rule 252
	'unless'       reduce using rule 252
	'unsigned'     reduce using rule 252
	'xr'           reduce using rule 252
	'xs'           reduce using rule 252
	'{'            reduce using rule 252
	'}'            reduce using rule 252
	'~'            reduce using rule 252
	L_integ        reduce using rule 252
	L_PIdent       reduce using rule 252
	%eof           reduce using rule 252


State 396

	Stmt -> Name '(' ArgList . ')'                      (rule 255)

	')'            shift, and enter state 460


State 397

	Stmt -> 'atomic' '{' Sequence . '}'                 (rule 242)

	'}'            shift, and enter state 459


State 398

	Stmt -> 'd_step' '{' Sequence . '}'                 (rule 243)

	'}'            shift, and enter state 458


State 399

	Stmt -> 'do' Options 'od' .                         (rule 240)

	'!'            reduce using rule 240
	'('            reduce using rule 240
	')'            reduce using rule 240
	'-'            reduce using rule 240
	'->'           reduce using rule 240
	'::'           reduce using rule 240
	';'            reduce using rule 240
	'assert'       reduce using rule 240
	'atomic'       reduce using rule 240
	'bit'          reduce using rule 240
	'bool'         reduce using rule 240
	'break'        reduce using rule 240
	'byte'         reduce using rule 240
	'chan'         reduce using rule 240
	'd_step'       reduce using rule 240
	'do'           reduce using rule 240
	'else'         reduce using rule 240
	'empty'        reduce using rule 240
	'enabled'      reduce using rule 240
	'false'        reduce using rule 240
	'fi'           reduce using rule 240
	'for'          reduce using rule 240
	'full'         reduce using rule 240
	'get_priority' reduce using rule 240
	'goto'         reduce using rule 240
	'hidden'       reduce using rule 240
	'if'           reduce using rule 240
	'int'          reduce using rule 240
	'len'          reduce using rule 240
	'mtype'        reduce using rule 240
	'np_'          reduce using rule 240
	'od'           reduce using rule 240
	'pc_value'     reduce using rule 240
	'print'        reduce using rule 240
	'printf'       reduce using rule 240
	'printm'       reduce using rule 240
	'run'          reduce using rule 240
	'select'       reduce using rule 240
	'set_priority' reduce using rule 240
	'short'        reduce using rule 240
	'show'         reduce using rule 240
	'skip'         reduce using rule 240
	'timeout'      reduce using rule 240
	'true'         reduce using rule 240
	'unless'       reduce using rule 240
	'unsigned'     reduce using rule 240
	'xr'           reduce using rule 240
	'xs'           reduce using rule 240
	'{'            reduce using rule 240
	'}'            reduce using rule 240
	'~'            reduce using rule 240
	L_integ        reduce using rule 240
	L_PIdent       reduce using rule 240
	%eof           reduce using rule 240


State 400

	Stmt -> 'for' '(' Range . ')' '{' Sequence '}'      (rule 241)

	')'            shift, and enter state 457


State 401

	Stmt -> 'if' Options 'fi' .                         (rule 239)

	'!'            reduce using rule 239
	'('            reduce using rule 239
	')'            reduce using rule 239
	'-'            reduce using rule 239
	'->'           reduce using rule 239
	'::'           reduce using rule 239
	';'            reduce using rule 239
	'assert'       reduce using rule 239
	'atomic'       reduce using rule 239
	'bit'          reduce using rule 239
	'bool'         reduce using rule 239
	'break'        reduce using rule 239
	'byte'         reduce using rule 239
	'chan'         reduce using rule 239
	'd_step'       reduce using rule 239
	'do'           reduce using rule 239
	'else'         reduce using rule 239
	'empty'        reduce using rule 239
	'enabled'      reduce using rule 239
	'false'        reduce using rule 239
	'fi'           reduce using rule 239
	'for'          reduce using rule 239
	'full'         reduce using rule 239
	'get_priority' reduce using rule 239
	'goto'         reduce using rule 239
	'hidden'       reduce using rule 239
	'if'           reduce using rule 239
	'int'          reduce using rule 239
	'len'          reduce using rule 239
	'mtype'        reduce using rule 239
	'np_'          reduce using rule 239
	'od'           reduce using rule 239
	'pc_value'     reduce using rule 239
	'print'        reduce using rule 239
	'printf'       reduce using rule 239
	'printm'       reduce using rule 239
	'run'          reduce using rule 239
	'select'       reduce using rule 239
	'set_priority' reduce using rule 239
	'short'        reduce using rule 239
	'show'         reduce using rule 239
	'skip'         reduce using rule 239
	'timeout'      reduce using rule 239
	'true'         reduce using rule 239
	'unless'       reduce using rule 239
	'unsigned'     reduce using rule 239
	'xr'           reduce using rule 239
	'xs'           reduce using rule 239
	'{'            reduce using rule 239
	'}'            reduce using rule 239
	'~'            reduce using rule 239
	L_integ        reduce using rule 239
	L_PIdent       reduce using rule 239
	%eof           reduce using rule 239


State 402

	Stmt -> 'select' '(' Sequence . ')'                 (rule 244)

	')'            shift, and enter state 456


State 403

	Stmt -> '{' Sequence '}' .                          (rule 245)

	'!'            reduce using rule 245
	'('            reduce using rule 245
	')'            reduce using rule 245
	'-'            reduce using rule 245
	'->'           reduce using rule 245
	'::'           reduce using rule 245
	';'            reduce using rule 245
	'assert'       reduce using rule 245
	'atomic'       reduce using rule 245
	'bit'          reduce using rule 245
	'bool'         reduce using rule 245
	'break'        reduce using rule 245
	'byte'         reduce using rule 245
	'chan'         reduce using rule 245
	'd_step'       reduce using rule 245
	'do'           reduce using rule 245
	'else'         reduce using rule 245
	'empty'        reduce using rule 245
	'enabled'      reduce using rule 245
	'false'        reduce using rule 245
	'fi'           reduce using rule 245
	'for'          reduce using rule 245
	'full'         reduce using rule 245
	'get_priority' reduce using rule 245
	'goto'         reduce using rule 245
	'hidden'       reduce using rule 245
	'if'           reduce using rule 245
	'int'          reduce using rule 245
	'len'          reduce using rule 245
	'mtype'        reduce using rule 245
	'np_'          reduce using rule 245
	'od'           reduce using rule 245
	'pc_value'     reduce using rule 245
	'print'        reduce using rule 245
	'printf'       reduce using rule 245
	'printm'       reduce using rule 245
	'run'          reduce using rule 245
	'select'       reduce using rule 245
	'set_priority' reduce using rule 245
	'short'        reduce using rule 245
	'show'         reduce using rule 245
	'skip'         reduce using rule 245
	'timeout'      reduce using rule 245
	'true'         reduce using rule 245
	'unless'       reduce using rule 245
	'unsigned'     reduce using rule 245
	'xr'           reduce using rule 245
	'xs'           reduce using rule 245
	'{'            reduce using rule 245
	'}'            reduce using rule 245
	'~'            reduce using rule 245
	L_integ        reduce using rule 245
	L_PIdent       reduce using rule 245
	%eof           reduce using rule 245


State 404

	Pargs -> String ',' ArgList .                       (rule 236)

	')'            reduce using rule 236
	%eof           reduce using rule 236


State 405

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	Assign -> VarRef '=' AnyExpr .                      (rule 231)

	'!'            reduce using rule 231
	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	'('            reduce using rule 231
	')'            reduce using rule 231
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
			(reduce using rule 231)

	'->'           reduce using rule 231
	'/'            shift, and enter state 274
	'::'           reduce using rule 231
	';'            reduce using rule 231
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'assert'       reduce using rule 231
	'atomic'       reduce using rule 231
	'bit'          reduce using rule 231
	'bool'         reduce using rule 231
	'break'        reduce using rule 231
	'byte'         reduce using rule 231
	'chan'         reduce using rule 231
	'd_step'       reduce using rule 231
	'do'           reduce using rule 231
	'else'         reduce using rule 231
	'empty'        reduce using rule 231
	'enabled'      reduce using rule 231
	'false'        reduce using rule 231
	'fi'           reduce using rule 231
	'for'          reduce using rule 231
	'full'         reduce using rule 231
	'get_priority' reduce using rule 231
	'goto'         reduce using rule 231
	'hidden'       reduce using rule 231
	'if'           reduce using rule 231
	'int'          reduce using rule 231
	'len'          reduce using rule 231
	'mtype'        reduce using rule 231
	'np_'          reduce using rule 231
	'od'           reduce using rule 231
	'pc_value'     reduce using rule 231
	'print'        reduce using rule 231
	'printf'       reduce using rule 231
	'printm'       reduce using rule 231
	'run'          reduce using rule 231
	'select'       reduce using rule 231
	'set_priority' reduce using rule 231
	'short'        reduce using rule 231
	'show'         reduce using rule 231
	'skip'         reduce using rule 231
	'timeout'      reduce using rule 231
	'true'         reduce using rule 231
	'unless'       reduce using rule 231
	'unsigned'     reduce using rule 231
	'xr'           reduce using rule 231
	'xs'           reduce using rule 231
	'{'            reduce using rule 231
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284
	'}'            reduce using rule 231
	'~'            reduce using rule 231
	L_integ        reduce using rule 231
	L_PIdent       reduce using rule 231
	%eof           reduce using rule 231

	AndOr          goto state 265
	BinOp          goto state 319

State 406

	Assign -> VarRef '-' '-' .                          (rule 233)

	'!'            reduce using rule 233
	'('            reduce using rule 233
	')'            reduce using rule 233
	'-'            reduce using rule 233
	'->'           reduce using rule 233
	'::'           reduce using rule 233
	';'            reduce using rule 233
	'assert'       reduce using rule 233
	'atomic'       reduce using rule 233
	'bit'          reduce using rule 233
	'bool'         reduce using rule 233
	'break'        reduce using rule 233
	'byte'         reduce using rule 233
	'chan'         reduce using rule 233
	'd_step'       reduce using rule 233
	'do'           reduce using rule 233
	'else'         reduce using rule 233
	'empty'        reduce using rule 233
	'enabled'      reduce using rule 233
	'false'        reduce using rule 233
	'fi'           reduce using rule 233
	'for'          reduce using rule 233
	'full'         reduce using rule 233
	'get_priority' reduce using rule 233
	'goto'         reduce using rule 233
	'hidden'       reduce using rule 233
	'if'           reduce using rule 233
	'int'          reduce using rule 233
	'len'          reduce using rule 233
	'mtype'        reduce using rule 233
	'np_'          reduce using rule 233
	'od'           reduce using rule 233
	'pc_value'     reduce using rule 233
	'print'        reduce using rule 233
	'printf'       reduce using rule 233
	'printm'       reduce using rule 233
	'run'          reduce using rule 233
	'select'       reduce using rule 233
	'set_priority' reduce using rule 233
	'short'        reduce using rule 233
	'show'         reduce using rule 233
	'skip'         reduce using rule 233
	'timeout'      reduce using rule 233
	'true'         reduce using rule 233
	'unless'       reduce using rule 233
	'unsigned'     reduce using rule 233
	'xr'           reduce using rule 233
	'xs'           reduce using rule 233
	'{'            reduce using rule 233
	'}'            reduce using rule 233
	'~'            reduce using rule 233
	L_integ        reduce using rule 233
	L_PIdent       reduce using rule 233
	%eof           reduce using rule 233


State 407

	Assign -> VarRef '+' '+' .                          (rule 232)

	'!'            reduce using rule 232
	'('            reduce using rule 232
	')'            reduce using rule 232
	'-'            reduce using rule 232
	'->'           reduce using rule 232
	'::'           reduce using rule 232
	';'            reduce using rule 232
	'assert'       reduce using rule 232
	'atomic'       reduce using rule 232
	'bit'          reduce using rule 232
	'bool'         reduce using rule 232
	'break'        reduce using rule 232
	'byte'         reduce using rule 232
	'chan'         reduce using rule 232
	'd_step'       reduce using rule 232
	'do'           reduce using rule 232
	'else'         reduce using rule 232
	'empty'        reduce using rule 232
	'enabled'      reduce using rule 232
	'false'        reduce using rule 232
	'fi'           reduce using rule 232
	'for'          reduce using rule 232
	'full'         reduce using rule 232
	'get_priority' reduce using rule 232
	'goto'         reduce using rule 232
	'hidden'       reduce using rule 232
	'if'           reduce using rule 232
	'int'          reduce using rule 232
	'len'          reduce using rule 232
	'mtype'        reduce using rule 232
	'np_'          reduce using rule 232
	'od'           reduce using rule 232
	'pc_value'     reduce using rule 232
	'print'        reduce using rule 232
	'printf'       reduce using rule 232
	'printm'       reduce using rule 232
	'run'          reduce using rule 232
	'select'       reduce using rule 232
	'set_priority' reduce using rule 232
	'short'        reduce using rule 232
	'show'         reduce using rule 232
	'skip'         reduce using rule 232
	'timeout'      reduce using rule 232
	'true'         reduce using rule 232
	'unless'       reduce using rule 232
	'unsigned'     reduce using rule 232
	'xr'           reduce using rule 232
	'xs'           reduce using rule 232
	'{'            reduce using rule 232
	'}'            reduce using rule 232
	'~'            reduce using rule 232
	L_integ        reduce using rule 232
	L_PIdent       reduce using rule 232
	%eof           reduce using rule 232


State 408

	VarRef -> Name VarRefAnyExpr VarRefTypedef .        (rule 204)

	'!'            reduce using rule 204
	'!='           reduce using rule 204
	'%'            reduce using rule 204
	'&'            reduce using rule 204
	'&&'           reduce using rule 204
	'('            reduce using rule 204
	')'            reduce using rule 204
	'*'            reduce using rule 204
	'+'            reduce using rule 204
	','            reduce using rule 204
	'-'            reduce using rule 204
	'->'           reduce using rule 204
	'..'           reduce using rule 204
	'/'            reduce using rule 204
	':'            reduce using rule 204
	'::'           reduce using rule 204
	';'            reduce using rule 204
	'<'            reduce using rule 204
	'<<'           reduce using rule 204
	'<='           reduce using rule 204
	'='            reduce using rule 204
	'=='           reduce using rule 204
	'>'            reduce using rule 204
	'>='           reduce using rule 204
	'>>'           reduce using rule 204
	'?'            reduce using rule 204
	']'            reduce using rule 204
	'^'            reduce using rule 204
	'active'       reduce using rule 204
	'assert'       reduce using rule 204
	'atomic'       reduce using rule 204
	'bit'          reduce using rule 204
	'bool'         reduce using rule 204
	'break'        reduce using rule 204
	'byte'         reduce using rule 204
	'chan'         reduce using rule 204
	'd_step'       reduce using rule 204
	'do'           reduce using rule 204
	'else'         reduce using rule 204
	'empty'        reduce using rule 204
	'enabled'      reduce using rule 204
	'eval'         reduce using rule 204
	'false'        reduce using rule 204
	'fi'           reduce using rule 204
	'for'          reduce using rule 204
	'full'         reduce using rule 204
	'get_priority' reduce using rule 204
	'goto'         reduce using rule 204
	'hidden'       reduce using rule 204
	'if'           reduce using rule 204
	'init'         reduce using rule 204
	'inline'       reduce using rule 204
	'int'          reduce using rule 204
	'len'          reduce using rule 204
	'mtype'        reduce using rule 204
	'never'        reduce using rule 204
	'np_'          reduce using rule 204
	'od'           reduce using rule 204
	'pc_value'     reduce using rule 204
	'print'        reduce using rule 204
	'printf'       reduce using rule 204
	'printm'       reduce using rule 204
	'proctype'     reduce using rule 204
	'run'          reduce using rule 204
	'select'       reduce using rule 204
	'set_priority' reduce using rule 204
	'short'        reduce using rule 204
	'show'         reduce using rule 204
	'skip'         reduce using rule 204
	'timeout'      reduce using rule 204
	'trace'        reduce using rule 204
	'true'         reduce using rule 204
	'typedef'      reduce using rule 204
	'unless'       reduce using rule 204
	'unsigned'     reduce using rule 204
	'xr'           reduce using rule 204
	'xs'           reduce using rule 204
	'{'            reduce using rule 204
	'|'            reduce using rule 204
	'||'           reduce using rule 204
	'}'            reduce using rule 204
	'~'            reduce using rule 204
	L_integ        reduce using rule 204
	L_PIdent       reduce using rule 204
	%eof           reduce using rule 204


State 409

	RecvArg -> 'eval' '(' VarRef . ')'                  (rule 229)

	')'            shift, and enter state 455


State 410

	RecvArgs -> RecvArgList '(' RecvArgs . ')'          (rule 223)

	')'            shift, and enter state 454


State 411

	ArgList -> AnyExpr ',' ArgList .                    (rule 219)

	'!'            reduce using rule 219
	'('            reduce using rule 219
	')'            reduce using rule 219
	'-'            reduce using rule 219
	'->'           reduce using rule 219
	'::'           reduce using rule 219
	';'            reduce using rule 219
	'assert'       reduce using rule 219
	'atomic'       reduce using rule 219
	'bit'          reduce using rule 219
	'bool'         reduce using rule 219
	'break'        reduce using rule 219
	'byte'         reduce using rule 219
	'chan'         reduce using rule 219
	'd_step'       reduce using rule 219
	'do'           reduce using rule 219
	'else'         reduce using rule 219
	'empty'        reduce using rule 219
	'enabled'      reduce using rule 219
	'false'        reduce using rule 219
	'fi'           reduce using rule 219
	'for'          reduce using rule 219
	'full'         reduce using rule 219
	'get_priority' reduce using rule 219
	'goto'         reduce using rule 219
	'hidden'       reduce using rule 219
	'if'           reduce using rule 219
	'int'          reduce using rule 219
	'len'          reduce using rule 219
	'mtype'        reduce using rule 219
	'np_'          reduce using rule 219
	'od'           reduce using rule 219
	'pc_value'     reduce using rule 219
	'print'        reduce using rule 219
	'printf'       reduce using rule 219
	'printm'       reduce using rule 219
	'run'          reduce using rule 219
	'select'       reduce using rule 219
	'set_priority' reduce using rule 219
	'short'        reduce using rule 219
	'show'         reduce using rule 219
	'skip'         reduce using rule 219
	'timeout'      reduce using rule 219
	'true'         reduce using rule 219
	'unless'       reduce using rule 219
	'unsigned'     reduce using rule 219
	'xr'           reduce using rule 219
	'xs'           reduce using rule 219
	'{'            reduce using rule 219
	'}'            reduce using rule 219
	'~'            reduce using rule 219
	L_integ        reduce using rule 219
	L_PIdent       reduce using rule 219
	%eof           reduce using rule 219


State 412

	SendArgs -> AnyExpr '(' ArgList . ')'               (rule 218)

	')'            shift, and enter state 453


State 413

	Poll -> VarRef '?' '?' . '[' RecvArgs ']'           (rule 216)

	'['            shift, and enter state 452


State 414

	Receive -> VarRef '?' '?' . RecvArgs                (rule 212)
	Receive -> VarRef '?' '?' . '<' RecvArgs '>'        (rule 214)

	'-'            shift, and enter state 149
	'<'            shift, and enter state 451
	'eval'         shift, and enter state 150
	'false'        reduce using rule 226
	'skip'         reduce using rule 226
	'true'         reduce using rule 226
	L_integ        reduce using rule 226
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 146
	RecvArgs       goto state 450
	RecvArgList    goto state 155
	UnaryMinus     goto state 147
	RecvArg        goto state 153
	Name           goto state 145

State 415

	Send -> VarRef '!' SendArgs .                       (rule 209)

	'!'            reduce using rule 209
	'('            reduce using rule 209
	')'            reduce using rule 209
	'-'            reduce using rule 209
	'->'           reduce using rule 209
	'::'           reduce using rule 209
	';'            reduce using rule 209
	'assert'       reduce using rule 209
	'atomic'       reduce using rule 209
	'bit'          reduce using rule 209
	'bool'         reduce using rule 209
	'break'        reduce using rule 209
	'byte'         reduce using rule 209
	'chan'         reduce using rule 209
	'd_step'       reduce using rule 209
	'do'           reduce using rule 209
	'else'         reduce using rule 209
	'empty'        reduce using rule 209
	'enabled'      reduce using rule 209
	'false'        reduce using rule 209
	'fi'           reduce using rule 209
	'for'          reduce using rule 209
	'full'         reduce using rule 209
	'get_priority' reduce using rule 209
	'goto'         reduce using rule 209
	'hidden'       reduce using rule 209
	'if'           reduce using rule 209
	'int'          reduce using rule 209
	'len'          reduce using rule 209
	'mtype'        reduce using rule 209
	'np_'          reduce using rule 209
	'od'           reduce using rule 209
	'pc_value'     reduce using rule 209
	'print'        reduce using rule 209
	'printf'       reduce using rule 209
	'printm'       reduce using rule 209
	'run'          reduce using rule 209
	'select'       reduce using rule 209
	'set_priority' reduce using rule 209
	'short'        reduce using rule 209
	'show'         reduce using rule 209
	'skip'         reduce using rule 209
	'timeout'      reduce using rule 209
	'true'         reduce using rule 209
	'unless'       reduce using rule 209
	'unsigned'     reduce using rule 209
	'xr'           reduce using rule 209
	'xs'           reduce using rule 209
	'{'            reduce using rule 209
	'}'            reduce using rule 209
	'~'            reduce using rule 209
	L_integ        reduce using rule 209
	L_PIdent       reduce using rule 209
	%eof           reduce using rule 209


State 416

	UnrOp -> '!' .                                      (rule 110)
	Send -> VarRef '!' '!' . SendArgs                   (rule 210)

	'!'            shift, and enter state 86
			(reduce using rule 221)
			(reduce using rule 110)

	'('            shift, and enter state 106
			(reduce using rule 221)
			(reduce using rule 110)

	')'            reduce using rule 221
	'-'            shift, and enter state 88
			(reduce using rule 221)
			(reduce using rule 110)

	'->'           reduce using rule 221
	'::'           reduce using rule 221
	';'            reduce using rule 221
	'assert'       reduce using rule 221
	'atomic'       reduce using rule 221
	'bit'          reduce using rule 221
	'bool'         reduce using rule 221
	'break'        reduce using rule 221
	'byte'         reduce using rule 221
	'chan'         reduce using rule 221
	'd_step'       reduce using rule 221
	'do'           reduce using rule 221
	'else'         reduce using rule 221
	'empty'        reduce using rule 221
	'enabled'      shift, and enter state 90
			(reduce using rule 221)
			(reduce using rule 110)

	'false'        shift, and enter state 91
			(reduce using rule 221)
			(reduce using rule 110)

	'fi'           reduce using rule 221
	'for'          reduce using rule 221
	'full'         reduce using rule 221
	'get_priority' shift, and enter state 93
			(reduce using rule 221)
			(reduce using rule 110)

	'goto'         reduce using rule 221
	'hidden'       reduce using rule 221
	'if'           reduce using rule 221
	'int'          reduce using rule 221
	'len'          shift, and enter state 94
			(reduce using rule 221)
			(reduce using rule 110)

	'mtype'        reduce using rule 221
	'np_'          shift, and enter state 95
			(reduce using rule 221)
			(reduce using rule 110)

	'od'           reduce using rule 221
	'pc_value'     shift, and enter state 96
			(reduce using rule 221)
			(reduce using rule 110)

	'print'        reduce using rule 221
	'printf'       reduce using rule 221
	'printm'       reduce using rule 221
	'run'          shift, and enter state 97
			(reduce using rule 221)
			(reduce using rule 110)

	'select'       reduce using rule 221
	'set_priority' shift, and enter state 98
			(reduce using rule 221)
			(reduce using rule 110)

	'short'        reduce using rule 221
	'show'         reduce using rule 221
	'skip'         shift, and enter state 99
			(reduce using rule 221)
			(reduce using rule 110)

	'timeout'      shift, and enter state 100
			(reduce using rule 221)
			(reduce using rule 110)

	'true'         shift, and enter state 101
			(reduce using rule 221)
			(reduce using rule 110)

	'unless'       reduce using rule 221
	'unsigned'     reduce using rule 221
	'xr'           reduce using rule 221
	'xs'           reduce using rule 221
	'{'            reduce using rule 221
	'}'            reduce using rule 221
	'~'            shift, and enter state 102
			(reduce using rule 221)
			(reduce using rule 110)

	L_integ        shift, and enter state 71
			(reduce using rule 221)
			(reduce using rule 110)

	L_PIdent       shift, and enter state 74
			(reduce using rule 221)
			(reduce using rule 110)

	%eof           reduce using rule 221

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 157
	VarRef         goto state 82
	Poll           goto state 83
	SendArgs       goto state 449
	ArgList        goto state 159
	Name           goto state 85

State 417

	VarRefAnyExpr -> '[' AnyExpr ']' .                  (rule 206)

	'!'            reduce using rule 206
	'!='           reduce using rule 206
	'%'            reduce using rule 206
	'&'            reduce using rule 206
	'&&'           reduce using rule 206
	'('            reduce using rule 206
	')'            reduce using rule 206
	'*'            reduce using rule 206
	'+'            reduce using rule 206
	','            reduce using rule 206
	'-'            reduce using rule 206
	'->'           reduce using rule 206
	'.'            reduce using rule 206
	'..'           reduce using rule 206
	'/'            reduce using rule 206
	':'            reduce using rule 206
	'::'           reduce using rule 206
	';'            reduce using rule 206
	'<'            reduce using rule 206
	'<<'           reduce using rule 206
	'<='           reduce using rule 206
	'='            reduce using rule 206
	'=='           reduce using rule 206
	'>'            reduce using rule 206
	'>='           reduce using rule 206
	'>>'           reduce using rule 206
	'?'            reduce using rule 206
	']'            reduce using rule 206
	'^'            reduce using rule 206
	'active'       reduce using rule 206
	'assert'       reduce using rule 206
	'atomic'       reduce using rule 206
	'bit'          reduce using rule 206
	'bool'         reduce using rule 206
	'break'        reduce using rule 206
	'byte'         reduce using rule 206
	'chan'         reduce using rule 206
	'd_step'       reduce using rule 206
	'do'           reduce using rule 206
	'else'         reduce using rule 206
	'empty'        reduce using rule 206
	'enabled'      reduce using rule 206
	'eval'         reduce using rule 206
	'false'        reduce using rule 206
	'fi'           reduce using rule 206
	'for'          reduce using rule 206
	'full'         reduce using rule 206
	'get_priority' reduce using rule 206
	'goto'         reduce using rule 206
	'hidden'       reduce using rule 206
	'if'           reduce using rule 206
	'init'         reduce using rule 206
	'inline'       reduce using rule 206
	'int'          reduce using rule 206
	'len'          reduce using rule 206
	'mtype'        reduce using rule 206
	'never'        reduce using rule 206
	'np_'          reduce using rule 206
	'od'           reduce using rule 206
	'pc_value'     reduce using rule 206
	'print'        reduce using rule 206
	'printf'       reduce using rule 206
	'printm'       reduce using rule 206
	'proctype'     reduce using rule 206
	'run'          reduce using rule 206
	'select'       reduce using rule 206
	'set_priority' reduce using rule 206
	'short'        reduce using rule 206
	'show'         reduce using rule 206
	'skip'         reduce using rule 206
	'timeout'      reduce using rule 206
	'trace'        reduce using rule 206
	'true'         reduce using rule 206
	'typedef'      reduce using rule 206
	'unless'       reduce using rule 206
	'unsigned'     reduce using rule 206
	'xr'           reduce using rule 206
	'xs'           reduce using rule 206
	'{'            reduce using rule 206
	'|'            reduce using rule 206
	'||'           reduce using rule 206
	'}'            reduce using rule 206
	'~'            reduce using rule 206
	L_integ        reduce using rule 206
	L_PIdent       reduce using rule 206
	%eof           reduce using rule 206


State 418

	ChType -> Typename ',' ChType .                     (rule 203)

	'}'            reduce using rule 203
	%eof           reduce using rule 203


State 419

	ChInit -> '[' Const ']' . 'of' '{' ChType '}'       (rule 201)

	'of'           shift, and enter state 448


State 420

	IvarConst -> '[' Const ']' .                        (rule 197)

	'!'            reduce using rule 197
	'('            reduce using rule 197
	')'            reduce using rule 197
	','            reduce using rule 197
	'-'            reduce using rule 197
	'->'           reduce using rule 197
	'::'           reduce using rule 197
	';'            reduce using rule 197
	'='            reduce using rule 197
	'active'       reduce using rule 197
	'assert'       reduce using rule 197
	'atomic'       reduce using rule 197
	'bit'          reduce using rule 197
	'bool'         reduce using rule 197
	'break'        reduce using rule 197
	'byte'         reduce using rule 197
	'chan'         reduce using rule 197
	'd_step'       reduce using rule 197
	'do'           reduce using rule 197
	'else'         reduce using rule 197
	'empty'        reduce using rule 197
	'enabled'      reduce using rule 197
	'false'        reduce using rule 197
	'fi'           reduce using rule 197
	'for'          reduce using rule 197
	'full'         reduce using rule 197
	'get_priority' reduce using rule 197
	'goto'         reduce using rule 197
	'hidden'       reduce using rule 197
	'if'           reduce using rule 197
	'init'         reduce using rule 197
	'inline'       reduce using rule 197
	'int'          reduce using rule 197
	'len'          reduce using rule 197
	'mtype'        reduce using rule 197
	'never'        reduce using rule 197
	'np_'          reduce using rule 197
	'od'           reduce using rule 197
	'pc_value'     reduce using rule 197
	'print'        reduce using rule 197
	'printf'       reduce using rule 197
	'printm'       reduce using rule 197
	'proctype'     reduce using rule 197
	'run'          reduce using rule 197
	'select'       reduce using rule 197
	'set_priority' reduce using rule 197
	'short'        reduce using rule 197
	'show'         reduce using rule 197
	'skip'         reduce using rule 197
	'timeout'      reduce using rule 197
	'trace'        reduce using rule 197
	'true'         reduce using rule 197
	'typedef'      reduce using rule 197
	'unsigned'     reduce using rule 197
	'xr'           reduce using rule 197
	'xs'           reduce using rule 197
	'{'            reduce using rule 197
	'}'            reduce using rule 197
	'~'            reduce using rule 197
	L_integ        reduce using rule 197
	L_PIdent       reduce using rule 197
	%eof           reduce using rule 197


State 421

	Ivar -> Name IvarConst IvarAssign .                 (rule 195)

	'!'            reduce using rule 195
	'('            reduce using rule 195
	')'            reduce using rule 195
	','            reduce using rule 195
	'-'            reduce using rule 195
	'->'           reduce using rule 195
	'::'           reduce using rule 195
	';'            reduce using rule 195
	'active'       reduce using rule 195
	'assert'       reduce using rule 195
	'atomic'       reduce using rule 195
	'bit'          reduce using rule 195
	'bool'         reduce using rule 195
	'break'        reduce using rule 195
	'byte'         reduce using rule 195
	'chan'         reduce using rule 195
	'd_step'       reduce using rule 195
	'do'           reduce using rule 195
	'else'         reduce using rule 195
	'empty'        reduce using rule 195
	'enabled'      reduce using rule 195
	'false'        reduce using rule 195
	'fi'           reduce using rule 195
	'for'          reduce using rule 195
	'full'         reduce using rule 195
	'get_priority' reduce using rule 195
	'goto'         reduce using rule 195
	'hidden'       reduce using rule 195
	'if'           reduce using rule 195
	'init'         reduce using rule 195
	'inline'       reduce using rule 195
	'int'          reduce using rule 195
	'len'          reduce using rule 195
	'mtype'        reduce using rule 195
	'never'        reduce using rule 195
	'np_'          reduce using rule 195
	'od'           reduce using rule 195
	'pc_value'     reduce using rule 195
	'print'        reduce using rule 195
	'printf'       reduce using rule 195
	'printm'       reduce using rule 195
	'proctype'     reduce using rule 195
	'run'          reduce using rule 195
	'select'       reduce using rule 195
	'set_priority' reduce using rule 195
	'short'        reduce using rule 195
	'show'         reduce using rule 195
	'skip'         reduce using rule 195
	'timeout'      reduce using rule 195
	'trace'        reduce using rule 195
	'true'         reduce using rule 195
	'typedef'      reduce using rule 195
	'unsigned'     reduce using rule 195
	'xr'           reduce using rule 195
	'xs'           reduce using rule 195
	'{'            reduce using rule 195
	'}'            reduce using rule 195
	'~'            reduce using rule 195
	L_integ        reduce using rule 195
	L_PIdent       reduce using rule 195
	%eof           reduce using rule 195


State 422

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	AnyExpr -> AnyExpr BinOp AnyExpr .                  (rule 180)

	'!'            reduce using rule 180
	'!='           shift, and enter state 267
			(reduce using rule 180)

	'%'            shift, and enter state 268
			(reduce using rule 180)

	'&'            shift, and enter state 269
			(reduce using rule 180)

	'&&'           shift, and enter state 270
			(reduce using rule 180)

	'('            reduce using rule 180
	')'            reduce using rule 180
	'*'            shift, and enter state 271
			(reduce using rule 180)

	'+'            shift, and enter state 272
			(reduce using rule 180)

	','            reduce using rule 180
	'-'            shift, and enter state 273
			(reduce using rule 180)

	'->'           reduce using rule 180
	'..'           reduce using rule 180
	'/'            shift, and enter state 274
			(reduce using rule 180)

	':'            reduce using rule 180
	'::'           reduce using rule 180
	';'            reduce using rule 180
	'<'            shift, and enter state 275
			(reduce using rule 180)

	'<<'           shift, and enter state 276
			(reduce using rule 180)

	'<='           shift, and enter state 277
			(reduce using rule 180)

	'=='           shift, and enter state 278
			(reduce using rule 180)

	'>'            shift, and enter state 279
			(reduce using rule 180)

	'>='           shift, and enter state 280
			(reduce using rule 180)

	'>>'           shift, and enter state 281
			(reduce using rule 180)

	']'            reduce using rule 180
	'^'            shift, and enter state 282
			(reduce using rule 180)

	'active'       reduce using rule 180
	'assert'       reduce using rule 180
	'atomic'       reduce using rule 180
	'bit'          reduce using rule 180
	'bool'         reduce using rule 180
	'break'        reduce using rule 180
	'byte'         reduce using rule 180
	'chan'         reduce using rule 180
	'd_step'       reduce using rule 180
	'do'           reduce using rule 180
	'else'         reduce using rule 180
	'empty'        reduce using rule 180
	'enabled'      reduce using rule 180
	'false'        reduce using rule 180
	'fi'           reduce using rule 180
	'for'          reduce using rule 180
	'full'         reduce using rule 180
	'get_priority' reduce using rule 180
	'goto'         reduce using rule 180
	'hidden'       reduce using rule 180
	'if'           reduce using rule 180
	'init'         reduce using rule 180
	'inline'       reduce using rule 180
	'int'          reduce using rule 180
	'len'          reduce using rule 180
	'mtype'        reduce using rule 180
	'never'        reduce using rule 180
	'np_'          reduce using rule 180
	'od'           reduce using rule 180
	'pc_value'     reduce using rule 180
	'print'        reduce using rule 180
	'printf'       reduce using rule 180
	'printm'       reduce using rule 180
	'proctype'     reduce using rule 180
	'run'          reduce using rule 180
	'select'       reduce using rule 180
	'set_priority' reduce using rule 180
	'short'        reduce using rule 180
	'show'         reduce using rule 180
	'skip'         reduce using rule 180
	'timeout'      reduce using rule 180
	'trace'        reduce using rule 180
	'true'         reduce using rule 180
	'typedef'      reduce using rule 180
	'unless'       reduce using rule 180
	'unsigned'     reduce using rule 180
	'xr'           reduce using rule 180
	'xs'           reduce using rule 180
	'{'            reduce using rule 180
	'|'            shift, and enter state 283
			(reduce using rule 180)

	'||'           shift, and enter state 284
			(reduce using rule 180)

	'}'            reduce using rule 180
	'~'            reduce using rule 180
	L_integ        reduce using rule 180
	L_PIdent       reduce using rule 180
	%eof           reduce using rule 180

	AndOr          goto state 265
	BinOp          goto state 319

State 423

	VarRefList -> VarRef ',' VarRefList .               (rule 178)

	'!'            reduce using rule 178
	'('            reduce using rule 178
	')'            reduce using rule 178
	'-'            reduce using rule 178
	'->'           reduce using rule 178
	'::'           reduce using rule 178
	';'            reduce using rule 178
	'assert'       reduce using rule 178
	'atomic'       reduce using rule 178
	'bit'          reduce using rule 178
	'bool'         reduce using rule 178
	'break'        reduce using rule 178
	'byte'         reduce using rule 178
	'chan'         reduce using rule 178
	'd_step'       reduce using rule 178
	'do'           reduce using rule 178
	'else'         reduce using rule 178
	'empty'        reduce using rule 178
	'enabled'      reduce using rule 178
	'false'        reduce using rule 178
	'fi'           reduce using rule 178
	'for'          reduce using rule 178
	'full'         reduce using rule 178
	'get_priority' reduce using rule 178
	'goto'         reduce using rule 178
	'hidden'       reduce using rule 178
	'if'           reduce using rule 178
	'int'          reduce using rule 178
	'len'          reduce using rule 178
	'mtype'        reduce using rule 178
	'np_'          reduce using rule 178
	'od'           reduce using rule 178
	'pc_value'     reduce using rule 178
	'print'        reduce using rule 178
	'printf'       reduce using rule 178
	'printm'       reduce using rule 178
	'run'          reduce using rule 178
	'select'       reduce using rule 178
	'set_priority' reduce using rule 178
	'short'        reduce using rule 178
	'show'         reduce using rule 178
	'skip'         reduce using rule 178
	'timeout'      reduce using rule 178
	'true'         reduce using rule 178
	'unsigned'     reduce using rule 178
	'xr'           reduce using rule 178
	'xs'           reduce using rule 178
	'{'            reduce using rule 178
	'}'            reduce using rule 178
	'~'            reduce using rule 178
	L_integ        reduce using rule 178
	L_PIdent       reduce using rule 178
	%eof           reduce using rule 178


State 424

	DeclList -> Decl Separator DeclList .               (rule 151)

	'!'            reduce using rule 151
	'('            reduce using rule 151
	')'            reduce using rule 151
	'-'            reduce using rule 151
	'->'           reduce using rule 151
	'::'           reduce using rule 151
	';'            reduce using rule 151
	'active'       reduce using rule 151
	'assert'       reduce using rule 151
	'atomic'       reduce using rule 151
	'bit'          reduce using rule 151
	'bool'         reduce using rule 151
	'break'        reduce using rule 151
	'byte'         reduce using rule 151
	'chan'         reduce using rule 151
	'd_step'       reduce using rule 151
	'do'           reduce using rule 151
	'else'         reduce using rule 151
	'empty'        reduce using rule 151
	'enabled'      reduce using rule 151
	'false'        reduce using rule 151
	'fi'           reduce using rule 151
	'for'          reduce using rule 151
	'full'         reduce using rule 151
	'get_priority' reduce using rule 151
	'goto'         reduce using rule 151
	'hidden'       reduce using rule 151
	'if'           reduce using rule 151
	'init'         reduce using rule 151
	'inline'       reduce using rule 151
	'int'          reduce using rule 151
	'len'          reduce using rule 151
	'mtype'        reduce using rule 151
	'never'        reduce using rule 151
	'np_'          reduce using rule 151
	'od'           reduce using rule 151
	'pc_value'     reduce using rule 151
	'print'        reduce using rule 151
	'printf'       reduce using rule 151
	'printm'       reduce using rule 151
	'proctype'     reduce using rule 151
	'run'          reduce using rule 151
	'select'       reduce using rule 151
	'set_priority' reduce using rule 151
	'short'        reduce using rule 151
	'show'         reduce using rule 151
	'skip'         reduce using rule 151
	'timeout'      reduce using rule 151
	'trace'        reduce using rule 151
	'true'         reduce using rule 151
	'typedef'      reduce using rule 151
	'unsigned'     reduce using rule 151
	'xr'           reduce using rule 151
	'xs'           reduce using rule 151
	'{'            reduce using rule 151
	'}'            reduce using rule 151
	'~'            reduce using rule 151
	L_integ        reduce using rule 151
	L_PIdent       reduce using rule 151
	%eof           reduce using rule 151


State 425

	Decl -> DeclVisible Typename DclIvar .              (rule 152)

	'!'            reduce using rule 152
	'('            reduce using rule 152
	')'            reduce using rule 152
	'-'            reduce using rule 152
	'->'           reduce using rule 152
	'::'           reduce using rule 152
	';'            reduce using rule 152
	'active'       reduce using rule 152
	'assert'       reduce using rule 152
	'atomic'       reduce using rule 152
	'bit'          reduce using rule 152
	'bool'         reduce using rule 152
	'break'        reduce using rule 152
	'byte'         reduce using rule 152
	'chan'         reduce using rule 152
	'd_step'       reduce using rule 152
	'do'           reduce using rule 152
	'else'         reduce using rule 152
	'empty'        reduce using rule 152
	'enabled'      reduce using rule 152
	'false'        reduce using rule 152
	'fi'           reduce using rule 152
	'for'          reduce using rule 152
	'full'         reduce using rule 152
	'get_priority' reduce using rule 152
	'goto'         reduce using rule 152
	'hidden'       reduce using rule 152
	'if'           reduce using rule 152
	'init'         reduce using rule 152
	'inline'       reduce using rule 152
	'int'          reduce using rule 152
	'len'          reduce using rule 152
	'mtype'        reduce using rule 152
	'never'        reduce using rule 152
	'np_'          reduce using rule 152
	'od'           reduce using rule 152
	'pc_value'     reduce using rule 152
	'print'        reduce using rule 152
	'printf'       reduce using rule 152
	'printm'       reduce using rule 152
	'proctype'     reduce using rule 152
	'run'          reduce using rule 152
	'select'       reduce using rule 152
	'set_priority' reduce using rule 152
	'short'        reduce using rule 152
	'show'         reduce using rule 152
	'skip'         reduce using rule 152
	'timeout'      reduce using rule 152
	'trace'        reduce using rule 152
	'true'         reduce using rule 152
	'typedef'      reduce using rule 152
	'unsigned'     reduce using rule 152
	'xr'           reduce using rule 152
	'xs'           reduce using rule 152
	'{'            reduce using rule 152
	'}'            reduce using rule 152
	'~'            reduce using rule 152
	L_integ        reduce using rule 152
	L_PIdent       reduce using rule 152
	%eof           reduce using rule 152


State 426

	Mtype -> 'mtype' Mequals '{' . Mname '}' Msep       (rule 142)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Mname          goto state 447
	Name           goto state 225

State 427

	Sequence -> Step Separator Sequence .               (rule 169)

	')'            reduce using rule 169
	'::'           reduce using rule 169
	'fi'           reduce using rule 169
	'od'           reduce using rule 169
	'}'            reduce using rule 169
	%eof           reduce using rule 169


State 428

	Enabler -> 'provided' '(' Expr . ')'                (rule 165)
	Expr -> Expr . AndOr Expr                           (rule 267)

	'&&'           shift, and enter state 270
	')'            shift, and enter state 446
	'||'           shift, and enter state 284

	AndOr          goto state 355

State 429

	AConst -> '[' Const ']' .                           (rule 163)

	'proctype'     reduce using rule 163
	%eof           reduce using rule 163


State 430

	UnsignedDecl -> 'unsigned' Name ':' . Const UDclAssign    (rule 158)

	'false'        shift, and enter state 91
	'skip'         shift, and enter state 99
	'true'         shift, and enter state 101
	L_integ        shift, and enter state 71

	Integer        goto state 77
	Const          goto state 445

State 431

	DclIvar -> Ivar ',' DclIvar .                       (rule 154)

	'!'            reduce using rule 154
	'('            reduce using rule 154
	')'            reduce using rule 154
	'-'            reduce using rule 154
	'->'           reduce using rule 154
	'::'           reduce using rule 154
	';'            reduce using rule 154
	'active'       reduce using rule 154
	'assert'       reduce using rule 154
	'atomic'       reduce using rule 154
	'bit'          reduce using rule 154
	'bool'         reduce using rule 154
	'break'        reduce using rule 154
	'byte'         reduce using rule 154
	'chan'         reduce using rule 154
	'd_step'       reduce using rule 154
	'do'           reduce using rule 154
	'else'         reduce using rule 154
	'empty'        reduce using rule 154
	'enabled'      reduce using rule 154
	'false'        reduce using rule 154
	'fi'           reduce using rule 154
	'for'          reduce using rule 154
	'full'         reduce using rule 154
	'get_priority' reduce using rule 154
	'goto'         reduce using rule 154
	'hidden'       reduce using rule 154
	'if'           reduce using rule 154
	'init'         reduce using rule 154
	'inline'       reduce using rule 154
	'int'          reduce using rule 154
	'len'          reduce using rule 154
	'mtype'        reduce using rule 154
	'never'        reduce using rule 154
	'np_'          reduce using rule 154
	'od'           reduce using rule 154
	'pc_value'     reduce using rule 154
	'print'        reduce using rule 154
	'printf'       reduce using rule 154
	'printm'       reduce using rule 154
	'proctype'     reduce using rule 154
	'run'          reduce using rule 154
	'select'       reduce using rule 154
	'set_priority' reduce using rule 154
	'short'        reduce using rule 154
	'show'         reduce using rule 154
	'skip'         reduce using rule 154
	'timeout'      reduce using rule 154
	'trace'        reduce using rule 154
	'true'         reduce using rule 154
	'typedef'      reduce using rule 154
	'unsigned'     reduce using rule 154
	'xr'           reduce using rule 154
	'xs'           reduce using rule 154
	'{'            reduce using rule 154
	'}'            reduce using rule 154
	'~'            reduce using rule 154
	L_integ        reduce using rule 154
	L_PIdent       reduce using rule 154
	%eof           reduce using rule 154


State 432

	Mname -> Name ',' Mname .                           (rule 148)

	'}'            reduce using rule 148
	%eof           reduce using rule 148


State 433

	Utype -> 'typedef' Name '{' . DeclList '}' ';'      (rule 141)

	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'hidden'       shift, and enter state 199
	'int'          reduce using rule 156
	'mtype'        reduce using rule 156
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'unsigned'     reduce using rule 156
	L_PIdent       reduce using rule 156

	Visible        goto state 192
	DeclList       goto state 444
	Decl           goto state 195
	DeclVisible    goto state 196

State 434

	Trace -> 'trace' '{' Sequence . '}'                 (rule 140)

	'}'            shift, and enter state 443


State 435

	Never -> 'never' '{' Sequence . '}'                 (rule 139)

	'}'            shift, and enter state 442


State 436

	Init -> 'init' Ipriority '{' . Sequence '}'         (rule 136)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)


	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 441
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 437

	Inline -> 'inline' Name '(' . ArgList ')' '{' Sequence '}'    (rule 127)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	')'            reduce using rule 221
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 103
	VarRef         goto state 82
	Poll           goto state 83
	ArgList        goto state 440
	Name           goto state 85

State 438

	Proctype -> Pactive 'proctype' Name . '(' PdeclList ')' Ppriority Penabler '{' Sequence '}'    (rule 126)

	'('            shift, and enter state 439


State 439

	Proctype -> Pactive 'proctype' Name '(' . PdeclList ')' Ppriority Penabler '{' Sequence '}'    (rule 126)

	')'            reduce using rule 130
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'hidden'       shift, and enter state 199
	'int'          reduce using rule 156
	'mtype'        reduce using rule 156
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'unsigned'     reduce using rule 156
	L_PIdent       reduce using rule 156

	Visible        goto state 192
	PdeclList      goto state 490
	DeclList       goto state 246
	Decl           goto state 195
	DeclVisible    goto state 196

State 440

	Inline -> 'inline' Name '(' ArgList . ')' '{' Sequence '}'    (rule 127)

	')'            shift, and enter state 489


State 441

	Init -> 'init' Ipriority '{' Sequence . '}'         (rule 136)

	'}'            shift, and enter state 488


State 442

	Never -> 'never' '{' Sequence '}' .                 (rule 139)

	'active'       reduce using rule 139
	'bit'          reduce using rule 139
	'bool'         reduce using rule 139
	'byte'         reduce using rule 139
	'chan'         reduce using rule 139
	'hidden'       reduce using rule 139
	'init'         reduce using rule 139
	'inline'       reduce using rule 139
	'int'          reduce using rule 139
	'mtype'        reduce using rule 139
	'never'        reduce using rule 139
	'proctype'     reduce using rule 139
	'short'        reduce using rule 139
	'show'         reduce using rule 139
	'trace'        reduce using rule 139
	'typedef'      reduce using rule 139
	'unsigned'     reduce using rule 139
	L_PIdent       reduce using rule 139
	%eof           reduce using rule 139


State 443

	Trace -> 'trace' '{' Sequence '}' .                 (rule 140)

	'active'       reduce using rule 140
	'bit'          reduce using rule 140
	'bool'         reduce using rule 140
	'byte'         reduce using rule 140
	'chan'         reduce using rule 140
	'hidden'       reduce using rule 140
	'init'         reduce using rule 140
	'inline'       reduce using rule 140
	'int'          reduce using rule 140
	'mtype'        reduce using rule 140
	'never'        reduce using rule 140
	'proctype'     reduce using rule 140
	'short'        reduce using rule 140
	'show'         reduce using rule 140
	'trace'        reduce using rule 140
	'typedef'      reduce using rule 140
	'unsigned'     reduce using rule 140
	L_PIdent       reduce using rule 140
	%eof           reduce using rule 140


State 444

	Utype -> 'typedef' Name '{' DeclList . '}' ';'      (rule 141)

	'}'            shift, and enter state 487


State 445

	UnsignedDecl -> 'unsigned' Name ':' Const . UDclAssign    (rule 158)

	'!'            reduce using rule 159
	'('            reduce using rule 159
	')'            reduce using rule 159
	'-'            reduce using rule 159
	'->'           reduce using rule 159
	'::'           reduce using rule 159
	';'            reduce using rule 159
	'='            shift, and enter state 216
	'active'       reduce using rule 159
	'assert'       reduce using rule 159
	'atomic'       reduce using rule 159
	'bit'          reduce using rule 159
	'bool'         reduce using rule 159
	'break'        reduce using rule 159
	'byte'         reduce using rule 159
	'chan'         reduce using rule 159
	'd_step'       reduce using rule 159
	'do'           reduce using rule 159
	'else'         reduce using rule 159
	'empty'        reduce using rule 159
	'enabled'      reduce using rule 159
	'false'        reduce using rule 159
	'fi'           reduce using rule 159
	'for'          reduce using rule 159
	'full'         reduce using rule 159
	'get_priority' reduce using rule 159
	'goto'         reduce using rule 159
	'hidden'       reduce using rule 159
	'if'           reduce using rule 159
	'init'         reduce using rule 159
	'inline'       reduce using rule 159
	'int'          reduce using rule 159
	'len'          reduce using rule 159
	'mtype'        reduce using rule 159
	'never'        reduce using rule 159
	'np_'          reduce using rule 159
	'od'           reduce using rule 159
	'pc_value'     reduce using rule 159
	'print'        reduce using rule 159
	'printf'       reduce using rule 159
	'printm'       reduce using rule 159
	'proctype'     reduce using rule 159
	'run'          reduce using rule 159
	'select'       reduce using rule 159
	'set_priority' reduce using rule 159
	'short'        reduce using rule 159
	'show'         reduce using rule 159
	'skip'         reduce using rule 159
	'timeout'      reduce using rule 159
	'trace'        reduce using rule 159
	'true'         reduce using rule 159
	'typedef'      reduce using rule 159
	'unsigned'     reduce using rule 159
	'xr'           reduce using rule 159
	'xs'           reduce using rule 159
	'{'            reduce using rule 159
	'}'            reduce using rule 159
	'~'            reduce using rule 159
	L_integ        reduce using rule 159
	L_PIdent       reduce using rule 159
	%eof           reduce using rule 159

	UDclAssign     goto state 486

State 446

	Enabler -> 'provided' '(' Expr ')' .                (rule 165)

	'{'            reduce using rule 165
	%eof           reduce using rule 165


State 447

	Mtype -> 'mtype' Mequals '{' Mname . '}' Msep       (rule 142)

	'}'            shift, and enter state 485


State 448

	ChInit -> '[' Const ']' 'of' . '{' ChType '}'       (rule 201)

	'{'            shift, and enter state 484


State 449

	Send -> VarRef '!' '!' SendArgs .                   (rule 210)

	'!'            reduce using rule 210
	'('            reduce using rule 210
	')'            reduce using rule 210
	'-'            reduce using rule 210
	'->'           reduce using rule 210
	'::'           reduce using rule 210
	';'            reduce using rule 210
	'assert'       reduce using rule 210
	'atomic'       reduce using rule 210
	'bit'          reduce using rule 210
	'bool'         reduce using rule 210
	'break'        reduce using rule 210
	'byte'         reduce using rule 210
	'chan'         reduce using rule 210
	'd_step'       reduce using rule 210
	'do'           reduce using rule 210
	'else'         reduce using rule 210
	'empty'        reduce using rule 210
	'enabled'      reduce using rule 210
	'false'        reduce using rule 210
	'fi'           reduce using rule 210
	'for'          reduce using rule 210
	'full'         reduce using rule 210
	'get_priority' reduce using rule 210
	'goto'         reduce using rule 210
	'hidden'       reduce using rule 210
	'if'           reduce using rule 210
	'int'          reduce using rule 210
	'len'          reduce using rule 210
	'mtype'        reduce using rule 210
	'np_'          reduce using rule 210
	'od'           reduce using rule 210
	'pc_value'     reduce using rule 210
	'print'        reduce using rule 210
	'printf'       reduce using rule 210
	'printm'       reduce using rule 210
	'run'          reduce using rule 210
	'select'       reduce using rule 210
	'set_priority' reduce using rule 210
	'short'        reduce using rule 210
	'show'         reduce using rule 210
	'skip'         reduce using rule 210
	'timeout'      reduce using rule 210
	'true'         reduce using rule 210
	'unless'       reduce using rule 210
	'unsigned'     reduce using rule 210
	'xr'           reduce using rule 210
	'xs'           reduce using rule 210
	'{'            reduce using rule 210
	'}'            reduce using rule 210
	'~'            reduce using rule 210
	L_integ        reduce using rule 210
	L_PIdent       reduce using rule 210
	%eof           reduce using rule 210


State 450

	Receive -> VarRef '?' '?' RecvArgs .                (rule 212)

	'!'            reduce using rule 212
	'('            reduce using rule 212
	')'            reduce using rule 212
	'-'            reduce using rule 212
	'->'           reduce using rule 212
	'::'           reduce using rule 212
	';'            reduce using rule 212
	'assert'       reduce using rule 212
	'atomic'       reduce using rule 212
	'bit'          reduce using rule 212
	'bool'         reduce using rule 212
	'break'        reduce using rule 212
	'byte'         reduce using rule 212
	'chan'         reduce using rule 212
	'd_step'       reduce using rule 212
	'do'           reduce using rule 212
	'else'         reduce using rule 212
	'empty'        reduce using rule 212
	'enabled'      reduce using rule 212
	'false'        reduce using rule 212
	'fi'           reduce using rule 212
	'for'          reduce using rule 212
	'full'         reduce using rule 212
	'get_priority' reduce using rule 212
	'goto'         reduce using rule 212
	'hidden'       reduce using rule 212
	'if'           reduce using rule 212
	'int'          reduce using rule 212
	'len'          reduce using rule 212
	'mtype'        reduce using rule 212
	'np_'          reduce using rule 212
	'od'           reduce using rule 212
	'pc_value'     reduce using rule 212
	'print'        reduce using rule 212
	'printf'       reduce using rule 212
	'printm'       reduce using rule 212
	'run'          reduce using rule 212
	'select'       reduce using rule 212
	'set_priority' reduce using rule 212
	'short'        reduce using rule 212
	'show'         reduce using rule 212
	'skip'         reduce using rule 212
	'timeout'      reduce using rule 212
	'true'         reduce using rule 212
	'unless'       reduce using rule 212
	'unsigned'     reduce using rule 212
	'xr'           reduce using rule 212
	'xs'           reduce using rule 212
	'{'            reduce using rule 212
	'}'            reduce using rule 212
	'~'            reduce using rule 212
	L_integ        reduce using rule 212
	L_PIdent       reduce using rule 212
	%eof           reduce using rule 212


State 451

	Receive -> VarRef '?' '?' '<' . RecvArgs '>'        (rule 214)

	'-'            shift, and enter state 149
	'eval'         shift, and enter state 150
	'false'        reduce using rule 226
	'skip'         reduce using rule 226
	'true'         reduce using rule 226
	L_integ        reduce using rule 226
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 146
	RecvArgs       goto state 483
	RecvArgList    goto state 155
	UnaryMinus     goto state 147
	RecvArg        goto state 153
	Name           goto state 145

State 452

	Poll -> VarRef '?' '?' '[' . RecvArgs ']'           (rule 216)

	'-'            shift, and enter state 149
	'eval'         shift, and enter state 150
	'false'        reduce using rule 226
	'skip'         reduce using rule 226
	'true'         reduce using rule 226
	L_integ        reduce using rule 226
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	VarRef         goto state 146
	RecvArgs       goto state 482
	RecvArgList    goto state 155
	UnaryMinus     goto state 147
	RecvArg        goto state 153
	Name           goto state 145

State 453

	SendArgs -> AnyExpr '(' ArgList ')' .               (rule 218)

	'!'            reduce using rule 218
	'('            reduce using rule 218
	')'            reduce using rule 218
	'-'            reduce using rule 218
	'->'           reduce using rule 218
	'::'           reduce using rule 218
	';'            reduce using rule 218
	'assert'       reduce using rule 218
	'atomic'       reduce using rule 218
	'bit'          reduce using rule 218
	'bool'         reduce using rule 218
	'break'        reduce using rule 218
	'byte'         reduce using rule 218
	'chan'         reduce using rule 218
	'd_step'       reduce using rule 218
	'do'           reduce using rule 218
	'else'         reduce using rule 218
	'empty'        reduce using rule 218
	'enabled'      reduce using rule 218
	'false'        reduce using rule 218
	'fi'           reduce using rule 218
	'for'          reduce using rule 218
	'full'         reduce using rule 218
	'get_priority' reduce using rule 218
	'goto'         reduce using rule 218
	'hidden'       reduce using rule 218
	'if'           reduce using rule 218
	'int'          reduce using rule 218
	'len'          reduce using rule 218
	'mtype'        reduce using rule 218
	'np_'          reduce using rule 218
	'od'           reduce using rule 218
	'pc_value'     reduce using rule 218
	'print'        reduce using rule 218
	'printf'       reduce using rule 218
	'printm'       reduce using rule 218
	'run'          reduce using rule 218
	'select'       reduce using rule 218
	'set_priority' reduce using rule 218
	'short'        reduce using rule 218
	'show'         reduce using rule 218
	'skip'         reduce using rule 218
	'timeout'      reduce using rule 218
	'true'         reduce using rule 218
	'unless'       reduce using rule 218
	'unsigned'     reduce using rule 218
	'xr'           reduce using rule 218
	'xs'           reduce using rule 218
	'{'            reduce using rule 218
	'}'            reduce using rule 218
	'~'            reduce using rule 218
	L_integ        reduce using rule 218
	L_PIdent       reduce using rule 218
	%eof           reduce using rule 218


State 454

	RecvArgs -> RecvArgList '(' RecvArgs ')' .          (rule 223)

	'!'            reduce using rule 223
	'('            reduce using rule 223
	')'            reduce using rule 223
	'-'            reduce using rule 223
	'->'           reduce using rule 223
	'::'           reduce using rule 223
	';'            reduce using rule 223
	'>'            reduce using rule 223
	']'            reduce using rule 223
	'assert'       reduce using rule 223
	'atomic'       reduce using rule 223
	'bit'          reduce using rule 223
	'bool'         reduce using rule 223
	'break'        reduce using rule 223
	'byte'         reduce using rule 223
	'chan'         reduce using rule 223
	'd_step'       reduce using rule 223
	'do'           reduce using rule 223
	'else'         reduce using rule 223
	'empty'        reduce using rule 223
	'enabled'      reduce using rule 223
	'false'        reduce using rule 223
	'fi'           reduce using rule 223
	'for'          reduce using rule 223
	'full'         reduce using rule 223
	'get_priority' reduce using rule 223
	'goto'         reduce using rule 223
	'hidden'       reduce using rule 223
	'if'           reduce using rule 223
	'int'          reduce using rule 223
	'len'          reduce using rule 223
	'mtype'        reduce using rule 223
	'np_'          reduce using rule 223
	'od'           reduce using rule 223
	'pc_value'     reduce using rule 223
	'print'        reduce using rule 223
	'printf'       reduce using rule 223
	'printm'       reduce using rule 223
	'run'          reduce using rule 223
	'select'       reduce using rule 223
	'set_priority' reduce using rule 223
	'short'        reduce using rule 223
	'show'         reduce using rule 223
	'skip'         reduce using rule 223
	'timeout'      reduce using rule 223
	'true'         reduce using rule 223
	'unless'       reduce using rule 223
	'unsigned'     reduce using rule 223
	'xr'           reduce using rule 223
	'xs'           reduce using rule 223
	'{'            reduce using rule 223
	'}'            reduce using rule 223
	'~'            reduce using rule 223
	L_integ        reduce using rule 223
	L_PIdent       reduce using rule 223
	%eof           reduce using rule 223


State 455

	RecvArg -> 'eval' '(' VarRef ')' .                  (rule 229)

	'!'            reduce using rule 229
	'('            reduce using rule 229
	')'            reduce using rule 229
	'-'            reduce using rule 229
	'->'           reduce using rule 229
	'::'           reduce using rule 229
	';'            reduce using rule 229
	'>'            reduce using rule 229
	']'            reduce using rule 229
	'assert'       reduce using rule 229
	'atomic'       reduce using rule 229
	'bit'          reduce using rule 229
	'bool'         reduce using rule 229
	'break'        reduce using rule 229
	'byte'         reduce using rule 229
	'chan'         reduce using rule 229
	'd_step'       reduce using rule 229
	'do'           reduce using rule 229
	'else'         reduce using rule 229
	'empty'        reduce using rule 229
	'enabled'      reduce using rule 229
	'eval'         reduce using rule 229
	'false'        reduce using rule 229
	'fi'           reduce using rule 229
	'for'          reduce using rule 229
	'full'         reduce using rule 229
	'get_priority' reduce using rule 229
	'goto'         reduce using rule 229
	'hidden'       reduce using rule 229
	'if'           reduce using rule 229
	'int'          reduce using rule 229
	'len'          reduce using rule 229
	'mtype'        reduce using rule 229
	'np_'          reduce using rule 229
	'od'           reduce using rule 229
	'pc_value'     reduce using rule 229
	'print'        reduce using rule 229
	'printf'       reduce using rule 229
	'printm'       reduce using rule 229
	'run'          reduce using rule 229
	'select'       reduce using rule 229
	'set_priority' reduce using rule 229
	'short'        reduce using rule 229
	'show'         reduce using rule 229
	'skip'         reduce using rule 229
	'timeout'      reduce using rule 229
	'true'         reduce using rule 229
	'unless'       reduce using rule 229
	'unsigned'     reduce using rule 229
	'xr'           reduce using rule 229
	'xs'           reduce using rule 229
	'{'            reduce using rule 229
	'}'            reduce using rule 229
	'~'            reduce using rule 229
	L_integ        reduce using rule 229
	L_PIdent       reduce using rule 229
	%eof           reduce using rule 229


State 456

	Stmt -> 'select' '(' Sequence ')' .                 (rule 244)

	'!'            reduce using rule 244
	'('            reduce using rule 244
	')'            reduce using rule 244
	'-'            reduce using rule 244
	'->'           reduce using rule 244
	'::'           reduce using rule 244
	';'            reduce using rule 244
	'assert'       reduce using rule 244
	'atomic'       reduce using rule 244
	'bit'          reduce using rule 244
	'bool'         reduce using rule 244
	'break'        reduce using rule 244
	'byte'         reduce using rule 244
	'chan'         reduce using rule 244
	'd_step'       reduce using rule 244
	'do'           reduce using rule 244
	'else'         reduce using rule 244
	'empty'        reduce using rule 244
	'enabled'      reduce using rule 244
	'false'        reduce using rule 244
	'fi'           reduce using rule 244
	'for'          reduce using rule 244
	'full'         reduce using rule 244
	'get_priority' reduce using rule 244
	'goto'         reduce using rule 244
	'hidden'       reduce using rule 244
	'if'           reduce using rule 244
	'int'          reduce using rule 244
	'len'          reduce using rule 244
	'mtype'        reduce using rule 244
	'np_'          reduce using rule 244
	'od'           reduce using rule 244
	'pc_value'     reduce using rule 244
	'print'        reduce using rule 244
	'printf'       reduce using rule 244
	'printm'       reduce using rule 244
	'run'          reduce using rule 244
	'select'       reduce using rule 244
	'set_priority' reduce using rule 244
	'short'        reduce using rule 244
	'show'         reduce using rule 244
	'skip'         reduce using rule 244
	'timeout'      reduce using rule 244
	'true'         reduce using rule 244
	'unless'       reduce using rule 244
	'unsigned'     reduce using rule 244
	'xr'           reduce using rule 244
	'xs'           reduce using rule 244
	'{'            reduce using rule 244
	'}'            reduce using rule 244
	'~'            reduce using rule 244
	L_integ        reduce using rule 244
	L_PIdent       reduce using rule 244
	%eof           reduce using rule 244


State 457

	Stmt -> 'for' '(' Range ')' . '{' Sequence '}'      (rule 241)

	'{'            shift, and enter state 481


State 458

	Stmt -> 'd_step' '{' Sequence '}' .                 (rule 243)

	'!'            reduce using rule 243
	'('            reduce using rule 243
	')'            reduce using rule 243
	'-'            reduce using rule 243
	'->'           reduce using rule 243
	'::'           reduce using rule 243
	';'            reduce using rule 243
	'assert'       reduce using rule 243
	'atomic'       reduce using rule 243
	'bit'          reduce using rule 243
	'bool'         reduce using rule 243
	'break'        reduce using rule 243
	'byte'         reduce using rule 243
	'chan'         reduce using rule 243
	'd_step'       reduce using rule 243
	'do'           reduce using rule 243
	'else'         reduce using rule 243
	'empty'        reduce using rule 243
	'enabled'      reduce using rule 243
	'false'        reduce using rule 243
	'fi'           reduce using rule 243
	'for'          reduce using rule 243
	'full'         reduce using rule 243
	'get_priority' reduce using rule 243
	'goto'         reduce using rule 243
	'hidden'       reduce using rule 243
	'if'           reduce using rule 243
	'int'          reduce using rule 243
	'len'          reduce using rule 243
	'mtype'        reduce using rule 243
	'np_'          reduce using rule 243
	'od'           reduce using rule 243
	'pc_value'     reduce using rule 243
	'print'        reduce using rule 243
	'printf'       reduce using rule 243
	'printm'       reduce using rule 243
	'run'          reduce using rule 243
	'select'       reduce using rule 243
	'set_priority' reduce using rule 243
	'short'        reduce using rule 243
	'show'         reduce using rule 243
	'skip'         reduce using rule 243
	'timeout'      reduce using rule 243
	'true'         reduce using rule 243
	'unless'       reduce using rule 243
	'unsigned'     reduce using rule 243
	'xr'           reduce using rule 243
	'xs'           reduce using rule 243
	'{'            reduce using rule 243
	'}'            reduce using rule 243
	'~'            reduce using rule 243
	L_integ        reduce using rule 243
	L_PIdent       reduce using rule 243
	%eof           reduce using rule 243


State 459

	Stmt -> 'atomic' '{' Sequence '}' .                 (rule 242)

	'!'            reduce using rule 242
	'('            reduce using rule 242
	')'            reduce using rule 242
	'-'            reduce using rule 242
	'->'           reduce using rule 242
	'::'           reduce using rule 242
	';'            reduce using rule 242
	'assert'       reduce using rule 242
	'atomic'       reduce using rule 242
	'bit'          reduce using rule 242
	'bool'         reduce using rule 242
	'break'        reduce using rule 242
	'byte'         reduce using rule 242
	'chan'         reduce using rule 242
	'd_step'       reduce using rule 242
	'do'           reduce using rule 242
	'else'         reduce using rule 242
	'empty'        reduce using rule 242
	'enabled'      reduce using rule 242
	'false'        reduce using rule 242
	'fi'           reduce using rule 242
	'for'          reduce using rule 242
	'full'         reduce using rule 242
	'get_priority' reduce using rule 242
	'goto'         reduce using rule 242
	'hidden'       reduce using rule 242
	'if'           reduce using rule 242
	'int'          reduce using rule 242
	'len'          reduce using rule 242
	'mtype'        reduce using rule 242
	'np_'          reduce using rule 242
	'od'           reduce using rule 242
	'pc_value'     reduce using rule 242
	'print'        reduce using rule 242
	'printf'       reduce using rule 242
	'printm'       reduce using rule 242
	'run'          reduce using rule 242
	'select'       reduce using rule 242
	'set_priority' reduce using rule 242
	'short'        reduce using rule 242
	'show'         reduce using rule 242
	'skip'         reduce using rule 242
	'timeout'      reduce using rule 242
	'true'         reduce using rule 242
	'unless'       reduce using rule 242
	'unsigned'     reduce using rule 242
	'xr'           reduce using rule 242
	'xs'           reduce using rule 242
	'{'            reduce using rule 242
	'}'            reduce using rule 242
	'~'            reduce using rule 242
	L_integ        reduce using rule 242
	L_PIdent       reduce using rule 242
	%eof           reduce using rule 242


State 460

	Stmt -> Name '(' ArgList ')' .                      (rule 255)

	'!'            reduce using rule 255
	'('            reduce using rule 255
	')'            reduce using rule 255
	'-'            reduce using rule 255
	'->'           reduce using rule 255
	'::'           reduce using rule 255
	';'            reduce using rule 255
	'assert'       reduce using rule 255
	'atomic'       reduce using rule 255
	'bit'          reduce using rule 255
	'bool'         reduce using rule 255
	'break'        reduce using rule 255
	'byte'         reduce using rule 255
	'chan'         reduce using rule 255
	'd_step'       reduce using rule 255
	'do'           reduce using rule 255
	'else'         reduce using rule 255
	'empty'        reduce using rule 255
	'enabled'      reduce using rule 255
	'false'        reduce using rule 255
	'fi'           reduce using rule 255
	'for'          reduce using rule 255
	'full'         reduce using rule 255
	'get_priority' reduce using rule 255
	'goto'         reduce using rule 255
	'hidden'       reduce using rule 255
	'if'           reduce using rule 255
	'int'          reduce using rule 255
	'len'          reduce using rule 255
	'mtype'        reduce using rule 255
	'np_'          reduce using rule 255
	'od'           reduce using rule 255
	'pc_value'     reduce using rule 255
	'print'        reduce using rule 255
	'printf'       reduce using rule 255
	'printm'       reduce using rule 255
	'run'          reduce using rule 255
	'select'       reduce using rule 255
	'set_priority' reduce using rule 255
	'short'        reduce using rule 255
	'show'         reduce using rule 255
	'skip'         reduce using rule 255
	'timeout'      reduce using rule 255
	'true'         reduce using rule 255
	'unless'       reduce using rule 255
	'unsigned'     reduce using rule 255
	'xr'           reduce using rule 255
	'xs'           reduce using rule 255
	'{'            reduce using rule 255
	'}'            reduce using rule 255
	'~'            reduce using rule 255
	L_integ        reduce using rule 255
	L_PIdent       reduce using rule 255
	%eof           reduce using rule 255


State 461

	AnyExpr -> Name '[' AnyExpr ']' . '@' Name          (rule 191)
	VarRefAnyExpr -> '[' AnyExpr ']' .                  (rule 206)

	'!'            reduce using rule 206
	'!='           reduce using rule 206
	'%'            reduce using rule 206
	'&'            reduce using rule 206
	'&&'           reduce using rule 206
	'('            reduce using rule 206
	')'            reduce using rule 206
	'*'            reduce using rule 206
	'+'            reduce using rule 206
	','            reduce using rule 206
	'-'            reduce using rule 206
	'->'           reduce using rule 206
	'.'            reduce using rule 206
	'..'           reduce using rule 206
	'/'            reduce using rule 206
	':'            reduce using rule 206
	'::'           reduce using rule 206
	';'            reduce using rule 206
	'<'            reduce using rule 206
	'<<'           reduce using rule 206
	'<='           reduce using rule 206
	'='            reduce using rule 206
	'=='           reduce using rule 206
	'>'            reduce using rule 206
	'>='           reduce using rule 206
	'>>'           reduce using rule 206
	'?'            reduce using rule 206
	'@'            shift, and enter state 480
	']'            reduce using rule 206
	'^'            reduce using rule 206
	'active'       reduce using rule 206
	'assert'       reduce using rule 206
	'atomic'       reduce using rule 206
	'bit'          reduce using rule 206
	'bool'         reduce using rule 206
	'break'        reduce using rule 206
	'byte'         reduce using rule 206
	'chan'         reduce using rule 206
	'd_step'       reduce using rule 206
	'do'           reduce using rule 206
	'else'         reduce using rule 206
	'empty'        reduce using rule 206
	'enabled'      reduce using rule 206
	'false'        reduce using rule 206
	'fi'           reduce using rule 206
	'for'          reduce using rule 206
	'full'         reduce using rule 206
	'get_priority' reduce using rule 206
	'goto'         reduce using rule 206
	'hidden'       reduce using rule 206
	'if'           reduce using rule 206
	'init'         reduce using rule 206
	'inline'       reduce using rule 206
	'int'          reduce using rule 206
	'len'          reduce using rule 206
	'mtype'        reduce using rule 206
	'never'        reduce using rule 206
	'np_'          reduce using rule 206
	'od'           reduce using rule 206
	'pc_value'     reduce using rule 206
	'print'        reduce using rule 206
	'printf'       reduce using rule 206
	'printm'       reduce using rule 206
	'proctype'     reduce using rule 206
	'run'          reduce using rule 206
	'select'       reduce using rule 206
	'set_priority' reduce using rule 206
	'short'        reduce using rule 206
	'show'         reduce using rule 206
	'skip'         reduce using rule 206
	'timeout'      reduce using rule 206
	'trace'        reduce using rule 206
	'true'         reduce using rule 206
	'typedef'      reduce using rule 206
	'unless'       reduce using rule 206
	'unsigned'     reduce using rule 206
	'xr'           reduce using rule 206
	'xs'           reduce using rule 206
	'{'            reduce using rule 206
	'|'            reduce using rule 206
	'||'           reduce using rule 206
	'}'            reduce using rule 206
	'~'            reduce using rule 206
	L_integ        reduce using rule 206
	L_PIdent       reduce using rule 206
	%eof           reduce using rule 206


State 462

	Poll -> VarRef '?' '[' RecvArgs . ']'               (rule 215)

	']'            shift, and enter state 479


State 463

	Receive -> VarRef '?' '<' RecvArgs . '>'            (rule 213)

	'>'            shift, and enter state 478


State 464

	Stmt -> PrintType '(' Pargs ')' .                   (rule 253)

	'!'            reduce using rule 253
	'('            reduce using rule 253
	')'            reduce using rule 253
	'-'            reduce using rule 253
	'->'           reduce using rule 253
	'::'           reduce using rule 253
	';'            reduce using rule 253
	'assert'       reduce using rule 253
	'atomic'       reduce using rule 253
	'bit'          reduce using rule 253
	'bool'         reduce using rule 253
	'break'        reduce using rule 253
	'byte'         reduce using rule 253
	'chan'         reduce using rule 253
	'd_step'       reduce using rule 253
	'do'           reduce using rule 253
	'else'         reduce using rule 253
	'empty'        reduce using rule 253
	'enabled'      reduce using rule 253
	'false'        reduce using rule 253
	'fi'           reduce using rule 253
	'for'          reduce using rule 253
	'full'         reduce using rule 253
	'get_priority' reduce using rule 253
	'goto'         reduce using rule 253
	'hidden'       reduce using rule 253
	'if'           reduce using rule 253
	'int'          reduce using rule 253
	'len'          reduce using rule 253
	'mtype'        reduce using rule 253
	'np_'          reduce using rule 253
	'od'           reduce using rule 253
	'pc_value'     reduce using rule 253
	'print'        reduce using rule 253
	'printf'       reduce using rule 253
	'printm'       reduce using rule 253
	'run'          reduce using rule 253
	'select'       reduce using rule 253
	'set_priority' reduce using rule 253
	'short'        reduce using rule 253
	'show'         reduce using rule 253
	'skip'         reduce using rule 253
	'timeout'      reduce using rule 253
	'true'         reduce using rule 253
	'unless'       reduce using rule 253
	'unsigned'     reduce using rule 253
	'xr'           reduce using rule 253
	'xs'           reduce using rule 253
	'{'            reduce using rule 253
	'}'            reduce using rule 253
	'~'            reduce using rule 253
	L_integ        reduce using rule 253
	L_PIdent       reduce using rule 253
	%eof           reduce using rule 253


State 465

	Range -> Name ':' AnyExpr '..' . AnyExpr            (rule 258)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 477
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 466

	AnyExpr -> 'set_priority' '(' Expr ',' . Expr ')'    (rule 194)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 81
	VarRef         goto state 82
	Poll           goto state 83
	Expr           goto state 476
	Name           goto state 85

State 467

	AnyExpr -> 'run' Name '(' RunArgs . ')' RunPrio     (rule 192)

	')'            shift, and enter state 475


State 468

	AnyExpr -> 'pc_value' '(' AnyExpr ')' .             (rule 190)

	'!'            reduce using rule 190
	'!='           reduce using rule 190
	'%'            reduce using rule 190
	'&'            reduce using rule 190
	'&&'           reduce using rule 190
	'('            reduce using rule 190
	')'            reduce using rule 190
	'*'            reduce using rule 190
	'+'            reduce using rule 190
	','            reduce using rule 190
	'-'            reduce using rule 190
	'->'           reduce using rule 190
	'..'           reduce using rule 190
	'/'            reduce using rule 190
	':'            reduce using rule 190
	'::'           reduce using rule 190
	';'            reduce using rule 190
	'<'            reduce using rule 190
	'<<'           reduce using rule 190
	'<='           reduce using rule 190
	'=='           reduce using rule 190
	'>'            reduce using rule 190
	'>='           reduce using rule 190
	'>>'           reduce using rule 190
	']'            reduce using rule 190
	'^'            reduce using rule 190
	'active'       reduce using rule 190
	'assert'       reduce using rule 190
	'atomic'       reduce using rule 190
	'bit'          reduce using rule 190
	'bool'         reduce using rule 190
	'break'        reduce using rule 190
	'byte'         reduce using rule 190
	'chan'         reduce using rule 190
	'd_step'       reduce using rule 190
	'do'           reduce using rule 190
	'else'         reduce using rule 190
	'empty'        reduce using rule 190
	'enabled'      reduce using rule 190
	'false'        reduce using rule 190
	'fi'           reduce using rule 190
	'for'          reduce using rule 190
	'full'         reduce using rule 190
	'get_priority' reduce using rule 190
	'goto'         reduce using rule 190
	'hidden'       reduce using rule 190
	'if'           reduce using rule 190
	'init'         reduce using rule 190
	'inline'       reduce using rule 190
	'int'          reduce using rule 190
	'len'          reduce using rule 190
	'mtype'        reduce using rule 190
	'never'        reduce using rule 190
	'np_'          reduce using rule 190
	'od'           reduce using rule 190
	'pc_value'     reduce using rule 190
	'print'        reduce using rule 190
	'printf'       reduce using rule 190
	'printm'       reduce using rule 190
	'proctype'     reduce using rule 190
	'run'          reduce using rule 190
	'select'       reduce using rule 190
	'set_priority' reduce using rule 190
	'short'        reduce using rule 190
	'show'         reduce using rule 190
	'skip'         reduce using rule 190
	'timeout'      reduce using rule 190
	'trace'        reduce using rule 190
	'true'         reduce using rule 190
	'typedef'      reduce using rule 190
	'unless'       reduce using rule 190
	'unsigned'     reduce using rule 190
	'xr'           reduce using rule 190
	'xs'           reduce using rule 190
	'{'            reduce using rule 190
	'|'            reduce using rule 190
	'||'           reduce using rule 190
	'}'            reduce using rule 190
	'~'            reduce using rule 190
	L_integ        reduce using rule 190
	L_PIdent       reduce using rule 190
	%eof           reduce using rule 190


State 469

	AnyExpr -> 'len' '(' VarRef ')' .                   (rule 183)

	'!'            reduce using rule 183
	'!='           reduce using rule 183
	'%'            reduce using rule 183
	'&'            reduce using rule 183
	'&&'           reduce using rule 183
	'('            reduce using rule 183
	')'            reduce using rule 183
	'*'            reduce using rule 183
	'+'            reduce using rule 183
	','            reduce using rule 183
	'-'            reduce using rule 183
	'->'           reduce using rule 183
	'..'           reduce using rule 183
	'/'            reduce using rule 183
	':'            reduce using rule 183
	'::'           reduce using rule 183
	';'            reduce using rule 183
	'<'            reduce using rule 183
	'<<'           reduce using rule 183
	'<='           reduce using rule 183
	'=='           reduce using rule 183
	'>'            reduce using rule 183
	'>='           reduce using rule 183
	'>>'           reduce using rule 183
	']'            reduce using rule 183
	'^'            reduce using rule 183
	'active'       reduce using rule 183
	'assert'       reduce using rule 183
	'atomic'       reduce using rule 183
	'bit'          reduce using rule 183
	'bool'         reduce using rule 183
	'break'        reduce using rule 183
	'byte'         reduce using rule 183
	'chan'         reduce using rule 183
	'd_step'       reduce using rule 183
	'do'           reduce using rule 183
	'else'         reduce using rule 183
	'empty'        reduce using rule 183
	'enabled'      reduce using rule 183
	'false'        reduce using rule 183
	'fi'           reduce using rule 183
	'for'          reduce using rule 183
	'full'         reduce using rule 183
	'get_priority' reduce using rule 183
	'goto'         reduce using rule 183
	'hidden'       reduce using rule 183
	'if'           reduce using rule 183
	'init'         reduce using rule 183
	'inline'       reduce using rule 183
	'int'          reduce using rule 183
	'len'          reduce using rule 183
	'mtype'        reduce using rule 183
	'never'        reduce using rule 183
	'np_'          reduce using rule 183
	'od'           reduce using rule 183
	'pc_value'     reduce using rule 183
	'print'        reduce using rule 183
	'printf'       reduce using rule 183
	'printm'       reduce using rule 183
	'proctype'     reduce using rule 183
	'run'          reduce using rule 183
	'select'       reduce using rule 183
	'set_priority' reduce using rule 183
	'short'        reduce using rule 183
	'show'         reduce using rule 183
	'skip'         reduce using rule 183
	'timeout'      reduce using rule 183
	'trace'        reduce using rule 183
	'true'         reduce using rule 183
	'typedef'      reduce using rule 183
	'unless'       reduce using rule 183
	'unsigned'     reduce using rule 183
	'xr'           reduce using rule 183
	'xs'           reduce using rule 183
	'{'            reduce using rule 183
	'|'            reduce using rule 183
	'||'           reduce using rule 183
	'}'            reduce using rule 183
	'~'            reduce using rule 183
	L_integ        reduce using rule 183
	L_PIdent       reduce using rule 183
	%eof           reduce using rule 183


State 470

	AnyExpr -> 'get_priority' '(' Expr ')' .            (rule 193)

	'!'            reduce using rule 193
	'!='           reduce using rule 193
	'%'            reduce using rule 193
	'&'            reduce using rule 193
	'&&'           reduce using rule 193
	'('            reduce using rule 193
	')'            reduce using rule 193
	'*'            reduce using rule 193
	'+'            reduce using rule 193
	','            reduce using rule 193
	'-'            reduce using rule 193
	'->'           reduce using rule 193
	'..'           reduce using rule 193
	'/'            reduce using rule 193
	':'            reduce using rule 193
	'::'           reduce using rule 193
	';'            reduce using rule 193
	'<'            reduce using rule 193
	'<<'           reduce using rule 193
	'<='           reduce using rule 193
	'=='           reduce using rule 193
	'>'            reduce using rule 193
	'>='           reduce using rule 193
	'>>'           reduce using rule 193
	']'            reduce using rule 193
	'^'            reduce using rule 193
	'active'       reduce using rule 193
	'assert'       reduce using rule 193
	'atomic'       reduce using rule 193
	'bit'          reduce using rule 193
	'bool'         reduce using rule 193
	'break'        reduce using rule 193
	'byte'         reduce using rule 193
	'chan'         reduce using rule 193
	'd_step'       reduce using rule 193
	'do'           reduce using rule 193
	'else'         reduce using rule 193
	'empty'        reduce using rule 193
	'enabled'      reduce using rule 193
	'false'        reduce using rule 193
	'fi'           reduce using rule 193
	'for'          reduce using rule 193
	'full'         reduce using rule 193
	'get_priority' reduce using rule 193
	'goto'         reduce using rule 193
	'hidden'       reduce using rule 193
	'if'           reduce using rule 193
	'init'         reduce using rule 193
	'inline'       reduce using rule 193
	'int'          reduce using rule 193
	'len'          reduce using rule 193
	'mtype'        reduce using rule 193
	'never'        reduce using rule 193
	'np_'          reduce using rule 193
	'od'           reduce using rule 193
	'pc_value'     reduce using rule 193
	'print'        reduce using rule 193
	'printf'       reduce using rule 193
	'printm'       reduce using rule 193
	'proctype'     reduce using rule 193
	'run'          reduce using rule 193
	'select'       reduce using rule 193
	'set_priority' reduce using rule 193
	'short'        reduce using rule 193
	'show'         reduce using rule 193
	'skip'         reduce using rule 193
	'timeout'      reduce using rule 193
	'trace'        reduce using rule 193
	'true'         reduce using rule 193
	'typedef'      reduce using rule 193
	'unless'       reduce using rule 193
	'unsigned'     reduce using rule 193
	'xr'           reduce using rule 193
	'xs'           reduce using rule 193
	'{'            reduce using rule 193
	'|'            reduce using rule 193
	'||'           reduce using rule 193
	'}'            reduce using rule 193
	'~'            reduce using rule 193
	L_integ        reduce using rule 193
	L_PIdent       reduce using rule 193
	%eof           reduce using rule 193


State 471

	AnyExpr -> 'enabled' '(' AnyExpr ')' .              (rule 189)

	'!'            reduce using rule 189
	'!='           reduce using rule 189
	'%'            reduce using rule 189
	'&'            reduce using rule 189
	'&&'           reduce using rule 189
	'('            reduce using rule 189
	')'            reduce using rule 189
	'*'            reduce using rule 189
	'+'            reduce using rule 189
	','            reduce using rule 189
	'-'            reduce using rule 189
	'->'           reduce using rule 189
	'..'           reduce using rule 189
	'/'            reduce using rule 189
	':'            reduce using rule 189
	'::'           reduce using rule 189
	';'            reduce using rule 189
	'<'            reduce using rule 189
	'<<'           reduce using rule 189
	'<='           reduce using rule 189
	'=='           reduce using rule 189
	'>'            reduce using rule 189
	'>='           reduce using rule 189
	'>>'           reduce using rule 189
	']'            reduce using rule 189
	'^'            reduce using rule 189
	'active'       reduce using rule 189
	'assert'       reduce using rule 189
	'atomic'       reduce using rule 189
	'bit'          reduce using rule 189
	'bool'         reduce using rule 189
	'break'        reduce using rule 189
	'byte'         reduce using rule 189
	'chan'         reduce using rule 189
	'd_step'       reduce using rule 189
	'do'           reduce using rule 189
	'else'         reduce using rule 189
	'empty'        reduce using rule 189
	'enabled'      reduce using rule 189
	'false'        reduce using rule 189
	'fi'           reduce using rule 189
	'for'          reduce using rule 189
	'full'         reduce using rule 189
	'get_priority' reduce using rule 189
	'goto'         reduce using rule 189
	'hidden'       reduce using rule 189
	'if'           reduce using rule 189
	'init'         reduce using rule 189
	'inline'       reduce using rule 189
	'int'          reduce using rule 189
	'len'          reduce using rule 189
	'mtype'        reduce using rule 189
	'never'        reduce using rule 189
	'np_'          reduce using rule 189
	'od'           reduce using rule 189
	'pc_value'     reduce using rule 189
	'print'        reduce using rule 189
	'printf'       reduce using rule 189
	'printm'       reduce using rule 189
	'proctype'     reduce using rule 189
	'run'          reduce using rule 189
	'select'       reduce using rule 189
	'set_priority' reduce using rule 189
	'short'        reduce using rule 189
	'show'         reduce using rule 189
	'skip'         reduce using rule 189
	'timeout'      reduce using rule 189
	'trace'        reduce using rule 189
	'true'         reduce using rule 189
	'typedef'      reduce using rule 189
	'unless'       reduce using rule 189
	'unsigned'     reduce using rule 189
	'xr'           reduce using rule 189
	'xs'           reduce using rule 189
	'{'            reduce using rule 189
	'|'            reduce using rule 189
	'||'           reduce using rule 189
	'}'            reduce using rule 189
	'~'            reduce using rule 189
	L_integ        reduce using rule 189
	L_PIdent       reduce using rule 189
	%eof           reduce using rule 189


State 472

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	AnyExpr -> '(' AnyExpr '->' AnyExpr . ':' AnyExpr ')'    (rule 182)

	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
	'/'            shift, and enter state 274
	':'            shift, and enter state 474
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284

	AndOr          goto state 265
	BinOp          goto state 319

State 473

	Expr -> ChanPoll '(' VarRef ')' .                   (rule 268)

	'!'            reduce using rule 268
	'&&'           reduce using rule 268
	'('            reduce using rule 268
	')'            reduce using rule 268
	','            reduce using rule 268
	'-'            reduce using rule 268
	'->'           reduce using rule 268
	'::'           reduce using rule 268
	';'            reduce using rule 268
	'assert'       reduce using rule 268
	'atomic'       reduce using rule 268
	'bit'          reduce using rule 268
	'bool'         reduce using rule 268
	'break'        reduce using rule 268
	'byte'         reduce using rule 268
	'chan'         reduce using rule 268
	'd_step'       reduce using rule 268
	'do'           reduce using rule 268
	'else'         reduce using rule 268
	'empty'        reduce using rule 268
	'enabled'      reduce using rule 268
	'false'        reduce using rule 268
	'fi'           reduce using rule 268
	'for'          reduce using rule 268
	'full'         reduce using rule 268
	'get_priority' reduce using rule 268
	'goto'         reduce using rule 268
	'hidden'       reduce using rule 268
	'if'           reduce using rule 268
	'int'          reduce using rule 268
	'len'          reduce using rule 268
	'mtype'        reduce using rule 268
	'np_'          reduce using rule 268
	'od'           reduce using rule 268
	'pc_value'     reduce using rule 268
	'print'        reduce using rule 268
	'printf'       reduce using rule 268
	'printm'       reduce using rule 268
	'run'          reduce using rule 268
	'select'       reduce using rule 268
	'set_priority' reduce using rule 268
	'short'        reduce using rule 268
	'show'         reduce using rule 268
	'skip'         reduce using rule 268
	'timeout'      reduce using rule 268
	'true'         reduce using rule 268
	'unless'       reduce using rule 268
	'unsigned'     reduce using rule 268
	'xr'           reduce using rule 268
	'xs'           reduce using rule 268
	'{'            reduce using rule 268
	'||'           reduce using rule 268
	'}'            reduce using rule 268
	'~'            reduce using rule 268
	L_integ        reduce using rule 268
	L_PIdent       reduce using rule 268
	%eof           reduce using rule 268


State 474

	AnyExpr -> '(' AnyExpr '->' AnyExpr ':' . AnyExpr ')'    (rule 182)

	'!'            shift, and enter state 86
	'('            shift, and enter state 106
	'-'            shift, and enter state 88
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'get_priority' shift, and enter state 93
	'len'          shift, and enter state 94
	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'run'          shift, and enter state 97
	'set_priority' shift, and enter state 98
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74

	Integer        goto state 77
	PIdent         goto state 72
	UnrOp          goto state 79
	Const          goto state 80
	AnyExpr        goto state 502
	VarRef         goto state 82
	Poll           goto state 83
	Name           goto state 85

State 475

	AnyExpr -> 'run' Name '(' RunArgs ')' . RunPrio     (rule 192)

	'!'            reduce using rule 261
	'!='           reduce using rule 261
	'%'            reduce using rule 261
	'&'            reduce using rule 261
	'&&'           reduce using rule 261
	'('            reduce using rule 261
	')'            reduce using rule 261
	'*'            reduce using rule 261
	'+'            reduce using rule 261
	','            reduce using rule 261
	'-'            reduce using rule 261
	'->'           reduce using rule 261
	'..'           reduce using rule 261
	'/'            reduce using rule 261
	':'            reduce using rule 261
	'::'           reduce using rule 261
	';'            reduce using rule 261
	'<'            reduce using rule 261
	'<<'           reduce using rule 261
	'<='           reduce using rule 261
	'=='           reduce using rule 261
	'>'            reduce using rule 261
	'>='           reduce using rule 261
	'>>'           reduce using rule 261
	']'            reduce using rule 261
	'^'            reduce using rule 261
	'active'       reduce using rule 261
	'assert'       reduce using rule 261
	'atomic'       reduce using rule 261
	'bit'          reduce using rule 261
	'bool'         reduce using rule 261
	'break'        reduce using rule 261
	'byte'         reduce using rule 261
	'chan'         reduce using rule 261
	'd_step'       reduce using rule 261
	'do'           reduce using rule 261
	'else'         reduce using rule 261
	'empty'        reduce using rule 261
	'enabled'      reduce using rule 261
	'false'        reduce using rule 261
	'fi'           reduce using rule 261
	'for'          reduce using rule 261
	'full'         reduce using rule 261
	'get_priority' reduce using rule 261
	'goto'         reduce using rule 261
	'hidden'       reduce using rule 261
	'if'           reduce using rule 261
	'init'         reduce using rule 261
	'inline'       reduce using rule 261
	'int'          reduce using rule 261
	'len'          reduce using rule 261
	'mtype'        reduce using rule 261
	'never'        reduce using rule 261
	'np_'          reduce using rule 261
	'od'           reduce using rule 261
	'pc_value'     reduce using rule 261
	'print'        reduce using rule 261
	'printf'       reduce using rule 261
	'printm'       reduce using rule 261
	'priority'     shift, and enter state 109
	'proctype'     reduce using rule 261
	'run'          reduce using rule 261
	'select'       reduce using rule 261
	'set_priority' reduce using rule 261
	'short'        reduce using rule 261
	'show'         reduce using rule 261
	'skip'         reduce using rule 261
	'timeout'      reduce using rule 261
	'trace'        reduce using rule 261
	'true'         reduce using rule 261
	'typedef'      reduce using rule 261
	'unless'       reduce using rule 261
	'unsigned'     reduce using rule 261
	'xr'           reduce using rule 261
	'xs'           reduce using rule 261
	'{'            reduce using rule 261
	'|'            reduce using rule 261
	'||'           reduce using rule 261
	'}'            reduce using rule 261
	'~'            reduce using rule 261
	L_integ        reduce using rule 261
	L_PIdent       reduce using rule 261
	%eof           reduce using rule 261

	Priority       goto state 107
	RunPrio        goto state 501

State 476

	AnyExpr -> 'set_priority' '(' Expr ',' Expr . ')'    (rule 194)
	Expr -> Expr . AndOr Expr                           (rule 267)

	'&&'           shift, and enter state 270
	')'            shift, and enter state 500
	'||'           shift, and enter state 284

	AndOr          goto state 355

State 477

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	Range -> Name ':' AnyExpr '..' AnyExpr .            (rule 258)

	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	')'            reduce using rule 258
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
	'/'            shift, and enter state 274
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284
	%eof           reduce using rule 258

	AndOr          goto state 265
	BinOp          goto state 319

State 478

	Receive -> VarRef '?' '<' RecvArgs '>' .            (rule 213)

	'!'            reduce using rule 213
	'('            reduce using rule 213
	')'            reduce using rule 213
	'-'            reduce using rule 213
	'->'           reduce using rule 213
	'::'           reduce using rule 213
	';'            reduce using rule 213
	'assert'       reduce using rule 213
	'atomic'       reduce using rule 213
	'bit'          reduce using rule 213
	'bool'         reduce using rule 213
	'break'        reduce using rule 213
	'byte'         reduce using rule 213
	'chan'         reduce using rule 213
	'd_step'       reduce using rule 213
	'do'           reduce using rule 213
	'else'         reduce using rule 213
	'empty'        reduce using rule 213
	'enabled'      reduce using rule 213
	'false'        reduce using rule 213
	'fi'           reduce using rule 213
	'for'          reduce using rule 213
	'full'         reduce using rule 213
	'get_priority' reduce using rule 213
	'goto'         reduce using rule 213
	'hidden'       reduce using rule 213
	'if'           reduce using rule 213
	'int'          reduce using rule 213
	'len'          reduce using rule 213
	'mtype'        reduce using rule 213
	'np_'          reduce using rule 213
	'od'           reduce using rule 213
	'pc_value'     reduce using rule 213
	'print'        reduce using rule 213
	'printf'       reduce using rule 213
	'printm'       reduce using rule 213
	'run'          reduce using rule 213
	'select'       reduce using rule 213
	'set_priority' reduce using rule 213
	'short'        reduce using rule 213
	'show'         reduce using rule 213
	'skip'         reduce using rule 213
	'timeout'      reduce using rule 213
	'true'         reduce using rule 213
	'unless'       reduce using rule 213
	'unsigned'     reduce using rule 213
	'xr'           reduce using rule 213
	'xs'           reduce using rule 213
	'{'            reduce using rule 213
	'}'            reduce using rule 213
	'~'            reduce using rule 213
	L_integ        reduce using rule 213
	L_PIdent       reduce using rule 213
	%eof           reduce using rule 213


State 479

	Poll -> VarRef '?' '[' RecvArgs ']' .               (rule 215)

	'!'            reduce using rule 215
	'!='           reduce using rule 215
	'%'            reduce using rule 215
	'&'            reduce using rule 215
	'&&'           reduce using rule 215
	'('            reduce using rule 215
	')'            reduce using rule 215
	'*'            reduce using rule 215
	'+'            reduce using rule 215
	','            reduce using rule 215
	'-'            reduce using rule 215
	'->'           reduce using rule 215
	'..'           reduce using rule 215
	'/'            reduce using rule 215
	':'            reduce using rule 215
	'::'           reduce using rule 215
	';'            reduce using rule 215
	'<'            reduce using rule 215
	'<<'           reduce using rule 215
	'<='           reduce using rule 215
	'=='           reduce using rule 215
	'>'            reduce using rule 215
	'>='           reduce using rule 215
	'>>'           reduce using rule 215
	']'            reduce using rule 215
	'^'            reduce using rule 215
	'active'       reduce using rule 215
	'assert'       reduce using rule 215
	'atomic'       reduce using rule 215
	'bit'          reduce using rule 215
	'bool'         reduce using rule 215
	'break'        reduce using rule 215
	'byte'         reduce using rule 215
	'chan'         reduce using rule 215
	'd_step'       reduce using rule 215
	'do'           reduce using rule 215
	'else'         reduce using rule 215
	'empty'        reduce using rule 215
	'enabled'      reduce using rule 215
	'false'        reduce using rule 215
	'fi'           reduce using rule 215
	'for'          reduce using rule 215
	'full'         reduce using rule 215
	'get_priority' reduce using rule 215
	'goto'         reduce using rule 215
	'hidden'       reduce using rule 215
	'if'           reduce using rule 215
	'init'         reduce using rule 215
	'inline'       reduce using rule 215
	'int'          reduce using rule 215
	'len'          reduce using rule 215
	'mtype'        reduce using rule 215
	'never'        reduce using rule 215
	'np_'          reduce using rule 215
	'od'           reduce using rule 215
	'pc_value'     reduce using rule 215
	'print'        reduce using rule 215
	'printf'       reduce using rule 215
	'printm'       reduce using rule 215
	'proctype'     reduce using rule 215
	'run'          reduce using rule 215
	'select'       reduce using rule 215
	'set_priority' reduce using rule 215
	'short'        reduce using rule 215
	'show'         reduce using rule 215
	'skip'         reduce using rule 215
	'timeout'      reduce using rule 215
	'trace'        reduce using rule 215
	'true'         reduce using rule 215
	'typedef'      reduce using rule 215
	'unless'       reduce using rule 215
	'unsigned'     reduce using rule 215
	'xr'           reduce using rule 215
	'xs'           reduce using rule 215
	'{'            reduce using rule 215
	'|'            reduce using rule 215
	'||'           reduce using rule 215
	'}'            reduce using rule 215
	'~'            reduce using rule 215
	L_integ        reduce using rule 215
	L_PIdent       reduce using rule 215
	%eof           reduce using rule 215


State 480

	AnyExpr -> Name '[' AnyExpr ']' '@' . Name          (rule 191)

	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Name           goto state 499

State 481

	Stmt -> 'for' '(' Range ')' '{' . Sequence '}'      (rule 241)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)


	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 498
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 482

	Poll -> VarRef '?' '?' '[' RecvArgs . ']'           (rule 216)

	']'            shift, and enter state 497


State 483

	Receive -> VarRef '?' '?' '<' RecvArgs . '>'        (rule 214)

	'>'            shift, and enter state 496


State 484

	ChInit -> '[' Const ']' 'of' '{' . ChType '}'       (rule 201)

	'bit'          shift, and enter state 174
	'bool'         shift, and enter state 175
	'byte'         shift, and enter state 176
	'chan'         shift, and enter state 177
	'int'          shift, and enter state 178
	'mtype'        shift, and enter state 179
	'short'        shift, and enter state 180
	L_PIdent       shift, and enter state 74

	PIdent         goto state 72
	Typename       goto state 171
	ChType         goto state 495
	Uname          goto state 173
	Name           goto state 76

State 485

	Mtype -> 'mtype' Mequals '{' Mname '}' . Msep       (rule 142)

	'!'            reduce using rule 143
	'('            reduce using rule 143
	')'            reduce using rule 143
	'-'            reduce using rule 143
	'->'           reduce using rule 143
	'::'           reduce using rule 143
	';'            shift, and enter state 229
			(reduce using rule 143)

	'active'       reduce using rule 143
	'assert'       reduce using rule 143
	'atomic'       reduce using rule 143
	'bit'          reduce using rule 143
	'bool'         reduce using rule 143
	'break'        reduce using rule 143
	'byte'         reduce using rule 143
	'chan'         reduce using rule 143
	'd_step'       reduce using rule 143
	'do'           reduce using rule 143
	'else'         reduce using rule 143
	'empty'        reduce using rule 143
	'enabled'      reduce using rule 143
	'false'        reduce using rule 143
	'fi'           reduce using rule 143
	'for'          reduce using rule 143
	'full'         reduce using rule 143
	'get_priority' reduce using rule 143
	'goto'         reduce using rule 143
	'hidden'       reduce using rule 143
	'if'           reduce using rule 143
	'init'         reduce using rule 143
	'inline'       reduce using rule 143
	'int'          reduce using rule 143
	'len'          reduce using rule 143
	'mtype'        reduce using rule 143
	'never'        reduce using rule 143
	'np_'          reduce using rule 143
	'od'           reduce using rule 143
	'pc_value'     reduce using rule 143
	'print'        reduce using rule 143
	'printf'       reduce using rule 143
	'printm'       reduce using rule 143
	'proctype'     reduce using rule 143
	'run'          reduce using rule 143
	'select'       reduce using rule 143
	'set_priority' reduce using rule 143
	'short'        reduce using rule 143
	'show'         reduce using rule 143
	'skip'         reduce using rule 143
	'timeout'      reduce using rule 143
	'trace'        reduce using rule 143
	'true'         reduce using rule 143
	'typedef'      reduce using rule 143
	'unsigned'     reduce using rule 143
	'xr'           reduce using rule 143
	'xs'           reduce using rule 143
	'{'            reduce using rule 143
	'}'            reduce using rule 143
	'~'            reduce using rule 143
	L_integ        reduce using rule 143
	L_PIdent       reduce using rule 143
	%eof           reduce using rule 143

	Msep           goto state 494

State 486

	UnsignedDecl -> 'unsigned' Name ':' Const UDclAssign .    (rule 158)

	'!'            reduce using rule 158
	'('            reduce using rule 158
	')'            reduce using rule 158
	'-'            reduce using rule 158
	'->'           reduce using rule 158
	'::'           reduce using rule 158
	';'            reduce using rule 158
	'active'       reduce using rule 158
	'assert'       reduce using rule 158
	'atomic'       reduce using rule 158
	'bit'          reduce using rule 158
	'bool'         reduce using rule 158
	'break'        reduce using rule 158
	'byte'         reduce using rule 158
	'chan'         reduce using rule 158
	'd_step'       reduce using rule 158
	'do'           reduce using rule 158
	'else'         reduce using rule 158
	'empty'        reduce using rule 158
	'enabled'      reduce using rule 158
	'false'        reduce using rule 158
	'fi'           reduce using rule 158
	'for'          reduce using rule 158
	'full'         reduce using rule 158
	'get_priority' reduce using rule 158
	'goto'         reduce using rule 158
	'hidden'       reduce using rule 158
	'if'           reduce using rule 158
	'init'         reduce using rule 158
	'inline'       reduce using rule 158
	'int'          reduce using rule 158
	'len'          reduce using rule 158
	'mtype'        reduce using rule 158
	'never'        reduce using rule 158
	'np_'          reduce using rule 158
	'od'           reduce using rule 158
	'pc_value'     reduce using rule 158
	'print'        reduce using rule 158
	'printf'       reduce using rule 158
	'printm'       reduce using rule 158
	'proctype'     reduce using rule 158
	'run'          reduce using rule 158
	'select'       reduce using rule 158
	'set_priority' reduce using rule 158
	'short'        reduce using rule 158
	'show'         reduce using rule 158
	'skip'         reduce using rule 158
	'timeout'      reduce using rule 158
	'trace'        reduce using rule 158
	'true'         reduce using rule 158
	'typedef'      reduce using rule 158
	'unsigned'     reduce using rule 158
	'xr'           reduce using rule 158
	'xs'           reduce using rule 158
	'{'            reduce using rule 158
	'}'            reduce using rule 158
	'~'            reduce using rule 158
	L_integ        reduce using rule 158
	L_PIdent       reduce using rule 158
	%eof           reduce using rule 158


State 487

	Utype -> 'typedef' Name '{' DeclList '}' . ';'      (rule 141)

	';'            shift, and enter state 493


State 488

	Init -> 'init' Ipriority '{' Sequence '}' .         (rule 136)

	'active'       reduce using rule 136
	'bit'          reduce using rule 136
	'bool'         reduce using rule 136
	'byte'         reduce using rule 136
	'chan'         reduce using rule 136
	'hidden'       reduce using rule 136
	'init'         reduce using rule 136
	'inline'       reduce using rule 136
	'int'          reduce using rule 136
	'mtype'        reduce using rule 136
	'never'        reduce using rule 136
	'proctype'     reduce using rule 136
	'short'        reduce using rule 136
	'show'         reduce using rule 136
	'trace'        reduce using rule 136
	'typedef'      reduce using rule 136
	'unsigned'     reduce using rule 136
	L_PIdent       reduce using rule 136
	%eof           reduce using rule 136


State 489

	Inline -> 'inline' Name '(' ArgList ')' . '{' Sequence '}'    (rule 127)

	'{'            shift, and enter state 492


State 490

	Proctype -> Pactive 'proctype' Name '(' PdeclList . ')' Ppriority Penabler '{' Sequence '}'    (rule 126)

	')'            shift, and enter state 491


State 491

	Proctype -> Pactive 'proctype' Name '(' PdeclList ')' . Ppriority Penabler '{' Sequence '}'    (rule 126)

	'priority'     shift, and enter state 109
	'provided'     reduce using rule 132
	'{'            reduce using rule 132

	Ppriority      goto state 507
	Priority       goto state 244

State 492

	Inline -> 'inline' Name '(' ArgList ')' '{' . Sequence '}'    (rule 127)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)


	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 506
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 493

	Utype -> 'typedef' Name '{' DeclList '}' ';' .      (rule 141)

	'active'       reduce using rule 141
	'bit'          reduce using rule 141
	'bool'         reduce using rule 141
	'byte'         reduce using rule 141
	'chan'         reduce using rule 141
	'hidden'       reduce using rule 141
	'init'         reduce using rule 141
	'inline'       reduce using rule 141
	'int'          reduce using rule 141
	'mtype'        reduce using rule 141
	'never'        reduce using rule 141
	'proctype'     reduce using rule 141
	'short'        reduce using rule 141
	'show'         reduce using rule 141
	'trace'        reduce using rule 141
	'typedef'      reduce using rule 141
	'unsigned'     reduce using rule 141
	L_PIdent       reduce using rule 141
	%eof           reduce using rule 141


State 494

	Mtype -> 'mtype' Mequals '{' Mname '}' Msep .       (rule 142)

	'!'            reduce using rule 142
	'('            reduce using rule 142
	')'            reduce using rule 142
	'-'            reduce using rule 142
	'->'           reduce using rule 142
	'::'           reduce using rule 142
	';'            reduce using rule 142
	'active'       reduce using rule 142
	'assert'       reduce using rule 142
	'atomic'       reduce using rule 142
	'bit'          reduce using rule 142
	'bool'         reduce using rule 142
	'break'        reduce using rule 142
	'byte'         reduce using rule 142
	'chan'         reduce using rule 142
	'd_step'       reduce using rule 142
	'do'           reduce using rule 142
	'else'         reduce using rule 142
	'empty'        reduce using rule 142
	'enabled'      reduce using rule 142
	'false'        reduce using rule 142
	'fi'           reduce using rule 142
	'for'          reduce using rule 142
	'full'         reduce using rule 142
	'get_priority' reduce using rule 142
	'goto'         reduce using rule 142
	'hidden'       reduce using rule 142
	'if'           reduce using rule 142
	'init'         reduce using rule 142
	'inline'       reduce using rule 142
	'int'          reduce using rule 142
	'len'          reduce using rule 142
	'mtype'        reduce using rule 142
	'never'        reduce using rule 142
	'np_'          reduce using rule 142
	'od'           reduce using rule 142
	'pc_value'     reduce using rule 142
	'print'        reduce using rule 142
	'printf'       reduce using rule 142
	'printm'       reduce using rule 142
	'proctype'     reduce using rule 142
	'run'          reduce using rule 142
	'select'       reduce using rule 142
	'set_priority' reduce using rule 142
	'short'        reduce using rule 142
	'show'         reduce using rule 142
	'skip'         reduce using rule 142
	'timeout'      reduce using rule 142
	'trace'        reduce using rule 142
	'true'         reduce using rule 142
	'typedef'      reduce using rule 142
	'unsigned'     reduce using rule 142
	'xr'           reduce using rule 142
	'xs'           reduce using rule 142
	'{'            reduce using rule 142
	'}'            reduce using rule 142
	'~'            reduce using rule 142
	L_integ        reduce using rule 142
	L_PIdent       reduce using rule 142
	%eof           reduce using rule 142


State 495

	ChInit -> '[' Const ']' 'of' '{' ChType . '}'       (rule 201)

	'}'            shift, and enter state 505


State 496

	Receive -> VarRef '?' '?' '<' RecvArgs '>' .        (rule 214)

	'!'            reduce using rule 214
	'('            reduce using rule 214
	')'            reduce using rule 214
	'-'            reduce using rule 214
	'->'           reduce using rule 214
	'::'           reduce using rule 214
	';'            reduce using rule 214
	'assert'       reduce using rule 214
	'atomic'       reduce using rule 214
	'bit'          reduce using rule 214
	'bool'         reduce using rule 214
	'break'        reduce using rule 214
	'byte'         reduce using rule 214
	'chan'         reduce using rule 214
	'd_step'       reduce using rule 214
	'do'           reduce using rule 214
	'else'         reduce using rule 214
	'empty'        reduce using rule 214
	'enabled'      reduce using rule 214
	'false'        reduce using rule 214
	'fi'           reduce using rule 214
	'for'          reduce using rule 214
	'full'         reduce using rule 214
	'get_priority' reduce using rule 214
	'goto'         reduce using rule 214
	'hidden'       reduce using rule 214
	'if'           reduce using rule 214
	'int'          reduce using rule 214
	'len'          reduce using rule 214
	'mtype'        reduce using rule 214
	'np_'          reduce using rule 214
	'od'           reduce using rule 214
	'pc_value'     reduce using rule 214
	'print'        reduce using rule 214
	'printf'       reduce using rule 214
	'printm'       reduce using rule 214
	'run'          reduce using rule 214
	'select'       reduce using rule 214
	'set_priority' reduce using rule 214
	'short'        reduce using rule 214
	'show'         reduce using rule 214
	'skip'         reduce using rule 214
	'timeout'      reduce using rule 214
	'true'         reduce using rule 214
	'unless'       reduce using rule 214
	'unsigned'     reduce using rule 214
	'xr'           reduce using rule 214
	'xs'           reduce using rule 214
	'{'            reduce using rule 214
	'}'            reduce using rule 214
	'~'            reduce using rule 214
	L_integ        reduce using rule 214
	L_PIdent       reduce using rule 214
	%eof           reduce using rule 214


State 497

	Poll -> VarRef '?' '?' '[' RecvArgs ']' .           (rule 216)

	'!'            reduce using rule 216
	'!='           reduce using rule 216
	'%'            reduce using rule 216
	'&'            reduce using rule 216
	'&&'           reduce using rule 216
	'('            reduce using rule 216
	')'            reduce using rule 216
	'*'            reduce using rule 216
	'+'            reduce using rule 216
	','            reduce using rule 216
	'-'            reduce using rule 216
	'->'           reduce using rule 216
	'..'           reduce using rule 216
	'/'            reduce using rule 216
	':'            reduce using rule 216
	'::'           reduce using rule 216
	';'            reduce using rule 216
	'<'            reduce using rule 216
	'<<'           reduce using rule 216
	'<='           reduce using rule 216
	'=='           reduce using rule 216
	'>'            reduce using rule 216
	'>='           reduce using rule 216
	'>>'           reduce using rule 216
	']'            reduce using rule 216
	'^'            reduce using rule 216
	'active'       reduce using rule 216
	'assert'       reduce using rule 216
	'atomic'       reduce using rule 216
	'bit'          reduce using rule 216
	'bool'         reduce using rule 216
	'break'        reduce using rule 216
	'byte'         reduce using rule 216
	'chan'         reduce using rule 216
	'd_step'       reduce using rule 216
	'do'           reduce using rule 216
	'else'         reduce using rule 216
	'empty'        reduce using rule 216
	'enabled'      reduce using rule 216
	'false'        reduce using rule 216
	'fi'           reduce using rule 216
	'for'          reduce using rule 216
	'full'         reduce using rule 216
	'get_priority' reduce using rule 216
	'goto'         reduce using rule 216
	'hidden'       reduce using rule 216
	'if'           reduce using rule 216
	'init'         reduce using rule 216
	'inline'       reduce using rule 216
	'int'          reduce using rule 216
	'len'          reduce using rule 216
	'mtype'        reduce using rule 216
	'never'        reduce using rule 216
	'np_'          reduce using rule 216
	'od'           reduce using rule 216
	'pc_value'     reduce using rule 216
	'print'        reduce using rule 216
	'printf'       reduce using rule 216
	'printm'       reduce using rule 216
	'proctype'     reduce using rule 216
	'run'          reduce using rule 216
	'select'       reduce using rule 216
	'set_priority' reduce using rule 216
	'short'        reduce using rule 216
	'show'         reduce using rule 216
	'skip'         reduce using rule 216
	'timeout'      reduce using rule 216
	'trace'        reduce using rule 216
	'true'         reduce using rule 216
	'typedef'      reduce using rule 216
	'unless'       reduce using rule 216
	'unsigned'     reduce using rule 216
	'xr'           reduce using rule 216
	'xs'           reduce using rule 216
	'{'            reduce using rule 216
	'|'            reduce using rule 216
	'||'           reduce using rule 216
	'}'            reduce using rule 216
	'~'            reduce using rule 216
	L_integ        reduce using rule 216
	L_PIdent       reduce using rule 216
	%eof           reduce using rule 216


State 498

	Stmt -> 'for' '(' Range ')' '{' Sequence . '}'      (rule 241)

	'}'            shift, and enter state 504


State 499

	AnyExpr -> Name '[' AnyExpr ']' '@' Name .          (rule 191)

	'!'            reduce using rule 191
	'!='           reduce using rule 191
	'%'            reduce using rule 191
	'&'            reduce using rule 191
	'&&'           reduce using rule 191
	'('            reduce using rule 191
	')'            reduce using rule 191
	'*'            reduce using rule 191
	'+'            reduce using rule 191
	','            reduce using rule 191
	'-'            reduce using rule 191
	'->'           reduce using rule 191
	'..'           reduce using rule 191
	'/'            reduce using rule 191
	':'            reduce using rule 191
	'::'           reduce using rule 191
	';'            reduce using rule 191
	'<'            reduce using rule 191
	'<<'           reduce using rule 191
	'<='           reduce using rule 191
	'=='           reduce using rule 191
	'>'            reduce using rule 191
	'>='           reduce using rule 191
	'>>'           reduce using rule 191
	']'            reduce using rule 191
	'^'            reduce using rule 191
	'active'       reduce using rule 191
	'assert'       reduce using rule 191
	'atomic'       reduce using rule 191
	'bit'          reduce using rule 191
	'bool'         reduce using rule 191
	'break'        reduce using rule 191
	'byte'         reduce using rule 191
	'chan'         reduce using rule 191
	'd_step'       reduce using rule 191
	'do'           reduce using rule 191
	'else'         reduce using rule 191
	'empty'        reduce using rule 191
	'enabled'      reduce using rule 191
	'false'        reduce using rule 191
	'fi'           reduce using rule 191
	'for'          reduce using rule 191
	'full'         reduce using rule 191
	'get_priority' reduce using rule 191
	'goto'         reduce using rule 191
	'hidden'       reduce using rule 191
	'if'           reduce using rule 191
	'init'         reduce using rule 191
	'inline'       reduce using rule 191
	'int'          reduce using rule 191
	'len'          reduce using rule 191
	'mtype'        reduce using rule 191
	'never'        reduce using rule 191
	'np_'          reduce using rule 191
	'od'           reduce using rule 191
	'pc_value'     reduce using rule 191
	'print'        reduce using rule 191
	'printf'       reduce using rule 191
	'printm'       reduce using rule 191
	'proctype'     reduce using rule 191
	'run'          reduce using rule 191
	'select'       reduce using rule 191
	'set_priority' reduce using rule 191
	'short'        reduce using rule 191
	'show'         reduce using rule 191
	'skip'         reduce using rule 191
	'timeout'      reduce using rule 191
	'trace'        reduce using rule 191
	'true'         reduce using rule 191
	'typedef'      reduce using rule 191
	'unless'       reduce using rule 191
	'unsigned'     reduce using rule 191
	'xr'           reduce using rule 191
	'xs'           reduce using rule 191
	'{'            reduce using rule 191
	'|'            reduce using rule 191
	'||'           reduce using rule 191
	'}'            reduce using rule 191
	'~'            reduce using rule 191
	L_integ        reduce using rule 191
	L_PIdent       reduce using rule 191
	%eof           reduce using rule 191


State 500

	AnyExpr -> 'set_priority' '(' Expr ',' Expr ')' .    (rule 194)

	'!'            reduce using rule 194
	'!='           reduce using rule 194
	'%'            reduce using rule 194
	'&'            reduce using rule 194
	'&&'           reduce using rule 194
	'('            reduce using rule 194
	')'            reduce using rule 194
	'*'            reduce using rule 194
	'+'            reduce using rule 194
	','            reduce using rule 194
	'-'            reduce using rule 194
	'->'           reduce using rule 194
	'..'           reduce using rule 194
	'/'            reduce using rule 194
	':'            reduce using rule 194
	'::'           reduce using rule 194
	';'            reduce using rule 194
	'<'            reduce using rule 194
	'<<'           reduce using rule 194
	'<='           reduce using rule 194
	'=='           reduce using rule 194
	'>'            reduce using rule 194
	'>='           reduce using rule 194
	'>>'           reduce using rule 194
	']'            reduce using rule 194
	'^'            reduce using rule 194
	'active'       reduce using rule 194
	'assert'       reduce using rule 194
	'atomic'       reduce using rule 194
	'bit'          reduce using rule 194
	'bool'         reduce using rule 194
	'break'        reduce using rule 194
	'byte'         reduce using rule 194
	'chan'         reduce using rule 194
	'd_step'       reduce using rule 194
	'do'           reduce using rule 194
	'else'         reduce using rule 194
	'empty'        reduce using rule 194
	'enabled'      reduce using rule 194
	'false'        reduce using rule 194
	'fi'           reduce using rule 194
	'for'          reduce using rule 194
	'full'         reduce using rule 194
	'get_priority' reduce using rule 194
	'goto'         reduce using rule 194
	'hidden'       reduce using rule 194
	'if'           reduce using rule 194
	'init'         reduce using rule 194
	'inline'       reduce using rule 194
	'int'          reduce using rule 194
	'len'          reduce using rule 194
	'mtype'        reduce using rule 194
	'never'        reduce using rule 194
	'np_'          reduce using rule 194
	'od'           reduce using rule 194
	'pc_value'     reduce using rule 194
	'print'        reduce using rule 194
	'printf'       reduce using rule 194
	'printm'       reduce using rule 194
	'proctype'     reduce using rule 194
	'run'          reduce using rule 194
	'select'       reduce using rule 194
	'set_priority' reduce using rule 194
	'short'        reduce using rule 194
	'show'         reduce using rule 194
	'skip'         reduce using rule 194
	'timeout'      reduce using rule 194
	'trace'        reduce using rule 194
	'true'         reduce using rule 194
	'typedef'      reduce using rule 194
	'unless'       reduce using rule 194
	'unsigned'     reduce using rule 194
	'xr'           reduce using rule 194
	'xs'           reduce using rule 194
	'{'            reduce using rule 194
	'|'            reduce using rule 194
	'||'           reduce using rule 194
	'}'            reduce using rule 194
	'~'            reduce using rule 194
	L_integ        reduce using rule 194
	L_PIdent       reduce using rule 194
	%eof           reduce using rule 194


State 501

	AnyExpr -> 'run' Name '(' RunArgs ')' RunPrio .     (rule 192)

	'!'            reduce using rule 192
	'!='           reduce using rule 192
	'%'            reduce using rule 192
	'&'            reduce using rule 192
	'&&'           reduce using rule 192
	'('            reduce using rule 192
	')'            reduce using rule 192
	'*'            reduce using rule 192
	'+'            reduce using rule 192
	','            reduce using rule 192
	'-'            reduce using rule 192
	'->'           reduce using rule 192
	'..'           reduce using rule 192
	'/'            reduce using rule 192
	':'            reduce using rule 192
	'::'           reduce using rule 192
	';'            reduce using rule 192
	'<'            reduce using rule 192
	'<<'           reduce using rule 192
	'<='           reduce using rule 192
	'=='           reduce using rule 192
	'>'            reduce using rule 192
	'>='           reduce using rule 192
	'>>'           reduce using rule 192
	']'            reduce using rule 192
	'^'            reduce using rule 192
	'active'       reduce using rule 192
	'assert'       reduce using rule 192
	'atomic'       reduce using rule 192
	'bit'          reduce using rule 192
	'bool'         reduce using rule 192
	'break'        reduce using rule 192
	'byte'         reduce using rule 192
	'chan'         reduce using rule 192
	'd_step'       reduce using rule 192
	'do'           reduce using rule 192
	'else'         reduce using rule 192
	'empty'        reduce using rule 192
	'enabled'      reduce using rule 192
	'false'        reduce using rule 192
	'fi'           reduce using rule 192
	'for'          reduce using rule 192
	'full'         reduce using rule 192
	'get_priority' reduce using rule 192
	'goto'         reduce using rule 192
	'hidden'       reduce using rule 192
	'if'           reduce using rule 192
	'init'         reduce using rule 192
	'inline'       reduce using rule 192
	'int'          reduce using rule 192
	'len'          reduce using rule 192
	'mtype'        reduce using rule 192
	'never'        reduce using rule 192
	'np_'          reduce using rule 192
	'od'           reduce using rule 192
	'pc_value'     reduce using rule 192
	'print'        reduce using rule 192
	'printf'       reduce using rule 192
	'printm'       reduce using rule 192
	'proctype'     reduce using rule 192
	'run'          reduce using rule 192
	'select'       reduce using rule 192
	'set_priority' reduce using rule 192
	'short'        reduce using rule 192
	'show'         reduce using rule 192
	'skip'         reduce using rule 192
	'timeout'      reduce using rule 192
	'trace'        reduce using rule 192
	'true'         reduce using rule 192
	'typedef'      reduce using rule 192
	'unless'       reduce using rule 192
	'unsigned'     reduce using rule 192
	'xr'           reduce using rule 192
	'xs'           reduce using rule 192
	'{'            reduce using rule 192
	'|'            reduce using rule 192
	'||'           reduce using rule 192
	'}'            reduce using rule 192
	'~'            reduce using rule 192
	L_integ        reduce using rule 192
	L_PIdent       reduce using rule 192
	%eof           reduce using rule 192


State 502

	AnyExpr -> AnyExpr . BinOp AnyExpr                  (rule 180)
	AnyExpr -> '(' AnyExpr '->' AnyExpr ':' AnyExpr . ')'    (rule 182)

	'!='           shift, and enter state 267
	'%'            shift, and enter state 268
	'&'            shift, and enter state 269
	'&&'           shift, and enter state 270
	')'            shift, and enter state 503
	'*'            shift, and enter state 271
	'+'            shift, and enter state 272
	'-'            shift, and enter state 273
	'/'            shift, and enter state 274
	'<'            shift, and enter state 275
	'<<'           shift, and enter state 276
	'<='           shift, and enter state 277
	'=='           shift, and enter state 278
	'>'            shift, and enter state 279
	'>='           shift, and enter state 280
	'>>'           shift, and enter state 281
	'^'            shift, and enter state 282
	'|'            shift, and enter state 283
	'||'           shift, and enter state 284

	AndOr          goto state 265
	BinOp          goto state 319

State 503

	AnyExpr -> '(' AnyExpr '->' AnyExpr ':' AnyExpr ')' .    (rule 182)

	'!'            reduce using rule 182
	'!='           reduce using rule 182
	'%'            reduce using rule 182
	'&'            reduce using rule 182
	'&&'           reduce using rule 182
	'('            reduce using rule 182
	')'            reduce using rule 182
	'*'            reduce using rule 182
	'+'            reduce using rule 182
	','            reduce using rule 182
	'-'            reduce using rule 182
	'->'           reduce using rule 182
	'..'           reduce using rule 182
	'/'            reduce using rule 182
	':'            reduce using rule 182
	'::'           reduce using rule 182
	';'            reduce using rule 182
	'<'            reduce using rule 182
	'<<'           reduce using rule 182
	'<='           reduce using rule 182
	'=='           reduce using rule 182
	'>'            reduce using rule 182
	'>='           reduce using rule 182
	'>>'           reduce using rule 182
	']'            reduce using rule 182
	'^'            reduce using rule 182
	'active'       reduce using rule 182
	'assert'       reduce using rule 182
	'atomic'       reduce using rule 182
	'bit'          reduce using rule 182
	'bool'         reduce using rule 182
	'break'        reduce using rule 182
	'byte'         reduce using rule 182
	'chan'         reduce using rule 182
	'd_step'       reduce using rule 182
	'do'           reduce using rule 182
	'else'         reduce using rule 182
	'empty'        reduce using rule 182
	'enabled'      reduce using rule 182
	'false'        reduce using rule 182
	'fi'           reduce using rule 182
	'for'          reduce using rule 182
	'full'         reduce using rule 182
	'get_priority' reduce using rule 182
	'goto'         reduce using rule 182
	'hidden'       reduce using rule 182
	'if'           reduce using rule 182
	'init'         reduce using rule 182
	'inline'       reduce using rule 182
	'int'          reduce using rule 182
	'len'          reduce using rule 182
	'mtype'        reduce using rule 182
	'never'        reduce using rule 182
	'np_'          reduce using rule 182
	'od'           reduce using rule 182
	'pc_value'     reduce using rule 182
	'print'        reduce using rule 182
	'printf'       reduce using rule 182
	'printm'       reduce using rule 182
	'proctype'     reduce using rule 182
	'run'          reduce using rule 182
	'select'       reduce using rule 182
	'set_priority' reduce using rule 182
	'short'        reduce using rule 182
	'show'         reduce using rule 182
	'skip'         reduce using rule 182
	'timeout'      reduce using rule 182
	'trace'        reduce using rule 182
	'true'         reduce using rule 182
	'typedef'      reduce using rule 182
	'unless'       reduce using rule 182
	'unsigned'     reduce using rule 182
	'xr'           reduce using rule 182
	'xs'           reduce using rule 182
	'{'            reduce using rule 182
	'|'            reduce using rule 182
	'||'           reduce using rule 182
	'}'            reduce using rule 182
	'~'            reduce using rule 182
	L_integ        reduce using rule 182
	L_PIdent       reduce using rule 182
	%eof           reduce using rule 182


State 504

	Stmt -> 'for' '(' Range ')' '{' Sequence '}' .      (rule 241)

	'!'            reduce using rule 241
	'('            reduce using rule 241
	')'            reduce using rule 241
	'-'            reduce using rule 241
	'->'           reduce using rule 241
	'::'           reduce using rule 241
	';'            reduce using rule 241
	'assert'       reduce using rule 241
	'atomic'       reduce using rule 241
	'bit'          reduce using rule 241
	'bool'         reduce using rule 241
	'break'        reduce using rule 241
	'byte'         reduce using rule 241
	'chan'         reduce using rule 241
	'd_step'       reduce using rule 241
	'do'           reduce using rule 241
	'else'         reduce using rule 241
	'empty'        reduce using rule 241
	'enabled'      reduce using rule 241
	'false'        reduce using rule 241
	'fi'           reduce using rule 241
	'for'          reduce using rule 241
	'full'         reduce using rule 241
	'get_priority' reduce using rule 241
	'goto'         reduce using rule 241
	'hidden'       reduce using rule 241
	'if'           reduce using rule 241
	'int'          reduce using rule 241
	'len'          reduce using rule 241
	'mtype'        reduce using rule 241
	'np_'          reduce using rule 241
	'od'           reduce using rule 241
	'pc_value'     reduce using rule 241
	'print'        reduce using rule 241
	'printf'       reduce using rule 241
	'printm'       reduce using rule 241
	'run'          reduce using rule 241
	'select'       reduce using rule 241
	'set_priority' reduce using rule 241
	'short'        reduce using rule 241
	'show'         reduce using rule 241
	'skip'         reduce using rule 241
	'timeout'      reduce using rule 241
	'true'         reduce using rule 241
	'unless'       reduce using rule 241
	'unsigned'     reduce using rule 241
	'xr'           reduce using rule 241
	'xs'           reduce using rule 241
	'{'            reduce using rule 241
	'}'            reduce using rule 241
	'~'            reduce using rule 241
	L_integ        reduce using rule 241
	L_PIdent       reduce using rule 241
	%eof           reduce using rule 241


State 505

	ChInit -> '[' Const ']' 'of' '{' ChType '}' .       (rule 201)

	'!'            reduce using rule 201
	'('            reduce using rule 201
	')'            reduce using rule 201
	','            reduce using rule 201
	'-'            reduce using rule 201
	'->'           reduce using rule 201
	'::'           reduce using rule 201
	';'            reduce using rule 201
	'active'       reduce using rule 201
	'assert'       reduce using rule 201
	'atomic'       reduce using rule 201
	'bit'          reduce using rule 201
	'bool'         reduce using rule 201
	'break'        reduce using rule 201
	'byte'         reduce using rule 201
	'chan'         reduce using rule 201
	'd_step'       reduce using rule 201
	'do'           reduce using rule 201
	'else'         reduce using rule 201
	'empty'        reduce using rule 201
	'enabled'      reduce using rule 201
	'false'        reduce using rule 201
	'fi'           reduce using rule 201
	'for'          reduce using rule 201
	'full'         reduce using rule 201
	'get_priority' reduce using rule 201
	'goto'         reduce using rule 201
	'hidden'       reduce using rule 201
	'if'           reduce using rule 201
	'init'         reduce using rule 201
	'inline'       reduce using rule 201
	'int'          reduce using rule 201
	'len'          reduce using rule 201
	'mtype'        reduce using rule 201
	'never'        reduce using rule 201
	'np_'          reduce using rule 201
	'od'           reduce using rule 201
	'pc_value'     reduce using rule 201
	'print'        reduce using rule 201
	'printf'       reduce using rule 201
	'printm'       reduce using rule 201
	'proctype'     reduce using rule 201
	'run'          reduce using rule 201
	'select'       reduce using rule 201
	'set_priority' reduce using rule 201
	'short'        reduce using rule 201
	'show'         reduce using rule 201
	'skip'         reduce using rule 201
	'timeout'      reduce using rule 201
	'trace'        reduce using rule 201
	'true'         reduce using rule 201
	'typedef'      reduce using rule 201
	'unsigned'     reduce using rule 201
	'xr'           reduce using rule 201
	'xs'           reduce using rule 201
	'{'            reduce using rule 201
	'}'            reduce using rule 201
	'~'            reduce using rule 201
	L_integ        reduce using rule 201
	L_PIdent       reduce using rule 201
	%eof           reduce using rule 201


State 506

	Inline -> 'inline' Name '(' ArgList ')' '{' Sequence . '}'    (rule 127)

	'}'            shift, and enter state 509


State 507

	Proctype -> Pactive 'proctype' Name '(' PdeclList ')' Ppriority . Penabler '{' Sequence '}'    (rule 126)

	'provided'     shift, and enter state 209
	'{'            reduce using rule 134

	Penabler       goto state 508
	Enabler        goto state 242

State 508

	Proctype -> Pactive 'proctype' Name '(' PdeclList ')' Ppriority Penabler . '{' Sequence '}'    (rule 126)

	'{'            shift, and enter state 510


State 509

	Inline -> 'inline' Name '(' ArgList ')' '{' Sequence '}' .    (rule 127)

	'active'       reduce using rule 127
	'bit'          reduce using rule 127
	'bool'         reduce using rule 127
	'byte'         reduce using rule 127
	'chan'         reduce using rule 127
	'hidden'       reduce using rule 127
	'init'         reduce using rule 127
	'inline'       reduce using rule 127
	'int'          reduce using rule 127
	'mtype'        reduce using rule 127
	'never'        reduce using rule 127
	'proctype'     reduce using rule 127
	'short'        reduce using rule 127
	'show'         reduce using rule 127
	'trace'        reduce using rule 127
	'typedef'      reduce using rule 127
	'unsigned'     reduce using rule 127
	L_PIdent       reduce using rule 127
	%eof           reduce using rule 127


State 510

	Proctype -> Pactive 'proctype' Name '(' PdeclList ')' Ppriority Penabler '{' . Sequence '}'    (rule 126)

	'!'            shift, and enter state 86
	'('            shift, and enter state 87
	'-'            shift, and enter state 88
	'assert'       shift, and enter state 122
	'atomic'       shift, and enter state 123
	'bit'          reduce using rule 156
	'bool'         reduce using rule 156
	'break'        shift, and enter state 124
	'byte'         reduce using rule 156
	'chan'         reduce using rule 156
	'd_step'       shift, and enter state 125
	'do'           shift, and enter state 126
	'else'         shift, and enter state 127
	'empty'        shift, and enter state 89
	'enabled'      shift, and enter state 90
	'false'        shift, and enter state 91
	'for'          shift, and enter state 128
	'full'         shift, and enter state 92
	'get_priority' shift, and enter state 93
	'goto'         shift, and enter state 129
	'hidden'       shift, and enter state 199
	'if'           shift, and enter state 130
	'int'          reduce using rule 156
	'len'          shift, and enter state 94
	'mtype'        shift, and enter state 200
			(reduce using rule 156)

	'np_'          shift, and enter state 95
	'pc_value'     shift, and enter state 96
	'print'        shift, and enter state 131
	'printf'       shift, and enter state 132
	'printm'       shift, and enter state 133
	'run'          shift, and enter state 97
	'select'       shift, and enter state 134
	'set_priority' shift, and enter state 98
	'short'        reduce using rule 156
	'show'         shift, and enter state 201
	'skip'         shift, and enter state 99
	'timeout'      shift, and enter state 100
	'true'         shift, and enter state 101
	'unsigned'     reduce using rule 156
	'xr'           shift, and enter state 202
	'xs'           shift, and enter state 203
	'{'            shift, and enter state 135
	'~'            shift, and enter state 102
	L_integ        shift, and enter state 71
	L_PIdent       shift, and enter state 74
			(reduce using rule 156)


	Integer        goto state 77
	PIdent         goto state 72
	Visible        goto state 192
	ChanPoll       goto state 78
	UnrOp          goto state 79
	Const          goto state 80
	PrintType      goto state 114
	Mtype          goto state 193
	DeclList       goto state 194
	Decl           goto state 195
	DeclVisible    goto state 196
	Sequence       goto state 511
	Step           goto state 207
	AnyExpr        goto state 81
	VarRef         goto state 115
	Send           goto state 116
	Receive        goto state 117
	Poll           goto state 83
	Assign         goto state 118
	Stmt           goto state 198
	Expr           goto state 120
	Name           goto state 121

State 511

	Proctype -> Pactive 'proctype' Name '(' PdeclList ')' Ppriority Penabler '{' Sequence . '}'    (rule 126)

	'}'            shift, and enter state 512


State 512

	Proctype -> Pactive 'proctype' Name '(' PdeclList ')' Ppriority Penabler '{' Sequence '}' .    (rule 126)

	'active'       reduce using rule 126
	'bit'          reduce using rule 126
	'bool'         reduce using rule 126
	'byte'         reduce using rule 126
	'chan'         reduce using rule 126
	'hidden'       reduce using rule 126
	'init'         reduce using rule 126
	'inline'       reduce using rule 126
	'int'          reduce using rule 126
	'mtype'        reduce using rule 126
	'never'        reduce using rule 126
	'proctype'     reduce using rule 126
	'short'        reduce using rule 126
	'show'         reduce using rule 126
	'trace'        reduce using rule 126
	'typedef'      reduce using rule 126
	'unsigned'     reduce using rule 126
	L_PIdent       reduce using rule 126
	%eof           reduce using rule 126


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 271
Number of terminals: 94
Number of non-terminals: 143
Number of states: 513
