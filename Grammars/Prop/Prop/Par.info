-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from Prop/Par.y
-----------------------------------------------------------------------------

state 49 contains 1 shift/reduce conflicts.
state 50 contains 1 shift/reduce conflicts.
state 51 contains 1 shift/reduce conflicts.
state 52 contains 1 shift/reduce conflicts.
state 53 contains 1 shift/reduce conflicts.
state 54 contains 2 shift/reduce conflicts.
state 55 contains 2 shift/reduce conflicts.
state 56 contains 2 shift/reduce conflicts.
state 57 contains 2 shift/reduce conflicts.
state 58 contains 2 shift/reduce conflicts.
state 59 contains 3 shift/reduce conflicts.
state 61 contains 6 shift/reduce conflicts.
state 109 contains 1 shift/reduce conflicts.
state 111 contains 2 reduce/reduce conflicts.
state 133 contains 1 shift/reduce conflicts.
state 140 contains 6 shift/reduce conflicts.
state 141 contains 6 shift/reduce conflicts.
state 156 contains 3 shift/reduce conflicts.
state 157 contains 3 shift/reduce conflicts.
state 158 contains 2 shift/reduce conflicts.
state 159 contains 2 shift/reduce conflicts.
state 160 contains 2 shift/reduce conflicts.
state 161 contains 2 shift/reduce conflicts.
state 162 contains 2 shift/reduce conflicts.
state 163 contains 2 shift/reduce conflicts.
state 164 contains 2 shift/reduce conflicts.
state 165 contains 2 shift/reduce conflicts.
state 166 contains 2 shift/reduce conflicts.
state 167 contains 1 shift/reduce conflicts.
state 168 contains 1 shift/reduce conflicts.
state 169 contains 1 shift/reduce conflicts.
state 170 contains 1 shift/reduce conflicts.
state 171 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pListExp -> ListExp                         (0)
	%start_pExp -> Exp                                 (1)
	%start_pExp2 -> Exp2                               (2)
	%start_pExp3 -> Exp3                               (3)
	%start_pExp4 -> Exp4                               (4)
	%start_pExp5 -> Exp5                               (5)
	%start_pExp6 -> Exp6                               (6)
	%start_pExp7 -> Exp7                               (7)
	%start_pExp8 -> Exp8                               (8)
	%start_pExp9 -> Exp9                               (9)
	%start_pExp10 -> Exp10                             (10)
	%start_pExp11 -> Exp11                             (11)
	%start_pExp12 -> Exp12                             (12)
	%start_pExp13 -> Exp13                             (13)
	%start_pExp14 -> Exp14                             (14)
	%start_pExp15 -> Exp15                             (15)
	%start_pQuant -> Quant                             (16)
	%start_pListCIdent -> ListCIdent                   (17)
	%start_pConstant -> Constant                       (18)
	%start_pExp1 -> Exp1                               (19)
	%start_pUnary_operator -> Unary_operator           (20)
	Char -> L_charac                                   (21)
	Double -> L_doubl                                  (22)
	Integer -> L_integ                                 (23)
	String -> L_quoted                                 (24)
	Unsigned -> L_Unsigned                             (25)
	Long -> L_Long                                     (26)
	UnsignedLong -> L_UnsignedLong                     (27)
	Hexadecimal -> L_Hexadecimal                       (28)
	HexUnsigned -> L_HexUnsigned                       (29)
	HexLong -> L_HexLong                               (30)
	HexUnsLong -> L_HexUnsLong                         (31)
	Octal -> L_Octal                                   (32)
	OctalUnsigned -> L_OctalUnsigned                   (33)
	OctalLong -> L_OctalLong                           (34)
	OctalUnsLong -> L_OctalUnsLong                     (35)
	CDouble -> L_CDouble                               (36)
	CFloat -> L_CFloat                                 (37)
	CLongDouble -> L_CLongDouble                       (38)
	CIdent -> L_CIdent                                 (39)
	ListExp -> Exp ListExp                             (40)
	ListExp ->                                         (41)
	ListExp -> Exp                                     (42)
	ListExp -> Exp ',' ListExp                         (43)
	Exp -> Exp1 '==>' Exp2                             (44)
	Exp -> Exp1                                        (45)
	Exp2 -> Exp2 '||' Exp3                             (46)
	Exp2 -> Exp3                                       (47)
	Exp3 -> Exp3 '&&' Exp4                             (48)
	Exp3 -> Exp4                                       (49)
	Exp4 -> Exp4 '|' Exp5                              (50)
	Exp4 -> Exp5                                       (51)
	Exp5 -> Exp5 '^' Exp6                              (52)
	Exp5 -> Exp6                                       (53)
	Exp6 -> Exp6 '&' Exp7                              (54)
	Exp6 -> Exp7                                       (55)
	Exp7 -> Exp7 '==' Exp8                             (56)
	Exp7 -> Exp7 '!=' Exp8                             (57)
	Exp7 -> Exp8                                       (58)
	Exp8 -> Exp8 '<' Exp9                              (59)
	Exp8 -> Exp8 '>' Exp9                              (60)
	Exp8 -> Exp9                                       (61)
	Exp9 -> Exp9 '<=' Exp10                            (62)
	Exp9 -> Exp9 '>=' Exp10                            (63)
	Exp9 -> Exp10                                      (64)
	Exp10 -> Exp10 '<<' Exp11                          (65)
	Exp10 -> Exp10 '>>' Exp11                          (66)
	Exp10 -> Exp11                                     (67)
	Exp11 -> Exp11 '+' Exp12                           (68)
	Exp11 -> Exp11 '-' Exp12                           (69)
	Exp11 -> Exp12                                     (70)
	Exp12 -> Exp12 '*' Exp13                           (71)
	Exp12 -> Exp12 '/' Exp13                           (72)
	Exp12 -> Exp12 '%' Exp13                           (73)
	Exp12 -> Exp13                                     (74)
	Exp13 -> '++' Exp14                                (75)
	Exp13 -> '--' Exp14                                (76)
	Exp13 -> Unary_operator Exp13                      (77)
	Exp13 -> Exp14                                     (78)
	Exp14 -> Exp14 '[' Exp ']'                         (79)
	Exp14 -> Exp14 '(' ')'                             (80)
	Exp14 -> Exp14 '(' ListExp ')'                     (81)
	Exp14 -> Exp14 '.' CIdent                          (82)
	Exp14 -> Exp14 '->' CIdent                         (83)
	Exp14 -> Exp14 '++'                                (84)
	Exp14 -> Exp14 '--'                                (85)
	Exp14 -> Exp15                                     (86)
	Exp15 -> Quant ListCIdent '|' Exp                  (87)
	Exp15 -> CIdent                                    (88)
	Exp15 -> Constant                                  (89)
	Exp15 -> String                                    (90)
	Exp15 -> '(' Exp ')'                               (91)
	Quant -> 'exists'                                  (92)
	Quant -> 'forall'                                  (93)
	ListCIdent -> CIdent                               (94)
	ListCIdent -> CIdent ',' ListCIdent                (95)
	Constant -> Double                                 (96)
	Constant -> Char                                   (97)
	Constant -> Unsigned                               (98)
	Constant -> Long                                   (99)
	Constant -> UnsignedLong                           (100)
	Constant -> Hexadecimal                            (101)
	Constant -> HexUnsigned                            (102)
	Constant -> HexLong                                (103)
	Constant -> HexUnsLong                             (104)
	Constant -> Octal                                  (105)
	Constant -> OctalUnsigned                          (106)
	Constant -> OctalLong                              (107)
	Constant -> OctalUnsLong                           (108)
	Constant -> CDouble                                (109)
	Constant -> CFloat                                 (110)
	Constant -> CLongDouble                            (111)
	Constant -> Integer                                (112)
	Exp1 -> Exp2                                       (113)
	Unary_operator -> '&'                              (114)
	Unary_operator -> '*'                              (115)
	Unary_operator -> '+'                              (116)
	Unary_operator -> '-'                              (117)
	Unary_operator -> '~'                              (118)
	Unary_operator -> '!'                              (119)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&'            { PT _ (TS _ 4) }
	'&&'           { PT _ (TS _ 5) }
	'('            { PT _ (TS _ 6) }
	')'            { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'->'           { PT _ (TS _ 14) }
	'.'            { PT _ (TS _ 15) }
	'/'            { PT _ (TS _ 16) }
	'<'            { PT _ (TS _ 17) }
	'<<'           { PT _ (TS _ 18) }
	'<='           { PT _ (TS _ 19) }
	'=='           { PT _ (TS _ 20) }
	'==>'          { PT _ (TS _ 21) }
	'>'            { PT _ (TS _ 22) }
	'>='           { PT _ (TS _ 23) }
	'>>'           { PT _ (TS _ 24) }
	'['            { PT _ (TS _ 25) }
	']'            { PT _ (TS _ 26) }
	'^'            { PT _ (TS _ 27) }
	'exists'       { PT _ (TS _ 28) }
	'forall'       { PT _ (TS _ 29) }
	'|'            { PT _ (TS _ 30) }
	'||'           { PT _ (TS _ 31) }
	'~'            { PT _ (TS _ 32) }
	L_charac       { PT _ (TC $$) }
	L_doubl        { PT _ (TD $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }
	L_Unsigned     { PT _ (T_Unsigned $$) }
	L_Long         { PT _ (T_Long $$) }
	L_UnsignedLong { PT _ (T_UnsignedLong $$) }
	L_Hexadecimal  { PT _ (T_Hexadecimal $$) }
	L_HexUnsigned  { PT _ (T_HexUnsigned $$) }
	L_HexLong      { PT _ (T_HexLong $$) }
	L_HexUnsLong   { PT _ (T_HexUnsLong $$) }
	L_Octal        { PT _ (T_Octal $$) }
	L_OctalUnsigned{ PT _ (T_OctalUnsigned $$) }
	L_OctalLong    { PT _ (T_OctalLong $$) }
	L_OctalUnsLong { PT _ (T_OctalUnsLong $$) }
	L_CDouble      { PT _ (T_CDouble $$) }
	L_CFloat       { PT _ (T_CFloat $$) }
	L_CLongDouble  { PT _ (T_CLongDouble $$) }
	L_CIdent       { PT _ (T_CIdent $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pListExp rule  0
	%start_pExp     rule  1
	%start_pExp2    rule  2
	%start_pExp3    rule  3
	%start_pExp4    rule  4
	%start_pExp5    rule  5
	%start_pExp6    rule  6
	%start_pExp7    rule  7
	%start_pExp8    rule  8
	%start_pExp9    rule  9
	%start_pExp10   rule  10
	%start_pExp11   rule  11
	%start_pExp12   rule  12
	%start_pExp13   rule  13
	%start_pExp14   rule  14
	%start_pExp15   rule  15
	%start_pQuant   rule  16
	%start_pListCIdent rule  17
	%start_pConstant rule  18
	%start_pExp1    rule  19
	%start_pUnary_operator rule  20
	Char            rule  21
	Double          rule  22
	Integer         rule  23
	String          rule  24
	Unsigned        rule  25
	Long            rule  26
	UnsignedLong    rule  27
	Hexadecimal     rule  28
	HexUnsigned     rule  29
	HexLong         rule  30
	HexUnsLong      rule  31
	Octal           rule  32
	OctalUnsigned   rule  33
	OctalLong       rule  34
	OctalUnsLong    rule  35
	CDouble         rule  36
	CFloat          rule  37
	CLongDouble     rule  38
	CIdent          rule  39
	ListExp         rules 40, 41, 42, 43
	Exp             rules 44, 45
	Exp2            rules 46, 47
	Exp3            rules 48, 49
	Exp4            rules 50, 51
	Exp5            rules 52, 53
	Exp6            rules 54, 55
	Exp7            rules 56, 57, 58
	Exp8            rules 59, 60, 61
	Exp9            rules 62, 63, 64
	Exp10           rules 65, 66, 67
	Exp11           rules 68, 69, 70
	Exp12           rules 71, 72, 73, 74
	Exp13           rules 75, 76, 77, 78
	Exp14           rules 79, 80, 81, 82, 83, 84, 85, 86
	Exp15           rules 87, 88, 89, 90, 91
	Quant           rules 92, 93
	ListCIdent      rules 94, 95
	Constant        rules 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112
	Exp1            rule  113
	Unary_operator  rules 114, 115, 116, 117, 118, 119

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pListExp -> . ListExp                        (rule 0)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89
	%eof           reduce using rule 41

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	ListExp        goto state 110
	Exp            goto state 111
	Exp2           goto state 49
	Exp3           goto state 50
	Exp4           goto state 51
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Exp1           goto state 109
	Unary_operator goto state 66

State 1

	%start_pExp -> . Exp                                (rule 1)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp            goto state 108
	Exp2           goto state 49
	Exp3           goto state 50
	Exp4           goto state 51
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Exp1           goto state 109
	Unary_operator goto state 66

State 2

	%start_pExp2 -> . Exp2                              (rule 2)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp2           goto state 107
	Exp3           goto state 50
	Exp4           goto state 51
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 3

	%start_pExp3 -> . Exp3                              (rule 3)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp3           goto state 106
	Exp4           goto state 51
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 4

	%start_pExp4 -> . Exp4                              (rule 4)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp4           goto state 105
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 5

	%start_pExp5 -> . Exp5                              (rule 5)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp5           goto state 104
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 6

	%start_pExp6 -> . Exp6                              (rule 6)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp6           goto state 103
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 7

	%start_pExp7 -> . Exp7                              (rule 7)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp7           goto state 102
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 8

	%start_pExp8 -> . Exp8                              (rule 8)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp8           goto state 101
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 9

	%start_pExp9 -> . Exp9                              (rule 9)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp9           goto state 100
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 10

	%start_pExp10 -> . Exp10                            (rule 10)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp10          goto state 99
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 11

	%start_pExp11 -> . Exp11                            (rule 11)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp11          goto state 98
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 12

	%start_pExp12 -> . Exp12                            (rule 12)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp12          goto state 97
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 13

	%start_pExp13 -> . Exp13                            (rule 13)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp13          goto state 96
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 14

	%start_pExp14 -> . Exp14                            (rule 14)

	'('            shift, and enter state 67
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp14          goto state 95
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64

State 15

	%start_pExp15 -> . Exp15                            (rule 15)

	'('            shift, and enter state 67
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp15          goto state 94
	Quant          goto state 63
	Constant       goto state 64

State 16

	%start_pQuant -> . Quant                            (rule 16)

	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71

	Quant          goto state 93

State 17

	%start_pListCIdent -> . ListCIdent                  (rule 17)

	L_CIdent       shift, and enter state 89

	CIdent         goto state 91
	ListCIdent     goto state 92

State 18

	%start_pConstant -> . Constant                      (rule 18)

	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	Constant       goto state 90

State 19

	%start_pExp1 -> . Exp1                              (rule 19)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp2           goto state 49
	Exp3           goto state 50
	Exp4           goto state 51
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Exp1           goto state 65
	Unary_operator goto state 66

State 20

	%start_pUnary_operator -> . Unary_operator          (rule 20)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'-'            shift, and enter state 28
	'~'            shift, and enter state 29

	Unary_operator goto state 23

State 21

	Char -> . L_charac                                  (rule 21)

	L_charac       shift, and enter state 22


State 22

	Char -> L_charac .                                  (rule 21)

	'!'            reduce using rule 21
	'!='           reduce using rule 21
	'%'            reduce using rule 21
	'&'            reduce using rule 21
	'&&'           reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	'*'            reduce using rule 21
	'+'            reduce using rule 21
	'++'           reduce using rule 21
	','            reduce using rule 21
	'-'            reduce using rule 21
	'--'           reduce using rule 21
	'->'           reduce using rule 21
	'.'            reduce using rule 21
	'/'            reduce using rule 21
	'<'            reduce using rule 21
	'<<'           reduce using rule 21
	'<='           reduce using rule 21
	'=='           reduce using rule 21
	'==>'          reduce using rule 21
	'>'            reduce using rule 21
	'>='           reduce using rule 21
	'>>'           reduce using rule 21
	'['            reduce using rule 21
	']'            reduce using rule 21
	'^'            reduce using rule 21
	'exists'       reduce using rule 21
	'forall'       reduce using rule 21
	'|'            reduce using rule 21
	'||'           reduce using rule 21
	'~'            reduce using rule 21
	L_charac       reduce using rule 21
	L_doubl        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21
	L_Unsigned     reduce using rule 21
	L_Long         reduce using rule 21
	L_UnsignedLong reduce using rule 21
	L_Hexadecimal  reduce using rule 21
	L_HexUnsigned  reduce using rule 21
	L_HexLong      reduce using rule 21
	L_HexUnsLong   reduce using rule 21
	L_Octal        reduce using rule 21
	L_OctalUnsignedreduce using rule 21
	L_OctalLong    reduce using rule 21
	L_OctalUnsLong reduce using rule 21
	L_CDouble      reduce using rule 21
	L_CFloat       reduce using rule 21
	L_CLongDouble  reduce using rule 21
	L_CIdent       reduce using rule 21
	%eof           reduce using rule 21


State 23

	%start_pUnary_operator -> Unary_operator .          (rule 20)

	%eof           accept


State 24

	Unary_operator -> '!' .                             (rule 119)

	'!'            reduce using rule 119
	'&'            reduce using rule 119
	'('            reduce using rule 119
	'*'            reduce using rule 119
	'+'            reduce using rule 119
	'++'           reduce using rule 119
	'-'            reduce using rule 119
	'--'           reduce using rule 119
	'exists'       reduce using rule 119
	'forall'       reduce using rule 119
	'~'            reduce using rule 119
	L_charac       reduce using rule 119
	L_doubl        reduce using rule 119
	L_integ        reduce using rule 119
	L_quoted       reduce using rule 119
	L_Unsigned     reduce using rule 119
	L_Long         reduce using rule 119
	L_UnsignedLong reduce using rule 119
	L_Hexadecimal  reduce using rule 119
	L_HexUnsigned  reduce using rule 119
	L_HexLong      reduce using rule 119
	L_HexUnsLong   reduce using rule 119
	L_Octal        reduce using rule 119
	L_OctalUnsignedreduce using rule 119
	L_OctalLong    reduce using rule 119
	L_OctalUnsLong reduce using rule 119
	L_CDouble      reduce using rule 119
	L_CFloat       reduce using rule 119
	L_CLongDouble  reduce using rule 119
	L_CIdent       reduce using rule 119
	%eof           reduce using rule 119


State 25

	Unary_operator -> '&' .                             (rule 114)

	'!'            reduce using rule 114
	'&'            reduce using rule 114
	'('            reduce using rule 114
	'*'            reduce using rule 114
	'+'            reduce using rule 114
	'++'           reduce using rule 114
	'-'            reduce using rule 114
	'--'           reduce using rule 114
	'exists'       reduce using rule 114
	'forall'       reduce using rule 114
	'~'            reduce using rule 114
	L_charac       reduce using rule 114
	L_doubl        reduce using rule 114
	L_integ        reduce using rule 114
	L_quoted       reduce using rule 114
	L_Unsigned     reduce using rule 114
	L_Long         reduce using rule 114
	L_UnsignedLong reduce using rule 114
	L_Hexadecimal  reduce using rule 114
	L_HexUnsigned  reduce using rule 114
	L_HexLong      reduce using rule 114
	L_HexUnsLong   reduce using rule 114
	L_Octal        reduce using rule 114
	L_OctalUnsignedreduce using rule 114
	L_OctalLong    reduce using rule 114
	L_OctalUnsLong reduce using rule 114
	L_CDouble      reduce using rule 114
	L_CFloat       reduce using rule 114
	L_CLongDouble  reduce using rule 114
	L_CIdent       reduce using rule 114
	%eof           reduce using rule 114


State 26

	Unary_operator -> '*' .                             (rule 115)

	'!'            reduce using rule 115
	'&'            reduce using rule 115
	'('            reduce using rule 115
	'*'            reduce using rule 115
	'+'            reduce using rule 115
	'++'           reduce using rule 115
	'-'            reduce using rule 115
	'--'           reduce using rule 115
	'exists'       reduce using rule 115
	'forall'       reduce using rule 115
	'~'            reduce using rule 115
	L_charac       reduce using rule 115
	L_doubl        reduce using rule 115
	L_integ        reduce using rule 115
	L_quoted       reduce using rule 115
	L_Unsigned     reduce using rule 115
	L_Long         reduce using rule 115
	L_UnsignedLong reduce using rule 115
	L_Hexadecimal  reduce using rule 115
	L_HexUnsigned  reduce using rule 115
	L_HexLong      reduce using rule 115
	L_HexUnsLong   reduce using rule 115
	L_Octal        reduce using rule 115
	L_OctalUnsignedreduce using rule 115
	L_OctalLong    reduce using rule 115
	L_OctalUnsLong reduce using rule 115
	L_CDouble      reduce using rule 115
	L_CFloat       reduce using rule 115
	L_CLongDouble  reduce using rule 115
	L_CIdent       reduce using rule 115
	%eof           reduce using rule 115


State 27

	Unary_operator -> '+' .                             (rule 116)

	'!'            reduce using rule 116
	'&'            reduce using rule 116
	'('            reduce using rule 116
	'*'            reduce using rule 116
	'+'            reduce using rule 116
	'++'           reduce using rule 116
	'-'            reduce using rule 116
	'--'           reduce using rule 116
	'exists'       reduce using rule 116
	'forall'       reduce using rule 116
	'~'            reduce using rule 116
	L_charac       reduce using rule 116
	L_doubl        reduce using rule 116
	L_integ        reduce using rule 116
	L_quoted       reduce using rule 116
	L_Unsigned     reduce using rule 116
	L_Long         reduce using rule 116
	L_UnsignedLong reduce using rule 116
	L_Hexadecimal  reduce using rule 116
	L_HexUnsigned  reduce using rule 116
	L_HexLong      reduce using rule 116
	L_HexUnsLong   reduce using rule 116
	L_Octal        reduce using rule 116
	L_OctalUnsignedreduce using rule 116
	L_OctalLong    reduce using rule 116
	L_OctalUnsLong reduce using rule 116
	L_CDouble      reduce using rule 116
	L_CFloat       reduce using rule 116
	L_CLongDouble  reduce using rule 116
	L_CIdent       reduce using rule 116
	%eof           reduce using rule 116


State 28

	Unary_operator -> '-' .                             (rule 117)

	'!'            reduce using rule 117
	'&'            reduce using rule 117
	'('            reduce using rule 117
	'*'            reduce using rule 117
	'+'            reduce using rule 117
	'++'           reduce using rule 117
	'-'            reduce using rule 117
	'--'           reduce using rule 117
	'exists'       reduce using rule 117
	'forall'       reduce using rule 117
	'~'            reduce using rule 117
	L_charac       reduce using rule 117
	L_doubl        reduce using rule 117
	L_integ        reduce using rule 117
	L_quoted       reduce using rule 117
	L_Unsigned     reduce using rule 117
	L_Long         reduce using rule 117
	L_UnsignedLong reduce using rule 117
	L_Hexadecimal  reduce using rule 117
	L_HexUnsigned  reduce using rule 117
	L_HexLong      reduce using rule 117
	L_HexUnsLong   reduce using rule 117
	L_Octal        reduce using rule 117
	L_OctalUnsignedreduce using rule 117
	L_OctalLong    reduce using rule 117
	L_OctalUnsLong reduce using rule 117
	L_CDouble      reduce using rule 117
	L_CFloat       reduce using rule 117
	L_CLongDouble  reduce using rule 117
	L_CIdent       reduce using rule 117
	%eof           reduce using rule 117


State 29

	Unary_operator -> '~' .                             (rule 118)

	'!'            reduce using rule 118
	'&'            reduce using rule 118
	'('            reduce using rule 118
	'*'            reduce using rule 118
	'+'            reduce using rule 118
	'++'           reduce using rule 118
	'-'            reduce using rule 118
	'--'           reduce using rule 118
	'exists'       reduce using rule 118
	'forall'       reduce using rule 118
	'~'            reduce using rule 118
	L_charac       reduce using rule 118
	L_doubl        reduce using rule 118
	L_integ        reduce using rule 118
	L_quoted       reduce using rule 118
	L_Unsigned     reduce using rule 118
	L_Long         reduce using rule 118
	L_UnsignedLong reduce using rule 118
	L_Hexadecimal  reduce using rule 118
	L_HexUnsigned  reduce using rule 118
	L_HexLong      reduce using rule 118
	L_HexUnsLong   reduce using rule 118
	L_Octal        reduce using rule 118
	L_OctalUnsignedreduce using rule 118
	L_OctalLong    reduce using rule 118
	L_OctalUnsLong reduce using rule 118
	L_CDouble      reduce using rule 118
	L_CFloat       reduce using rule 118
	L_CLongDouble  reduce using rule 118
	L_CIdent       reduce using rule 118
	%eof           reduce using rule 118


State 30

	Constant -> Char .                                  (rule 97)

	'!'            reduce using rule 97
	'!='           reduce using rule 97
	'%'            reduce using rule 97
	'&'            reduce using rule 97
	'&&'           reduce using rule 97
	'('            reduce using rule 97
	')'            reduce using rule 97
	'*'            reduce using rule 97
	'+'            reduce using rule 97
	'++'           reduce using rule 97
	','            reduce using rule 97
	'-'            reduce using rule 97
	'--'           reduce using rule 97
	'->'           reduce using rule 97
	'.'            reduce using rule 97
	'/'            reduce using rule 97
	'<'            reduce using rule 97
	'<<'           reduce using rule 97
	'<='           reduce using rule 97
	'=='           reduce using rule 97
	'==>'          reduce using rule 97
	'>'            reduce using rule 97
	'>='           reduce using rule 97
	'>>'           reduce using rule 97
	'['            reduce using rule 97
	']'            reduce using rule 97
	'^'            reduce using rule 97
	'exists'       reduce using rule 97
	'forall'       reduce using rule 97
	'|'            reduce using rule 97
	'||'           reduce using rule 97
	'~'            reduce using rule 97
	L_charac       reduce using rule 97
	L_doubl        reduce using rule 97
	L_integ        reduce using rule 97
	L_quoted       reduce using rule 97
	L_Unsigned     reduce using rule 97
	L_Long         reduce using rule 97
	L_UnsignedLong reduce using rule 97
	L_Hexadecimal  reduce using rule 97
	L_HexUnsigned  reduce using rule 97
	L_HexLong      reduce using rule 97
	L_HexUnsLong   reduce using rule 97
	L_Octal        reduce using rule 97
	L_OctalUnsignedreduce using rule 97
	L_OctalLong    reduce using rule 97
	L_OctalUnsLong reduce using rule 97
	L_CDouble      reduce using rule 97
	L_CFloat       reduce using rule 97
	L_CLongDouble  reduce using rule 97
	L_CIdent       reduce using rule 97
	%eof           reduce using rule 97


State 31

	Constant -> Double .                                (rule 96)

	'!'            reduce using rule 96
	'!='           reduce using rule 96
	'%'            reduce using rule 96
	'&'            reduce using rule 96
	'&&'           reduce using rule 96
	'('            reduce using rule 96
	')'            reduce using rule 96
	'*'            reduce using rule 96
	'+'            reduce using rule 96
	'++'           reduce using rule 96
	','            reduce using rule 96
	'-'            reduce using rule 96
	'--'           reduce using rule 96
	'->'           reduce using rule 96
	'.'            reduce using rule 96
	'/'            reduce using rule 96
	'<'            reduce using rule 96
	'<<'           reduce using rule 96
	'<='           reduce using rule 96
	'=='           reduce using rule 96
	'==>'          reduce using rule 96
	'>'            reduce using rule 96
	'>='           reduce using rule 96
	'>>'           reduce using rule 96
	'['            reduce using rule 96
	']'            reduce using rule 96
	'^'            reduce using rule 96
	'exists'       reduce using rule 96
	'forall'       reduce using rule 96
	'|'            reduce using rule 96
	'||'           reduce using rule 96
	'~'            reduce using rule 96
	L_charac       reduce using rule 96
	L_doubl        reduce using rule 96
	L_integ        reduce using rule 96
	L_quoted       reduce using rule 96
	L_Unsigned     reduce using rule 96
	L_Long         reduce using rule 96
	L_UnsignedLong reduce using rule 96
	L_Hexadecimal  reduce using rule 96
	L_HexUnsigned  reduce using rule 96
	L_HexLong      reduce using rule 96
	L_HexUnsLong   reduce using rule 96
	L_Octal        reduce using rule 96
	L_OctalUnsignedreduce using rule 96
	L_OctalLong    reduce using rule 96
	L_OctalUnsLong reduce using rule 96
	L_CDouble      reduce using rule 96
	L_CFloat       reduce using rule 96
	L_CLongDouble  reduce using rule 96
	L_CIdent       reduce using rule 96
	%eof           reduce using rule 96


State 32

	Constant -> Integer .                               (rule 112)

	'!'            reduce using rule 112
	'!='           reduce using rule 112
	'%'            reduce using rule 112
	'&'            reduce using rule 112
	'&&'           reduce using rule 112
	'('            reduce using rule 112
	')'            reduce using rule 112
	'*'            reduce using rule 112
	'+'            reduce using rule 112
	'++'           reduce using rule 112
	','            reduce using rule 112
	'-'            reduce using rule 112
	'--'           reduce using rule 112
	'->'           reduce using rule 112
	'.'            reduce using rule 112
	'/'            reduce using rule 112
	'<'            reduce using rule 112
	'<<'           reduce using rule 112
	'<='           reduce using rule 112
	'=='           reduce using rule 112
	'==>'          reduce using rule 112
	'>'            reduce using rule 112
	'>='           reduce using rule 112
	'>>'           reduce using rule 112
	'['            reduce using rule 112
	']'            reduce using rule 112
	'^'            reduce using rule 112
	'exists'       reduce using rule 112
	'forall'       reduce using rule 112
	'|'            reduce using rule 112
	'||'           reduce using rule 112
	'~'            reduce using rule 112
	L_charac       reduce using rule 112
	L_doubl        reduce using rule 112
	L_integ        reduce using rule 112
	L_quoted       reduce using rule 112
	L_Unsigned     reduce using rule 112
	L_Long         reduce using rule 112
	L_UnsignedLong reduce using rule 112
	L_Hexadecimal  reduce using rule 112
	L_HexUnsigned  reduce using rule 112
	L_HexLong      reduce using rule 112
	L_HexUnsLong   reduce using rule 112
	L_Octal        reduce using rule 112
	L_OctalUnsignedreduce using rule 112
	L_OctalLong    reduce using rule 112
	L_OctalUnsLong reduce using rule 112
	L_CDouble      reduce using rule 112
	L_CFloat       reduce using rule 112
	L_CLongDouble  reduce using rule 112
	L_CIdent       reduce using rule 112
	%eof           reduce using rule 112


State 33

	Exp15 -> String .                                   (rule 90)

	'!'            reduce using rule 90
	'!='           reduce using rule 90
	'%'            reduce using rule 90
	'&'            reduce using rule 90
	'&&'           reduce using rule 90
	'('            reduce using rule 90
	')'            reduce using rule 90
	'*'            reduce using rule 90
	'+'            reduce using rule 90
	'++'           reduce using rule 90
	','            reduce using rule 90
	'-'            reduce using rule 90
	'--'           reduce using rule 90
	'->'           reduce using rule 90
	'.'            reduce using rule 90
	'/'            reduce using rule 90
	'<'            reduce using rule 90
	'<<'           reduce using rule 90
	'<='           reduce using rule 90
	'=='           reduce using rule 90
	'==>'          reduce using rule 90
	'>'            reduce using rule 90
	'>='           reduce using rule 90
	'>>'           reduce using rule 90
	'['            reduce using rule 90
	']'            reduce using rule 90
	'^'            reduce using rule 90
	'exists'       reduce using rule 90
	'forall'       reduce using rule 90
	'|'            reduce using rule 90
	'||'           reduce using rule 90
	'~'            reduce using rule 90
	L_charac       reduce using rule 90
	L_doubl        reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90
	L_Unsigned     reduce using rule 90
	L_Long         reduce using rule 90
	L_UnsignedLong reduce using rule 90
	L_Hexadecimal  reduce using rule 90
	L_HexUnsigned  reduce using rule 90
	L_HexLong      reduce using rule 90
	L_HexUnsLong   reduce using rule 90
	L_Octal        reduce using rule 90
	L_OctalUnsignedreduce using rule 90
	L_OctalLong    reduce using rule 90
	L_OctalUnsLong reduce using rule 90
	L_CDouble      reduce using rule 90
	L_CFloat       reduce using rule 90
	L_CLongDouble  reduce using rule 90
	L_CIdent       reduce using rule 90
	%eof           reduce using rule 90


State 34

	Constant -> Unsigned .                              (rule 98)

	'!'            reduce using rule 98
	'!='           reduce using rule 98
	'%'            reduce using rule 98
	'&'            reduce using rule 98
	'&&'           reduce using rule 98
	'('            reduce using rule 98
	')'            reduce using rule 98
	'*'            reduce using rule 98
	'+'            reduce using rule 98
	'++'           reduce using rule 98
	','            reduce using rule 98
	'-'            reduce using rule 98
	'--'           reduce using rule 98
	'->'           reduce using rule 98
	'.'            reduce using rule 98
	'/'            reduce using rule 98
	'<'            reduce using rule 98
	'<<'           reduce using rule 98
	'<='           reduce using rule 98
	'=='           reduce using rule 98
	'==>'          reduce using rule 98
	'>'            reduce using rule 98
	'>='           reduce using rule 98
	'>>'           reduce using rule 98
	'['            reduce using rule 98
	']'            reduce using rule 98
	'^'            reduce using rule 98
	'exists'       reduce using rule 98
	'forall'       reduce using rule 98
	'|'            reduce using rule 98
	'||'           reduce using rule 98
	'~'            reduce using rule 98
	L_charac       reduce using rule 98
	L_doubl        reduce using rule 98
	L_integ        reduce using rule 98
	L_quoted       reduce using rule 98
	L_Unsigned     reduce using rule 98
	L_Long         reduce using rule 98
	L_UnsignedLong reduce using rule 98
	L_Hexadecimal  reduce using rule 98
	L_HexUnsigned  reduce using rule 98
	L_HexLong      reduce using rule 98
	L_HexUnsLong   reduce using rule 98
	L_Octal        reduce using rule 98
	L_OctalUnsignedreduce using rule 98
	L_OctalLong    reduce using rule 98
	L_OctalUnsLong reduce using rule 98
	L_CDouble      reduce using rule 98
	L_CFloat       reduce using rule 98
	L_CLongDouble  reduce using rule 98
	L_CIdent       reduce using rule 98
	%eof           reduce using rule 98


State 35

	Constant -> Long .                                  (rule 99)

	'!'            reduce using rule 99
	'!='           reduce using rule 99
	'%'            reduce using rule 99
	'&'            reduce using rule 99
	'&&'           reduce using rule 99
	'('            reduce using rule 99
	')'            reduce using rule 99
	'*'            reduce using rule 99
	'+'            reduce using rule 99
	'++'           reduce using rule 99
	','            reduce using rule 99
	'-'            reduce using rule 99
	'--'           reduce using rule 99
	'->'           reduce using rule 99
	'.'            reduce using rule 99
	'/'            reduce using rule 99
	'<'            reduce using rule 99
	'<<'           reduce using rule 99
	'<='           reduce using rule 99
	'=='           reduce using rule 99
	'==>'          reduce using rule 99
	'>'            reduce using rule 99
	'>='           reduce using rule 99
	'>>'           reduce using rule 99
	'['            reduce using rule 99
	']'            reduce using rule 99
	'^'            reduce using rule 99
	'exists'       reduce using rule 99
	'forall'       reduce using rule 99
	'|'            reduce using rule 99
	'||'           reduce using rule 99
	'~'            reduce using rule 99
	L_charac       reduce using rule 99
	L_doubl        reduce using rule 99
	L_integ        reduce using rule 99
	L_quoted       reduce using rule 99
	L_Unsigned     reduce using rule 99
	L_Long         reduce using rule 99
	L_UnsignedLong reduce using rule 99
	L_Hexadecimal  reduce using rule 99
	L_HexUnsigned  reduce using rule 99
	L_HexLong      reduce using rule 99
	L_HexUnsLong   reduce using rule 99
	L_Octal        reduce using rule 99
	L_OctalUnsignedreduce using rule 99
	L_OctalLong    reduce using rule 99
	L_OctalUnsLong reduce using rule 99
	L_CDouble      reduce using rule 99
	L_CFloat       reduce using rule 99
	L_CLongDouble  reduce using rule 99
	L_CIdent       reduce using rule 99
	%eof           reduce using rule 99


State 36

	Constant -> UnsignedLong .                          (rule 100)

	'!'            reduce using rule 100
	'!='           reduce using rule 100
	'%'            reduce using rule 100
	'&'            reduce using rule 100
	'&&'           reduce using rule 100
	'('            reduce using rule 100
	')'            reduce using rule 100
	'*'            reduce using rule 100
	'+'            reduce using rule 100
	'++'           reduce using rule 100
	','            reduce using rule 100
	'-'            reduce using rule 100
	'--'           reduce using rule 100
	'->'           reduce using rule 100
	'.'            reduce using rule 100
	'/'            reduce using rule 100
	'<'            reduce using rule 100
	'<<'           reduce using rule 100
	'<='           reduce using rule 100
	'=='           reduce using rule 100
	'==>'          reduce using rule 100
	'>'            reduce using rule 100
	'>='           reduce using rule 100
	'>>'           reduce using rule 100
	'['            reduce using rule 100
	']'            reduce using rule 100
	'^'            reduce using rule 100
	'exists'       reduce using rule 100
	'forall'       reduce using rule 100
	'|'            reduce using rule 100
	'||'           reduce using rule 100
	'~'            reduce using rule 100
	L_charac       reduce using rule 100
	L_doubl        reduce using rule 100
	L_integ        reduce using rule 100
	L_quoted       reduce using rule 100
	L_Unsigned     reduce using rule 100
	L_Long         reduce using rule 100
	L_UnsignedLong reduce using rule 100
	L_Hexadecimal  reduce using rule 100
	L_HexUnsigned  reduce using rule 100
	L_HexLong      reduce using rule 100
	L_HexUnsLong   reduce using rule 100
	L_Octal        reduce using rule 100
	L_OctalUnsignedreduce using rule 100
	L_OctalLong    reduce using rule 100
	L_OctalUnsLong reduce using rule 100
	L_CDouble      reduce using rule 100
	L_CFloat       reduce using rule 100
	L_CLongDouble  reduce using rule 100
	L_CIdent       reduce using rule 100
	%eof           reduce using rule 100


State 37

	Constant -> Hexadecimal .                           (rule 101)

	'!'            reduce using rule 101
	'!='           reduce using rule 101
	'%'            reduce using rule 101
	'&'            reduce using rule 101
	'&&'           reduce using rule 101
	'('            reduce using rule 101
	')'            reduce using rule 101
	'*'            reduce using rule 101
	'+'            reduce using rule 101
	'++'           reduce using rule 101
	','            reduce using rule 101
	'-'            reduce using rule 101
	'--'           reduce using rule 101
	'->'           reduce using rule 101
	'.'            reduce using rule 101
	'/'            reduce using rule 101
	'<'            reduce using rule 101
	'<<'           reduce using rule 101
	'<='           reduce using rule 101
	'=='           reduce using rule 101
	'==>'          reduce using rule 101
	'>'            reduce using rule 101
	'>='           reduce using rule 101
	'>>'           reduce using rule 101
	'['            reduce using rule 101
	']'            reduce using rule 101
	'^'            reduce using rule 101
	'exists'       reduce using rule 101
	'forall'       reduce using rule 101
	'|'            reduce using rule 101
	'||'           reduce using rule 101
	'~'            reduce using rule 101
	L_charac       reduce using rule 101
	L_doubl        reduce using rule 101
	L_integ        reduce using rule 101
	L_quoted       reduce using rule 101
	L_Unsigned     reduce using rule 101
	L_Long         reduce using rule 101
	L_UnsignedLong reduce using rule 101
	L_Hexadecimal  reduce using rule 101
	L_HexUnsigned  reduce using rule 101
	L_HexLong      reduce using rule 101
	L_HexUnsLong   reduce using rule 101
	L_Octal        reduce using rule 101
	L_OctalUnsignedreduce using rule 101
	L_OctalLong    reduce using rule 101
	L_OctalUnsLong reduce using rule 101
	L_CDouble      reduce using rule 101
	L_CFloat       reduce using rule 101
	L_CLongDouble  reduce using rule 101
	L_CIdent       reduce using rule 101
	%eof           reduce using rule 101


State 38

	Constant -> HexUnsigned .                           (rule 102)

	'!'            reduce using rule 102
	'!='           reduce using rule 102
	'%'            reduce using rule 102
	'&'            reduce using rule 102
	'&&'           reduce using rule 102
	'('            reduce using rule 102
	')'            reduce using rule 102
	'*'            reduce using rule 102
	'+'            reduce using rule 102
	'++'           reduce using rule 102
	','            reduce using rule 102
	'-'            reduce using rule 102
	'--'           reduce using rule 102
	'->'           reduce using rule 102
	'.'            reduce using rule 102
	'/'            reduce using rule 102
	'<'            reduce using rule 102
	'<<'           reduce using rule 102
	'<='           reduce using rule 102
	'=='           reduce using rule 102
	'==>'          reduce using rule 102
	'>'            reduce using rule 102
	'>='           reduce using rule 102
	'>>'           reduce using rule 102
	'['            reduce using rule 102
	']'            reduce using rule 102
	'^'            reduce using rule 102
	'exists'       reduce using rule 102
	'forall'       reduce using rule 102
	'|'            reduce using rule 102
	'||'           reduce using rule 102
	'~'            reduce using rule 102
	L_charac       reduce using rule 102
	L_doubl        reduce using rule 102
	L_integ        reduce using rule 102
	L_quoted       reduce using rule 102
	L_Unsigned     reduce using rule 102
	L_Long         reduce using rule 102
	L_UnsignedLong reduce using rule 102
	L_Hexadecimal  reduce using rule 102
	L_HexUnsigned  reduce using rule 102
	L_HexLong      reduce using rule 102
	L_HexUnsLong   reduce using rule 102
	L_Octal        reduce using rule 102
	L_OctalUnsignedreduce using rule 102
	L_OctalLong    reduce using rule 102
	L_OctalUnsLong reduce using rule 102
	L_CDouble      reduce using rule 102
	L_CFloat       reduce using rule 102
	L_CLongDouble  reduce using rule 102
	L_CIdent       reduce using rule 102
	%eof           reduce using rule 102


State 39

	Constant -> HexLong .                               (rule 103)

	'!'            reduce using rule 103
	'!='           reduce using rule 103
	'%'            reduce using rule 103
	'&'            reduce using rule 103
	'&&'           reduce using rule 103
	'('            reduce using rule 103
	')'            reduce using rule 103
	'*'            reduce using rule 103
	'+'            reduce using rule 103
	'++'           reduce using rule 103
	','            reduce using rule 103
	'-'            reduce using rule 103
	'--'           reduce using rule 103
	'->'           reduce using rule 103
	'.'            reduce using rule 103
	'/'            reduce using rule 103
	'<'            reduce using rule 103
	'<<'           reduce using rule 103
	'<='           reduce using rule 103
	'=='           reduce using rule 103
	'==>'          reduce using rule 103
	'>'            reduce using rule 103
	'>='           reduce using rule 103
	'>>'           reduce using rule 103
	'['            reduce using rule 103
	']'            reduce using rule 103
	'^'            reduce using rule 103
	'exists'       reduce using rule 103
	'forall'       reduce using rule 103
	'|'            reduce using rule 103
	'||'           reduce using rule 103
	'~'            reduce using rule 103
	L_charac       reduce using rule 103
	L_doubl        reduce using rule 103
	L_integ        reduce using rule 103
	L_quoted       reduce using rule 103
	L_Unsigned     reduce using rule 103
	L_Long         reduce using rule 103
	L_UnsignedLong reduce using rule 103
	L_Hexadecimal  reduce using rule 103
	L_HexUnsigned  reduce using rule 103
	L_HexLong      reduce using rule 103
	L_HexUnsLong   reduce using rule 103
	L_Octal        reduce using rule 103
	L_OctalUnsignedreduce using rule 103
	L_OctalLong    reduce using rule 103
	L_OctalUnsLong reduce using rule 103
	L_CDouble      reduce using rule 103
	L_CFloat       reduce using rule 103
	L_CLongDouble  reduce using rule 103
	L_CIdent       reduce using rule 103
	%eof           reduce using rule 103


State 40

	Constant -> HexUnsLong .                            (rule 104)

	'!'            reduce using rule 104
	'!='           reduce using rule 104
	'%'            reduce using rule 104
	'&'            reduce using rule 104
	'&&'           reduce using rule 104
	'('            reduce using rule 104
	')'            reduce using rule 104
	'*'            reduce using rule 104
	'+'            reduce using rule 104
	'++'           reduce using rule 104
	','            reduce using rule 104
	'-'            reduce using rule 104
	'--'           reduce using rule 104
	'->'           reduce using rule 104
	'.'            reduce using rule 104
	'/'            reduce using rule 104
	'<'            reduce using rule 104
	'<<'           reduce using rule 104
	'<='           reduce using rule 104
	'=='           reduce using rule 104
	'==>'          reduce using rule 104
	'>'            reduce using rule 104
	'>='           reduce using rule 104
	'>>'           reduce using rule 104
	'['            reduce using rule 104
	']'            reduce using rule 104
	'^'            reduce using rule 104
	'exists'       reduce using rule 104
	'forall'       reduce using rule 104
	'|'            reduce using rule 104
	'||'           reduce using rule 104
	'~'            reduce using rule 104
	L_charac       reduce using rule 104
	L_doubl        reduce using rule 104
	L_integ        reduce using rule 104
	L_quoted       reduce using rule 104
	L_Unsigned     reduce using rule 104
	L_Long         reduce using rule 104
	L_UnsignedLong reduce using rule 104
	L_Hexadecimal  reduce using rule 104
	L_HexUnsigned  reduce using rule 104
	L_HexLong      reduce using rule 104
	L_HexUnsLong   reduce using rule 104
	L_Octal        reduce using rule 104
	L_OctalUnsignedreduce using rule 104
	L_OctalLong    reduce using rule 104
	L_OctalUnsLong reduce using rule 104
	L_CDouble      reduce using rule 104
	L_CFloat       reduce using rule 104
	L_CLongDouble  reduce using rule 104
	L_CIdent       reduce using rule 104
	%eof           reduce using rule 104


State 41

	Constant -> Octal .                                 (rule 105)

	'!'            reduce using rule 105
	'!='           reduce using rule 105
	'%'            reduce using rule 105
	'&'            reduce using rule 105
	'&&'           reduce using rule 105
	'('            reduce using rule 105
	')'            reduce using rule 105
	'*'            reduce using rule 105
	'+'            reduce using rule 105
	'++'           reduce using rule 105
	','            reduce using rule 105
	'-'            reduce using rule 105
	'--'           reduce using rule 105
	'->'           reduce using rule 105
	'.'            reduce using rule 105
	'/'            reduce using rule 105
	'<'            reduce using rule 105
	'<<'           reduce using rule 105
	'<='           reduce using rule 105
	'=='           reduce using rule 105
	'==>'          reduce using rule 105
	'>'            reduce using rule 105
	'>='           reduce using rule 105
	'>>'           reduce using rule 105
	'['            reduce using rule 105
	']'            reduce using rule 105
	'^'            reduce using rule 105
	'exists'       reduce using rule 105
	'forall'       reduce using rule 105
	'|'            reduce using rule 105
	'||'           reduce using rule 105
	'~'            reduce using rule 105
	L_charac       reduce using rule 105
	L_doubl        reduce using rule 105
	L_integ        reduce using rule 105
	L_quoted       reduce using rule 105
	L_Unsigned     reduce using rule 105
	L_Long         reduce using rule 105
	L_UnsignedLong reduce using rule 105
	L_Hexadecimal  reduce using rule 105
	L_HexUnsigned  reduce using rule 105
	L_HexLong      reduce using rule 105
	L_HexUnsLong   reduce using rule 105
	L_Octal        reduce using rule 105
	L_OctalUnsignedreduce using rule 105
	L_OctalLong    reduce using rule 105
	L_OctalUnsLong reduce using rule 105
	L_CDouble      reduce using rule 105
	L_CFloat       reduce using rule 105
	L_CLongDouble  reduce using rule 105
	L_CIdent       reduce using rule 105
	%eof           reduce using rule 105


State 42

	Constant -> OctalUnsigned .                         (rule 106)

	'!'            reduce using rule 106
	'!='           reduce using rule 106
	'%'            reduce using rule 106
	'&'            reduce using rule 106
	'&&'           reduce using rule 106
	'('            reduce using rule 106
	')'            reduce using rule 106
	'*'            reduce using rule 106
	'+'            reduce using rule 106
	'++'           reduce using rule 106
	','            reduce using rule 106
	'-'            reduce using rule 106
	'--'           reduce using rule 106
	'->'           reduce using rule 106
	'.'            reduce using rule 106
	'/'            reduce using rule 106
	'<'            reduce using rule 106
	'<<'           reduce using rule 106
	'<='           reduce using rule 106
	'=='           reduce using rule 106
	'==>'          reduce using rule 106
	'>'            reduce using rule 106
	'>='           reduce using rule 106
	'>>'           reduce using rule 106
	'['            reduce using rule 106
	']'            reduce using rule 106
	'^'            reduce using rule 106
	'exists'       reduce using rule 106
	'forall'       reduce using rule 106
	'|'            reduce using rule 106
	'||'           reduce using rule 106
	'~'            reduce using rule 106
	L_charac       reduce using rule 106
	L_doubl        reduce using rule 106
	L_integ        reduce using rule 106
	L_quoted       reduce using rule 106
	L_Unsigned     reduce using rule 106
	L_Long         reduce using rule 106
	L_UnsignedLong reduce using rule 106
	L_Hexadecimal  reduce using rule 106
	L_HexUnsigned  reduce using rule 106
	L_HexLong      reduce using rule 106
	L_HexUnsLong   reduce using rule 106
	L_Octal        reduce using rule 106
	L_OctalUnsignedreduce using rule 106
	L_OctalLong    reduce using rule 106
	L_OctalUnsLong reduce using rule 106
	L_CDouble      reduce using rule 106
	L_CFloat       reduce using rule 106
	L_CLongDouble  reduce using rule 106
	L_CIdent       reduce using rule 106
	%eof           reduce using rule 106


State 43

	Constant -> OctalLong .                             (rule 107)

	'!'            reduce using rule 107
	'!='           reduce using rule 107
	'%'            reduce using rule 107
	'&'            reduce using rule 107
	'&&'           reduce using rule 107
	'('            reduce using rule 107
	')'            reduce using rule 107
	'*'            reduce using rule 107
	'+'            reduce using rule 107
	'++'           reduce using rule 107
	','            reduce using rule 107
	'-'            reduce using rule 107
	'--'           reduce using rule 107
	'->'           reduce using rule 107
	'.'            reduce using rule 107
	'/'            reduce using rule 107
	'<'            reduce using rule 107
	'<<'           reduce using rule 107
	'<='           reduce using rule 107
	'=='           reduce using rule 107
	'==>'          reduce using rule 107
	'>'            reduce using rule 107
	'>='           reduce using rule 107
	'>>'           reduce using rule 107
	'['            reduce using rule 107
	']'            reduce using rule 107
	'^'            reduce using rule 107
	'exists'       reduce using rule 107
	'forall'       reduce using rule 107
	'|'            reduce using rule 107
	'||'           reduce using rule 107
	'~'            reduce using rule 107
	L_charac       reduce using rule 107
	L_doubl        reduce using rule 107
	L_integ        reduce using rule 107
	L_quoted       reduce using rule 107
	L_Unsigned     reduce using rule 107
	L_Long         reduce using rule 107
	L_UnsignedLong reduce using rule 107
	L_Hexadecimal  reduce using rule 107
	L_HexUnsigned  reduce using rule 107
	L_HexLong      reduce using rule 107
	L_HexUnsLong   reduce using rule 107
	L_Octal        reduce using rule 107
	L_OctalUnsignedreduce using rule 107
	L_OctalLong    reduce using rule 107
	L_OctalUnsLong reduce using rule 107
	L_CDouble      reduce using rule 107
	L_CFloat       reduce using rule 107
	L_CLongDouble  reduce using rule 107
	L_CIdent       reduce using rule 107
	%eof           reduce using rule 107


State 44

	Constant -> OctalUnsLong .                          (rule 108)

	'!'            reduce using rule 108
	'!='           reduce using rule 108
	'%'            reduce using rule 108
	'&'            reduce using rule 108
	'&&'           reduce using rule 108
	'('            reduce using rule 108
	')'            reduce using rule 108
	'*'            reduce using rule 108
	'+'            reduce using rule 108
	'++'           reduce using rule 108
	','            reduce using rule 108
	'-'            reduce using rule 108
	'--'           reduce using rule 108
	'->'           reduce using rule 108
	'.'            reduce using rule 108
	'/'            reduce using rule 108
	'<'            reduce using rule 108
	'<<'           reduce using rule 108
	'<='           reduce using rule 108
	'=='           reduce using rule 108
	'==>'          reduce using rule 108
	'>'            reduce using rule 108
	'>='           reduce using rule 108
	'>>'           reduce using rule 108
	'['            reduce using rule 108
	']'            reduce using rule 108
	'^'            reduce using rule 108
	'exists'       reduce using rule 108
	'forall'       reduce using rule 108
	'|'            reduce using rule 108
	'||'           reduce using rule 108
	'~'            reduce using rule 108
	L_charac       reduce using rule 108
	L_doubl        reduce using rule 108
	L_integ        reduce using rule 108
	L_quoted       reduce using rule 108
	L_Unsigned     reduce using rule 108
	L_Long         reduce using rule 108
	L_UnsignedLong reduce using rule 108
	L_Hexadecimal  reduce using rule 108
	L_HexUnsigned  reduce using rule 108
	L_HexLong      reduce using rule 108
	L_HexUnsLong   reduce using rule 108
	L_Octal        reduce using rule 108
	L_OctalUnsignedreduce using rule 108
	L_OctalLong    reduce using rule 108
	L_OctalUnsLong reduce using rule 108
	L_CDouble      reduce using rule 108
	L_CFloat       reduce using rule 108
	L_CLongDouble  reduce using rule 108
	L_CIdent       reduce using rule 108
	%eof           reduce using rule 108


State 45

	Constant -> CDouble .                               (rule 109)

	'!'            reduce using rule 109
	'!='           reduce using rule 109
	'%'            reduce using rule 109
	'&'            reduce using rule 109
	'&&'           reduce using rule 109
	'('            reduce using rule 109
	')'            reduce using rule 109
	'*'            reduce using rule 109
	'+'            reduce using rule 109
	'++'           reduce using rule 109
	','            reduce using rule 109
	'-'            reduce using rule 109
	'--'           reduce using rule 109
	'->'           reduce using rule 109
	'.'            reduce using rule 109
	'/'            reduce using rule 109
	'<'            reduce using rule 109
	'<<'           reduce using rule 109
	'<='           reduce using rule 109
	'=='           reduce using rule 109
	'==>'          reduce using rule 109
	'>'            reduce using rule 109
	'>='           reduce using rule 109
	'>>'           reduce using rule 109
	'['            reduce using rule 109
	']'            reduce using rule 109
	'^'            reduce using rule 109
	'exists'       reduce using rule 109
	'forall'       reduce using rule 109
	'|'            reduce using rule 109
	'||'           reduce using rule 109
	'~'            reduce using rule 109
	L_charac       reduce using rule 109
	L_doubl        reduce using rule 109
	L_integ        reduce using rule 109
	L_quoted       reduce using rule 109
	L_Unsigned     reduce using rule 109
	L_Long         reduce using rule 109
	L_UnsignedLong reduce using rule 109
	L_Hexadecimal  reduce using rule 109
	L_HexUnsigned  reduce using rule 109
	L_HexLong      reduce using rule 109
	L_HexUnsLong   reduce using rule 109
	L_Octal        reduce using rule 109
	L_OctalUnsignedreduce using rule 109
	L_OctalLong    reduce using rule 109
	L_OctalUnsLong reduce using rule 109
	L_CDouble      reduce using rule 109
	L_CFloat       reduce using rule 109
	L_CLongDouble  reduce using rule 109
	L_CIdent       reduce using rule 109
	%eof           reduce using rule 109


State 46

	Constant -> CFloat .                                (rule 110)

	'!'            reduce using rule 110
	'!='           reduce using rule 110
	'%'            reduce using rule 110
	'&'            reduce using rule 110
	'&&'           reduce using rule 110
	'('            reduce using rule 110
	')'            reduce using rule 110
	'*'            reduce using rule 110
	'+'            reduce using rule 110
	'++'           reduce using rule 110
	','            reduce using rule 110
	'-'            reduce using rule 110
	'--'           reduce using rule 110
	'->'           reduce using rule 110
	'.'            reduce using rule 110
	'/'            reduce using rule 110
	'<'            reduce using rule 110
	'<<'           reduce using rule 110
	'<='           reduce using rule 110
	'=='           reduce using rule 110
	'==>'          reduce using rule 110
	'>'            reduce using rule 110
	'>='           reduce using rule 110
	'>>'           reduce using rule 110
	'['            reduce using rule 110
	']'            reduce using rule 110
	'^'            reduce using rule 110
	'exists'       reduce using rule 110
	'forall'       reduce using rule 110
	'|'            reduce using rule 110
	'||'           reduce using rule 110
	'~'            reduce using rule 110
	L_charac       reduce using rule 110
	L_doubl        reduce using rule 110
	L_integ        reduce using rule 110
	L_quoted       reduce using rule 110
	L_Unsigned     reduce using rule 110
	L_Long         reduce using rule 110
	L_UnsignedLong reduce using rule 110
	L_Hexadecimal  reduce using rule 110
	L_HexUnsigned  reduce using rule 110
	L_HexLong      reduce using rule 110
	L_HexUnsLong   reduce using rule 110
	L_Octal        reduce using rule 110
	L_OctalUnsignedreduce using rule 110
	L_OctalLong    reduce using rule 110
	L_OctalUnsLong reduce using rule 110
	L_CDouble      reduce using rule 110
	L_CFloat       reduce using rule 110
	L_CLongDouble  reduce using rule 110
	L_CIdent       reduce using rule 110
	%eof           reduce using rule 110


State 47

	Constant -> CLongDouble .                           (rule 111)

	'!'            reduce using rule 111
	'!='           reduce using rule 111
	'%'            reduce using rule 111
	'&'            reduce using rule 111
	'&&'           reduce using rule 111
	'('            reduce using rule 111
	')'            reduce using rule 111
	'*'            reduce using rule 111
	'+'            reduce using rule 111
	'++'           reduce using rule 111
	','            reduce using rule 111
	'-'            reduce using rule 111
	'--'           reduce using rule 111
	'->'           reduce using rule 111
	'.'            reduce using rule 111
	'/'            reduce using rule 111
	'<'            reduce using rule 111
	'<<'           reduce using rule 111
	'<='           reduce using rule 111
	'=='           reduce using rule 111
	'==>'          reduce using rule 111
	'>'            reduce using rule 111
	'>='           reduce using rule 111
	'>>'           reduce using rule 111
	'['            reduce using rule 111
	']'            reduce using rule 111
	'^'            reduce using rule 111
	'exists'       reduce using rule 111
	'forall'       reduce using rule 111
	'|'            reduce using rule 111
	'||'           reduce using rule 111
	'~'            reduce using rule 111
	L_charac       reduce using rule 111
	L_doubl        reduce using rule 111
	L_integ        reduce using rule 111
	L_quoted       reduce using rule 111
	L_Unsigned     reduce using rule 111
	L_Long         reduce using rule 111
	L_UnsignedLong reduce using rule 111
	L_Hexadecimal  reduce using rule 111
	L_HexUnsigned  reduce using rule 111
	L_HexLong      reduce using rule 111
	L_HexUnsLong   reduce using rule 111
	L_Octal        reduce using rule 111
	L_OctalUnsignedreduce using rule 111
	L_OctalLong    reduce using rule 111
	L_OctalUnsLong reduce using rule 111
	L_CDouble      reduce using rule 111
	L_CFloat       reduce using rule 111
	L_CLongDouble  reduce using rule 111
	L_CIdent       reduce using rule 111
	%eof           reduce using rule 111


State 48

	Exp15 -> CIdent .                                   (rule 88)

	'!'            reduce using rule 88
	'!='           reduce using rule 88
	'%'            reduce using rule 88
	'&'            reduce using rule 88
	'&&'           reduce using rule 88
	'('            reduce using rule 88
	')'            reduce using rule 88
	'*'            reduce using rule 88
	'+'            reduce using rule 88
	'++'           reduce using rule 88
	','            reduce using rule 88
	'-'            reduce using rule 88
	'--'           reduce using rule 88
	'->'           reduce using rule 88
	'.'            reduce using rule 88
	'/'            reduce using rule 88
	'<'            reduce using rule 88
	'<<'           reduce using rule 88
	'<='           reduce using rule 88
	'=='           reduce using rule 88
	'==>'          reduce using rule 88
	'>'            reduce using rule 88
	'>='           reduce using rule 88
	'>>'           reduce using rule 88
	'['            reduce using rule 88
	']'            reduce using rule 88
	'^'            reduce using rule 88
	'exists'       reduce using rule 88
	'forall'       reduce using rule 88
	'|'            reduce using rule 88
	'||'           reduce using rule 88
	'~'            reduce using rule 88
	L_charac       reduce using rule 88
	L_doubl        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88
	L_Unsigned     reduce using rule 88
	L_Long         reduce using rule 88
	L_UnsignedLong reduce using rule 88
	L_Hexadecimal  reduce using rule 88
	L_HexUnsigned  reduce using rule 88
	L_HexLong      reduce using rule 88
	L_HexUnsLong   reduce using rule 88
	L_Octal        reduce using rule 88
	L_OctalUnsignedreduce using rule 88
	L_OctalLong    reduce using rule 88
	L_OctalUnsLong reduce using rule 88
	L_CDouble      reduce using rule 88
	L_CFloat       reduce using rule 88
	L_CLongDouble  reduce using rule 88
	L_CIdent       reduce using rule 88
	%eof           reduce using rule 88


State 49

	Exp2 -> Exp2 . '||' Exp3                            (rule 46)
	Exp1 -> Exp2 .                                      (rule 113)

	'!'            reduce using rule 113
	'!='           reduce using rule 113
	'%'            reduce using rule 113
	'&'            reduce using rule 113
	'&&'           reduce using rule 113
	'('            reduce using rule 113
	')'            reduce using rule 113
	'*'            reduce using rule 113
	'+'            reduce using rule 113
	'++'           reduce using rule 113
	','            reduce using rule 113
	'-'            reduce using rule 113
	'--'           reduce using rule 113
	'->'           reduce using rule 113
	'.'            reduce using rule 113
	'/'            reduce using rule 113
	'<'            reduce using rule 113
	'<<'           reduce using rule 113
	'<='           reduce using rule 113
	'=='           reduce using rule 113
	'==>'          reduce using rule 113
	'>'            reduce using rule 113
	'>='           reduce using rule 113
	'>>'           reduce using rule 113
	'['            reduce using rule 113
	']'            reduce using rule 113
	'^'            reduce using rule 113
	'exists'       reduce using rule 113
	'forall'       reduce using rule 113
	'|'            reduce using rule 113
	'||'           shift, and enter state 115
			(reduce using rule 113)

	'~'            reduce using rule 113
	L_charac       reduce using rule 113
	L_doubl        reduce using rule 113
	L_integ        reduce using rule 113
	L_quoted       reduce using rule 113
	L_Unsigned     reduce using rule 113
	L_Long         reduce using rule 113
	L_UnsignedLong reduce using rule 113
	L_Hexadecimal  reduce using rule 113
	L_HexUnsigned  reduce using rule 113
	L_HexLong      reduce using rule 113
	L_HexUnsLong   reduce using rule 113
	L_Octal        reduce using rule 113
	L_OctalUnsignedreduce using rule 113
	L_OctalLong    reduce using rule 113
	L_OctalUnsLong reduce using rule 113
	L_CDouble      reduce using rule 113
	L_CFloat       reduce using rule 113
	L_CLongDouble  reduce using rule 113
	L_CIdent       reduce using rule 113
	%eof           reduce using rule 113


State 50

	Exp2 -> Exp3 .                                      (rule 47)
	Exp3 -> Exp3 . '&&' Exp4                            (rule 48)

	'!'            reduce using rule 47
	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&'            reduce using rule 47
	'&&'           shift, and enter state 116
			(reduce using rule 47)

	'('            reduce using rule 47
	')'            reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	'++'           reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'--'           reduce using rule 47
	'->'           reduce using rule 47
	'.'            reduce using rule 47
	'/'            reduce using rule 47
	'<'            reduce using rule 47
	'<<'           reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'==>'          reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'>>'           reduce using rule 47
	'['            reduce using rule 47
	']'            reduce using rule 47
	'^'            reduce using rule 47
	'exists'       reduce using rule 47
	'forall'       reduce using rule 47
	'|'            reduce using rule 47
	'||'           reduce using rule 47
	'~'            reduce using rule 47
	L_charac       reduce using rule 47
	L_doubl        reduce using rule 47
	L_integ        reduce using rule 47
	L_quoted       reduce using rule 47
	L_Unsigned     reduce using rule 47
	L_Long         reduce using rule 47
	L_UnsignedLong reduce using rule 47
	L_Hexadecimal  reduce using rule 47
	L_HexUnsigned  reduce using rule 47
	L_HexLong      reduce using rule 47
	L_HexUnsLong   reduce using rule 47
	L_Octal        reduce using rule 47
	L_OctalUnsignedreduce using rule 47
	L_OctalLong    reduce using rule 47
	L_OctalUnsLong reduce using rule 47
	L_CDouble      reduce using rule 47
	L_CFloat       reduce using rule 47
	L_CLongDouble  reduce using rule 47
	L_CIdent       reduce using rule 47
	%eof           reduce using rule 47


State 51

	Exp3 -> Exp4 .                                      (rule 49)
	Exp4 -> Exp4 . '|' Exp5                             (rule 50)

	'!'            reduce using rule 49
	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'++'           reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'--'           reduce using rule 49
	'->'           reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	'<'            reduce using rule 49
	'<<'           reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'==>'          reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'>>'           reduce using rule 49
	'['            reduce using rule 49
	']'            reduce using rule 49
	'^'            reduce using rule 49
	'exists'       reduce using rule 49
	'forall'       reduce using rule 49
	'|'            shift, and enter state 117
			(reduce using rule 49)

	'||'           reduce using rule 49
	'~'            reduce using rule 49
	L_charac       reduce using rule 49
	L_doubl        reduce using rule 49
	L_integ        reduce using rule 49
	L_quoted       reduce using rule 49
	L_Unsigned     reduce using rule 49
	L_Long         reduce using rule 49
	L_UnsignedLong reduce using rule 49
	L_Hexadecimal  reduce using rule 49
	L_HexUnsigned  reduce using rule 49
	L_HexLong      reduce using rule 49
	L_HexUnsLong   reduce using rule 49
	L_Octal        reduce using rule 49
	L_OctalUnsignedreduce using rule 49
	L_OctalLong    reduce using rule 49
	L_OctalUnsLong reduce using rule 49
	L_CDouble      reduce using rule 49
	L_CFloat       reduce using rule 49
	L_CLongDouble  reduce using rule 49
	L_CIdent       reduce using rule 49
	%eof           reduce using rule 49


State 52

	Exp4 -> Exp5 .                                      (rule 51)
	Exp5 -> Exp5 . '^' Exp6                             (rule 52)

	'!'            reduce using rule 51
	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	'++'           reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'--'           reduce using rule 51
	'->'           reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	'<'            reduce using rule 51
	'<<'           reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'==>'          reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'>>'           reduce using rule 51
	'['            reduce using rule 51
	']'            reduce using rule 51
	'^'            shift, and enter state 118
			(reduce using rule 51)

	'exists'       reduce using rule 51
	'forall'       reduce using rule 51
	'|'            reduce using rule 51
	'||'           reduce using rule 51
	'~'            reduce using rule 51
	L_charac       reduce using rule 51
	L_doubl        reduce using rule 51
	L_integ        reduce using rule 51
	L_quoted       reduce using rule 51
	L_Unsigned     reduce using rule 51
	L_Long         reduce using rule 51
	L_UnsignedLong reduce using rule 51
	L_Hexadecimal  reduce using rule 51
	L_HexUnsigned  reduce using rule 51
	L_HexLong      reduce using rule 51
	L_HexUnsLong   reduce using rule 51
	L_Octal        reduce using rule 51
	L_OctalUnsignedreduce using rule 51
	L_OctalLong    reduce using rule 51
	L_OctalUnsLong reduce using rule 51
	L_CDouble      reduce using rule 51
	L_CFloat       reduce using rule 51
	L_CLongDouble  reduce using rule 51
	L_CIdent       reduce using rule 51
	%eof           reduce using rule 51


State 53

	Exp5 -> Exp6 .                                      (rule 53)
	Exp6 -> Exp6 . '&' Exp7                             (rule 54)

	'!'            reduce using rule 53
	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&'            shift, and enter state 119
			(reduce using rule 53)

	'&&'           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	'++'           reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'--'           reduce using rule 53
	'->'           reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	'<'            reduce using rule 53
	'<<'           reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'==>'          reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'>>'           reduce using rule 53
	'['            reduce using rule 53
	']'            reduce using rule 53
	'^'            reduce using rule 53
	'exists'       reduce using rule 53
	'forall'       reduce using rule 53
	'|'            reduce using rule 53
	'||'           reduce using rule 53
	'~'            reduce using rule 53
	L_charac       reduce using rule 53
	L_doubl        reduce using rule 53
	L_integ        reduce using rule 53
	L_quoted       reduce using rule 53
	L_Unsigned     reduce using rule 53
	L_Long         reduce using rule 53
	L_UnsignedLong reduce using rule 53
	L_Hexadecimal  reduce using rule 53
	L_HexUnsigned  reduce using rule 53
	L_HexLong      reduce using rule 53
	L_HexUnsLong   reduce using rule 53
	L_Octal        reduce using rule 53
	L_OctalUnsignedreduce using rule 53
	L_OctalLong    reduce using rule 53
	L_OctalUnsLong reduce using rule 53
	L_CDouble      reduce using rule 53
	L_CFloat       reduce using rule 53
	L_CLongDouble  reduce using rule 53
	L_CIdent       reduce using rule 53
	%eof           reduce using rule 53


State 54

	Exp6 -> Exp7 .                                      (rule 55)
	Exp7 -> Exp7 . '==' Exp8                            (rule 56)
	Exp7 -> Exp7 . '!=' Exp8                            (rule 57)

	'!'            reduce using rule 55
	'!='           shift, and enter state 120
			(reduce using rule 55)

	'%'            reduce using rule 55
	'&'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'--'           reduce using rule 55
	'->'           reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	'<'            reduce using rule 55
	'<<'           reduce using rule 55
	'<='           reduce using rule 55
	'=='           shift, and enter state 121
			(reduce using rule 55)

	'==>'          reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'>>'           reduce using rule 55
	'['            reduce using rule 55
	']'            reduce using rule 55
	'^'            reduce using rule 55
	'exists'       reduce using rule 55
	'forall'       reduce using rule 55
	'|'            reduce using rule 55
	'||'           reduce using rule 55
	'~'            reduce using rule 55
	L_charac       reduce using rule 55
	L_doubl        reduce using rule 55
	L_integ        reduce using rule 55
	L_quoted       reduce using rule 55
	L_Unsigned     reduce using rule 55
	L_Long         reduce using rule 55
	L_UnsignedLong reduce using rule 55
	L_Hexadecimal  reduce using rule 55
	L_HexUnsigned  reduce using rule 55
	L_HexLong      reduce using rule 55
	L_HexUnsLong   reduce using rule 55
	L_Octal        reduce using rule 55
	L_OctalUnsignedreduce using rule 55
	L_OctalLong    reduce using rule 55
	L_OctalUnsLong reduce using rule 55
	L_CDouble      reduce using rule 55
	L_CFloat       reduce using rule 55
	L_CLongDouble  reduce using rule 55
	L_CIdent       reduce using rule 55
	%eof           reduce using rule 55


State 55

	Exp7 -> Exp8 .                                      (rule 58)
	Exp8 -> Exp8 . '<' Exp9                             (rule 59)
	Exp8 -> Exp8 . '>' Exp9                             (rule 60)

	'!'            reduce using rule 58
	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	'++'           reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'--'           reduce using rule 58
	'->'           reduce using rule 58
	'.'            reduce using rule 58
	'/'            reduce using rule 58
	'<'            shift, and enter state 122
			(reduce using rule 58)

	'<<'           reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'==>'          reduce using rule 58
	'>'            shift, and enter state 123
			(reduce using rule 58)

	'>='           reduce using rule 58
	'>>'           reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'^'            reduce using rule 58
	'exists'       reduce using rule 58
	'forall'       reduce using rule 58
	'|'            reduce using rule 58
	'||'           reduce using rule 58
	'~'            reduce using rule 58
	L_charac       reduce using rule 58
	L_doubl        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58
	L_Unsigned     reduce using rule 58
	L_Long         reduce using rule 58
	L_UnsignedLong reduce using rule 58
	L_Hexadecimal  reduce using rule 58
	L_HexUnsigned  reduce using rule 58
	L_HexLong      reduce using rule 58
	L_HexUnsLong   reduce using rule 58
	L_Octal        reduce using rule 58
	L_OctalUnsignedreduce using rule 58
	L_OctalLong    reduce using rule 58
	L_OctalUnsLong reduce using rule 58
	L_CDouble      reduce using rule 58
	L_CFloat       reduce using rule 58
	L_CLongDouble  reduce using rule 58
	L_CIdent       reduce using rule 58
	%eof           reduce using rule 58


State 56

	Exp8 -> Exp9 .                                      (rule 61)
	Exp9 -> Exp9 . '<=' Exp10                           (rule 62)
	Exp9 -> Exp9 . '>=' Exp10                           (rule 63)

	'!'            reduce using rule 61
	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&'            reduce using rule 61
	'&&'           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	'++'           reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'--'           reduce using rule 61
	'->'           reduce using rule 61
	'.'            reduce using rule 61
	'/'            reduce using rule 61
	'<'            reduce using rule 61
	'<<'           reduce using rule 61
	'<='           shift, and enter state 124
			(reduce using rule 61)

	'=='           reduce using rule 61
	'==>'          reduce using rule 61
	'>'            reduce using rule 61
	'>='           shift, and enter state 125
			(reduce using rule 61)

	'>>'           reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	'^'            reduce using rule 61
	'exists'       reduce using rule 61
	'forall'       reduce using rule 61
	'|'            reduce using rule 61
	'||'           reduce using rule 61
	'~'            reduce using rule 61
	L_charac       reduce using rule 61
	L_doubl        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61
	L_Unsigned     reduce using rule 61
	L_Long         reduce using rule 61
	L_UnsignedLong reduce using rule 61
	L_Hexadecimal  reduce using rule 61
	L_HexUnsigned  reduce using rule 61
	L_HexLong      reduce using rule 61
	L_HexUnsLong   reduce using rule 61
	L_Octal        reduce using rule 61
	L_OctalUnsignedreduce using rule 61
	L_OctalLong    reduce using rule 61
	L_OctalUnsLong reduce using rule 61
	L_CDouble      reduce using rule 61
	L_CFloat       reduce using rule 61
	L_CLongDouble  reduce using rule 61
	L_CIdent       reduce using rule 61
	%eof           reduce using rule 61


State 57

	Exp9 -> Exp10 .                                     (rule 64)
	Exp10 -> Exp10 . '<<' Exp11                         (rule 65)
	Exp10 -> Exp10 . '>>' Exp11                         (rule 66)

	'!'            reduce using rule 64
	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&'            reduce using rule 64
	'&&'           reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	'++'           reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'--'           reduce using rule 64
	'->'           reduce using rule 64
	'.'            reduce using rule 64
	'/'            reduce using rule 64
	'<'            reduce using rule 64
	'<<'           shift, and enter state 126
			(reduce using rule 64)

	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'==>'          reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'>>'           shift, and enter state 127
			(reduce using rule 64)

	'['            reduce using rule 64
	']'            reduce using rule 64
	'^'            reduce using rule 64
	'exists'       reduce using rule 64
	'forall'       reduce using rule 64
	'|'            reduce using rule 64
	'||'           reduce using rule 64
	'~'            reduce using rule 64
	L_charac       reduce using rule 64
	L_doubl        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64
	L_Unsigned     reduce using rule 64
	L_Long         reduce using rule 64
	L_UnsignedLong reduce using rule 64
	L_Hexadecimal  reduce using rule 64
	L_HexUnsigned  reduce using rule 64
	L_HexLong      reduce using rule 64
	L_HexUnsLong   reduce using rule 64
	L_Octal        reduce using rule 64
	L_OctalUnsignedreduce using rule 64
	L_OctalLong    reduce using rule 64
	L_OctalUnsLong reduce using rule 64
	L_CDouble      reduce using rule 64
	L_CFloat       reduce using rule 64
	L_CLongDouble  reduce using rule 64
	L_CIdent       reduce using rule 64
	%eof           reduce using rule 64


State 58

	Exp10 -> Exp11 .                                    (rule 67)
	Exp11 -> Exp11 . '+' Exp12                          (rule 68)
	Exp11 -> Exp11 . '-' Exp12                          (rule 69)

	'!'            reduce using rule 67
	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&'            reduce using rule 67
	'&&'           reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            shift, and enter state 128
			(reduce using rule 67)

	'++'           reduce using rule 67
	','            reduce using rule 67
	'-'            shift, and enter state 129
			(reduce using rule 67)

	'--'           reduce using rule 67
	'->'           reduce using rule 67
	'.'            reduce using rule 67
	'/'            reduce using rule 67
	'<'            reduce using rule 67
	'<<'           reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'==>'          reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'>>'           reduce using rule 67
	'['            reduce using rule 67
	']'            reduce using rule 67
	'^'            reduce using rule 67
	'exists'       reduce using rule 67
	'forall'       reduce using rule 67
	'|'            reduce using rule 67
	'||'           reduce using rule 67
	'~'            reduce using rule 67
	L_charac       reduce using rule 67
	L_doubl        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67
	L_Unsigned     reduce using rule 67
	L_Long         reduce using rule 67
	L_UnsignedLong reduce using rule 67
	L_Hexadecimal  reduce using rule 67
	L_HexUnsigned  reduce using rule 67
	L_HexLong      reduce using rule 67
	L_HexUnsLong   reduce using rule 67
	L_Octal        reduce using rule 67
	L_OctalUnsignedreduce using rule 67
	L_OctalLong    reduce using rule 67
	L_OctalUnsLong reduce using rule 67
	L_CDouble      reduce using rule 67
	L_CFloat       reduce using rule 67
	L_CLongDouble  reduce using rule 67
	L_CIdent       reduce using rule 67
	%eof           reduce using rule 67


State 59

	Exp11 -> Exp12 .                                    (rule 70)
	Exp12 -> Exp12 . '*' Exp13                          (rule 71)
	Exp12 -> Exp12 . '/' Exp13                          (rule 72)
	Exp12 -> Exp12 . '%' Exp13                          (rule 73)

	'!'            reduce using rule 70
	'!='           reduce using rule 70
	'%'            shift, and enter state 130
			(reduce using rule 70)

	'&'            reduce using rule 70
	'&&'           reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	'*'            shift, and enter state 131
			(reduce using rule 70)

	'+'            reduce using rule 70
	'++'           reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'--'           reduce using rule 70
	'->'           reduce using rule 70
	'.'            reduce using rule 70
	'/'            shift, and enter state 132
			(reduce using rule 70)

	'<'            reduce using rule 70
	'<<'           reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'==>'          reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'>>'           reduce using rule 70
	'['            reduce using rule 70
	']'            reduce using rule 70
	'^'            reduce using rule 70
	'exists'       reduce using rule 70
	'forall'       reduce using rule 70
	'|'            reduce using rule 70
	'||'           reduce using rule 70
	'~'            reduce using rule 70
	L_charac       reduce using rule 70
	L_doubl        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70
	L_Unsigned     reduce using rule 70
	L_Long         reduce using rule 70
	L_UnsignedLong reduce using rule 70
	L_Hexadecimal  reduce using rule 70
	L_HexUnsigned  reduce using rule 70
	L_HexLong      reduce using rule 70
	L_HexUnsLong   reduce using rule 70
	L_Octal        reduce using rule 70
	L_OctalUnsignedreduce using rule 70
	L_OctalLong    reduce using rule 70
	L_OctalUnsLong reduce using rule 70
	L_CDouble      reduce using rule 70
	L_CFloat       reduce using rule 70
	L_CLongDouble  reduce using rule 70
	L_CIdent       reduce using rule 70
	%eof           reduce using rule 70


State 60

	Exp12 -> Exp13 .                                    (rule 74)

	'!'            reduce using rule 74
	'!='           reduce using rule 74
	'%'            reduce using rule 74
	'&'            reduce using rule 74
	'&&'           reduce using rule 74
	'('            reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'+'            reduce using rule 74
	'++'           reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'--'           reduce using rule 74
	'->'           reduce using rule 74
	'.'            reduce using rule 74
	'/'            reduce using rule 74
	'<'            reduce using rule 74
	'<<'           reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'==>'          reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'>>'           reduce using rule 74
	'['            reduce using rule 74
	']'            reduce using rule 74
	'^'            reduce using rule 74
	'exists'       reduce using rule 74
	'forall'       reduce using rule 74
	'|'            reduce using rule 74
	'||'           reduce using rule 74
	'~'            reduce using rule 74
	L_charac       reduce using rule 74
	L_doubl        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74
	L_Unsigned     reduce using rule 74
	L_Long         reduce using rule 74
	L_UnsignedLong reduce using rule 74
	L_Hexadecimal  reduce using rule 74
	L_HexUnsigned  reduce using rule 74
	L_HexLong      reduce using rule 74
	L_HexUnsLong   reduce using rule 74
	L_Octal        reduce using rule 74
	L_OctalUnsignedreduce using rule 74
	L_OctalLong    reduce using rule 74
	L_OctalUnsLong reduce using rule 74
	L_CDouble      reduce using rule 74
	L_CFloat       reduce using rule 74
	L_CLongDouble  reduce using rule 74
	L_CIdent       reduce using rule 74
	%eof           reduce using rule 74


State 61

	Exp13 -> Exp14 .                                    (rule 78)
	Exp14 -> Exp14 . '[' Exp ']'                        (rule 79)
	Exp14 -> Exp14 . '(' ')'                            (rule 80)
	Exp14 -> Exp14 . '(' ListExp ')'                    (rule 81)
	Exp14 -> Exp14 . '.' CIdent                         (rule 82)
	Exp14 -> Exp14 . '->' CIdent                        (rule 83)
	Exp14 -> Exp14 . '++'                               (rule 84)
	Exp14 -> Exp14 . '--'                               (rule 85)

	'!'            reduce using rule 78
	'!='           reduce using rule 78
	'%'            reduce using rule 78
	'&'            reduce using rule 78
	'&&'           reduce using rule 78
	'('            shift, and enter state 133
			(reduce using rule 78)

	')'            reduce using rule 78
	'*'            reduce using rule 78
	'+'            reduce using rule 78
	'++'           shift, and enter state 134
			(reduce using rule 78)

	','            reduce using rule 78
	'-'            reduce using rule 78
	'--'           shift, and enter state 135
			(reduce using rule 78)

	'->'           shift, and enter state 136
			(reduce using rule 78)

	'.'            shift, and enter state 137
			(reduce using rule 78)

	'/'            reduce using rule 78
	'<'            reduce using rule 78
	'<<'           reduce using rule 78
	'<='           reduce using rule 78
	'=='           reduce using rule 78
	'==>'          reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'>>'           reduce using rule 78
	'['            shift, and enter state 138
			(reduce using rule 78)

	']'            reduce using rule 78
	'^'            reduce using rule 78
	'exists'       reduce using rule 78
	'forall'       reduce using rule 78
	'|'            reduce using rule 78
	'||'           reduce using rule 78
	'~'            reduce using rule 78
	L_charac       reduce using rule 78
	L_doubl        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78
	L_Unsigned     reduce using rule 78
	L_Long         reduce using rule 78
	L_UnsignedLong reduce using rule 78
	L_Hexadecimal  reduce using rule 78
	L_HexUnsigned  reduce using rule 78
	L_HexLong      reduce using rule 78
	L_HexUnsLong   reduce using rule 78
	L_Octal        reduce using rule 78
	L_OctalUnsignedreduce using rule 78
	L_OctalLong    reduce using rule 78
	L_OctalUnsLong reduce using rule 78
	L_CDouble      reduce using rule 78
	L_CFloat       reduce using rule 78
	L_CLongDouble  reduce using rule 78
	L_CIdent       reduce using rule 78
	%eof           reduce using rule 78


State 62

	Exp14 -> Exp15 .                                    (rule 86)

	'!'            reduce using rule 86
	'!='           reduce using rule 86
	'%'            reduce using rule 86
	'&'            reduce using rule 86
	'&&'           reduce using rule 86
	'('            reduce using rule 86
	')'            reduce using rule 86
	'*'            reduce using rule 86
	'+'            reduce using rule 86
	'++'           reduce using rule 86
	','            reduce using rule 86
	'-'            reduce using rule 86
	'--'           reduce using rule 86
	'->'           reduce using rule 86
	'.'            reduce using rule 86
	'/'            reduce using rule 86
	'<'            reduce using rule 86
	'<<'           reduce using rule 86
	'<='           reduce using rule 86
	'=='           reduce using rule 86
	'==>'          reduce using rule 86
	'>'            reduce using rule 86
	'>='           reduce using rule 86
	'>>'           reduce using rule 86
	'['            reduce using rule 86
	']'            reduce using rule 86
	'^'            reduce using rule 86
	'exists'       reduce using rule 86
	'forall'       reduce using rule 86
	'|'            reduce using rule 86
	'||'           reduce using rule 86
	'~'            reduce using rule 86
	L_charac       reduce using rule 86
	L_doubl        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86
	L_Unsigned     reduce using rule 86
	L_Long         reduce using rule 86
	L_UnsignedLong reduce using rule 86
	L_Hexadecimal  reduce using rule 86
	L_HexUnsigned  reduce using rule 86
	L_HexLong      reduce using rule 86
	L_HexUnsLong   reduce using rule 86
	L_Octal        reduce using rule 86
	L_OctalUnsignedreduce using rule 86
	L_OctalLong    reduce using rule 86
	L_OctalUnsLong reduce using rule 86
	L_CDouble      reduce using rule 86
	L_CFloat       reduce using rule 86
	L_CLongDouble  reduce using rule 86
	L_CIdent       reduce using rule 86
	%eof           reduce using rule 86


State 63

	Exp15 -> Quant . ListCIdent '|' Exp                 (rule 87)

	L_CIdent       shift, and enter state 89

	CIdent         goto state 91
	ListCIdent     goto state 144

State 64

	Exp15 -> Constant .                                 (rule 89)

	'!'            reduce using rule 89
	'!='           reduce using rule 89
	'%'            reduce using rule 89
	'&'            reduce using rule 89
	'&&'           reduce using rule 89
	'('            reduce using rule 89
	')'            reduce using rule 89
	'*'            reduce using rule 89
	'+'            reduce using rule 89
	'++'           reduce using rule 89
	','            reduce using rule 89
	'-'            reduce using rule 89
	'--'           reduce using rule 89
	'->'           reduce using rule 89
	'.'            reduce using rule 89
	'/'            reduce using rule 89
	'<'            reduce using rule 89
	'<<'           reduce using rule 89
	'<='           reduce using rule 89
	'=='           reduce using rule 89
	'==>'          reduce using rule 89
	'>'            reduce using rule 89
	'>='           reduce using rule 89
	'>>'           reduce using rule 89
	'['            reduce using rule 89
	']'            reduce using rule 89
	'^'            reduce using rule 89
	'exists'       reduce using rule 89
	'forall'       reduce using rule 89
	'|'            reduce using rule 89
	'||'           reduce using rule 89
	'~'            reduce using rule 89
	L_charac       reduce using rule 89
	L_doubl        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89
	L_Unsigned     reduce using rule 89
	L_Long         reduce using rule 89
	L_UnsignedLong reduce using rule 89
	L_Hexadecimal  reduce using rule 89
	L_HexUnsigned  reduce using rule 89
	L_HexLong      reduce using rule 89
	L_HexUnsLong   reduce using rule 89
	L_Octal        reduce using rule 89
	L_OctalUnsignedreduce using rule 89
	L_OctalLong    reduce using rule 89
	L_OctalUnsLong reduce using rule 89
	L_CDouble      reduce using rule 89
	L_CFloat       reduce using rule 89
	L_CLongDouble  reduce using rule 89
	L_CIdent       reduce using rule 89
	%eof           reduce using rule 89


State 65

	%start_pExp1 -> Exp1 .                              (rule 19)

	%eof           accept


State 66

	Exp13 -> Unary_operator . Exp13                     (rule 77)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp13          goto state 143
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 67

	Exp15 -> '(' . Exp ')'                              (rule 91)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp            goto state 142
	Exp2           goto state 49
	Exp3           goto state 50
	Exp4           goto state 51
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Exp1           goto state 109
	Unary_operator goto state 66

State 68

	Exp13 -> '++' . Exp14                               (rule 75)

	'('            shift, and enter state 67
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp14          goto state 141
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64

State 69

	Exp13 -> '--' . Exp14                               (rule 76)

	'('            shift, and enter state 67
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp14          goto state 140
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64

State 70

	Quant -> 'exists' .                                 (rule 92)

	L_CIdent       reduce using rule 92
	%eof           reduce using rule 92


State 71

	Quant -> 'forall' .                                 (rule 93)

	L_CIdent       reduce using rule 93
	%eof           reduce using rule 93


State 72

	Double -> L_doubl .                                 (rule 22)

	'!'            reduce using rule 22
	'!='           reduce using rule 22
	'%'            reduce using rule 22
	'&'            reduce using rule 22
	'&&'           reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	'*'            reduce using rule 22
	'+'            reduce using rule 22
	'++'           reduce using rule 22
	','            reduce using rule 22
	'-'            reduce using rule 22
	'--'           reduce using rule 22
	'->'           reduce using rule 22
	'.'            reduce using rule 22
	'/'            reduce using rule 22
	'<'            reduce using rule 22
	'<<'           reduce using rule 22
	'<='           reduce using rule 22
	'=='           reduce using rule 22
	'==>'          reduce using rule 22
	'>'            reduce using rule 22
	'>='           reduce using rule 22
	'>>'           reduce using rule 22
	'['            reduce using rule 22
	']'            reduce using rule 22
	'^'            reduce using rule 22
	'exists'       reduce using rule 22
	'forall'       reduce using rule 22
	'|'            reduce using rule 22
	'||'           reduce using rule 22
	'~'            reduce using rule 22
	L_charac       reduce using rule 22
	L_doubl        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22
	L_Unsigned     reduce using rule 22
	L_Long         reduce using rule 22
	L_UnsignedLong reduce using rule 22
	L_Hexadecimal  reduce using rule 22
	L_HexUnsigned  reduce using rule 22
	L_HexLong      reduce using rule 22
	L_HexUnsLong   reduce using rule 22
	L_Octal        reduce using rule 22
	L_OctalUnsignedreduce using rule 22
	L_OctalLong    reduce using rule 22
	L_OctalUnsLong reduce using rule 22
	L_CDouble      reduce using rule 22
	L_CFloat       reduce using rule 22
	L_CLongDouble  reduce using rule 22
	L_CIdent       reduce using rule 22
	%eof           reduce using rule 22


State 73

	Integer -> L_integ .                                (rule 23)

	'!'            reduce using rule 23
	'!='           reduce using rule 23
	'%'            reduce using rule 23
	'&'            reduce using rule 23
	'&&'           reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	'*'            reduce using rule 23
	'+'            reduce using rule 23
	'++'           reduce using rule 23
	','            reduce using rule 23
	'-'            reduce using rule 23
	'--'           reduce using rule 23
	'->'           reduce using rule 23
	'.'            reduce using rule 23
	'/'            reduce using rule 23
	'<'            reduce using rule 23
	'<<'           reduce using rule 23
	'<='           reduce using rule 23
	'=='           reduce using rule 23
	'==>'          reduce using rule 23
	'>'            reduce using rule 23
	'>='           reduce using rule 23
	'>>'           reduce using rule 23
	'['            reduce using rule 23
	']'            reduce using rule 23
	'^'            reduce using rule 23
	'exists'       reduce using rule 23
	'forall'       reduce using rule 23
	'|'            reduce using rule 23
	'||'           reduce using rule 23
	'~'            reduce using rule 23
	L_charac       reduce using rule 23
	L_doubl        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23
	L_Unsigned     reduce using rule 23
	L_Long         reduce using rule 23
	L_UnsignedLong reduce using rule 23
	L_Hexadecimal  reduce using rule 23
	L_HexUnsigned  reduce using rule 23
	L_HexLong      reduce using rule 23
	L_HexUnsLong   reduce using rule 23
	L_Octal        reduce using rule 23
	L_OctalUnsignedreduce using rule 23
	L_OctalLong    reduce using rule 23
	L_OctalUnsLong reduce using rule 23
	L_CDouble      reduce using rule 23
	L_CFloat       reduce using rule 23
	L_CLongDouble  reduce using rule 23
	L_CIdent       reduce using rule 23
	%eof           reduce using rule 23


State 74

	String -> L_quoted .                                (rule 24)

	'!'            reduce using rule 24
	'!='           reduce using rule 24
	'%'            reduce using rule 24
	'&'            reduce using rule 24
	'&&'           reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'+'            reduce using rule 24
	'++'           reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'--'           reduce using rule 24
	'->'           reduce using rule 24
	'.'            reduce using rule 24
	'/'            reduce using rule 24
	'<'            reduce using rule 24
	'<<'           reduce using rule 24
	'<='           reduce using rule 24
	'=='           reduce using rule 24
	'==>'          reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	'>>'           reduce using rule 24
	'['            reduce using rule 24
	']'            reduce using rule 24
	'^'            reduce using rule 24
	'exists'       reduce using rule 24
	'forall'       reduce using rule 24
	'|'            reduce using rule 24
	'||'           reduce using rule 24
	'~'            reduce using rule 24
	L_charac       reduce using rule 24
	L_doubl        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24
	L_Unsigned     reduce using rule 24
	L_Long         reduce using rule 24
	L_UnsignedLong reduce using rule 24
	L_Hexadecimal  reduce using rule 24
	L_HexUnsigned  reduce using rule 24
	L_HexLong      reduce using rule 24
	L_HexUnsLong   reduce using rule 24
	L_Octal        reduce using rule 24
	L_OctalUnsignedreduce using rule 24
	L_OctalLong    reduce using rule 24
	L_OctalUnsLong reduce using rule 24
	L_CDouble      reduce using rule 24
	L_CFloat       reduce using rule 24
	L_CLongDouble  reduce using rule 24
	L_CIdent       reduce using rule 24
	%eof           reduce using rule 24


State 75

	Unsigned -> L_Unsigned .                            (rule 25)

	'!'            reduce using rule 25
	'!='           reduce using rule 25
	'%'            reduce using rule 25
	'&'            reduce using rule 25
	'&&'           reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'+'            reduce using rule 25
	'++'           reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'--'           reduce using rule 25
	'->'           reduce using rule 25
	'.'            reduce using rule 25
	'/'            reduce using rule 25
	'<'            reduce using rule 25
	'<<'           reduce using rule 25
	'<='           reduce using rule 25
	'=='           reduce using rule 25
	'==>'          reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	'>>'           reduce using rule 25
	'['            reduce using rule 25
	']'            reduce using rule 25
	'^'            reduce using rule 25
	'exists'       reduce using rule 25
	'forall'       reduce using rule 25
	'|'            reduce using rule 25
	'||'           reduce using rule 25
	'~'            reduce using rule 25
	L_charac       reduce using rule 25
	L_doubl        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25
	L_Unsigned     reduce using rule 25
	L_Long         reduce using rule 25
	L_UnsignedLong reduce using rule 25
	L_Hexadecimal  reduce using rule 25
	L_HexUnsigned  reduce using rule 25
	L_HexLong      reduce using rule 25
	L_HexUnsLong   reduce using rule 25
	L_Octal        reduce using rule 25
	L_OctalUnsignedreduce using rule 25
	L_OctalLong    reduce using rule 25
	L_OctalUnsLong reduce using rule 25
	L_CDouble      reduce using rule 25
	L_CFloat       reduce using rule 25
	L_CLongDouble  reduce using rule 25
	L_CIdent       reduce using rule 25
	%eof           reduce using rule 25


State 76

	Long -> L_Long .                                    (rule 26)

	'!'            reduce using rule 26
	'!='           reduce using rule 26
	'%'            reduce using rule 26
	'&'            reduce using rule 26
	'&&'           reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'+'            reduce using rule 26
	'++'           reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'--'           reduce using rule 26
	'->'           reduce using rule 26
	'.'            reduce using rule 26
	'/'            reduce using rule 26
	'<'            reduce using rule 26
	'<<'           reduce using rule 26
	'<='           reduce using rule 26
	'=='           reduce using rule 26
	'==>'          reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	'>>'           reduce using rule 26
	'['            reduce using rule 26
	']'            reduce using rule 26
	'^'            reduce using rule 26
	'exists'       reduce using rule 26
	'forall'       reduce using rule 26
	'|'            reduce using rule 26
	'||'           reduce using rule 26
	'~'            reduce using rule 26
	L_charac       reduce using rule 26
	L_doubl        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26
	L_Unsigned     reduce using rule 26
	L_Long         reduce using rule 26
	L_UnsignedLong reduce using rule 26
	L_Hexadecimal  reduce using rule 26
	L_HexUnsigned  reduce using rule 26
	L_HexLong      reduce using rule 26
	L_HexUnsLong   reduce using rule 26
	L_Octal        reduce using rule 26
	L_OctalUnsignedreduce using rule 26
	L_OctalLong    reduce using rule 26
	L_OctalUnsLong reduce using rule 26
	L_CDouble      reduce using rule 26
	L_CFloat       reduce using rule 26
	L_CLongDouble  reduce using rule 26
	L_CIdent       reduce using rule 26
	%eof           reduce using rule 26


State 77

	UnsignedLong -> L_UnsignedLong .                    (rule 27)

	'!'            reduce using rule 27
	'!='           reduce using rule 27
	'%'            reduce using rule 27
	'&'            reduce using rule 27
	'&&'           reduce using rule 27
	'('            reduce using rule 27
	')'            reduce using rule 27
	'*'            reduce using rule 27
	'+'            reduce using rule 27
	'++'           reduce using rule 27
	','            reduce using rule 27
	'-'            reduce using rule 27
	'--'           reduce using rule 27
	'->'           reduce using rule 27
	'.'            reduce using rule 27
	'/'            reduce using rule 27
	'<'            reduce using rule 27
	'<<'           reduce using rule 27
	'<='           reduce using rule 27
	'=='           reduce using rule 27
	'==>'          reduce using rule 27
	'>'            reduce using rule 27
	'>='           reduce using rule 27
	'>>'           reduce using rule 27
	'['            reduce using rule 27
	']'            reduce using rule 27
	'^'            reduce using rule 27
	'exists'       reduce using rule 27
	'forall'       reduce using rule 27
	'|'            reduce using rule 27
	'||'           reduce using rule 27
	'~'            reduce using rule 27
	L_charac       reduce using rule 27
	L_doubl        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27
	L_Unsigned     reduce using rule 27
	L_Long         reduce using rule 27
	L_UnsignedLong reduce using rule 27
	L_Hexadecimal  reduce using rule 27
	L_HexUnsigned  reduce using rule 27
	L_HexLong      reduce using rule 27
	L_HexUnsLong   reduce using rule 27
	L_Octal        reduce using rule 27
	L_OctalUnsignedreduce using rule 27
	L_OctalLong    reduce using rule 27
	L_OctalUnsLong reduce using rule 27
	L_CDouble      reduce using rule 27
	L_CFloat       reduce using rule 27
	L_CLongDouble  reduce using rule 27
	L_CIdent       reduce using rule 27
	%eof           reduce using rule 27


State 78

	Hexadecimal -> L_Hexadecimal .                      (rule 28)

	'!'            reduce using rule 28
	'!='           reduce using rule 28
	'%'            reduce using rule 28
	'&'            reduce using rule 28
	'&&'           reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	'*'            reduce using rule 28
	'+'            reduce using rule 28
	'++'           reduce using rule 28
	','            reduce using rule 28
	'-'            reduce using rule 28
	'--'           reduce using rule 28
	'->'           reduce using rule 28
	'.'            reduce using rule 28
	'/'            reduce using rule 28
	'<'            reduce using rule 28
	'<<'           reduce using rule 28
	'<='           reduce using rule 28
	'=='           reduce using rule 28
	'==>'          reduce using rule 28
	'>'            reduce using rule 28
	'>='           reduce using rule 28
	'>>'           reduce using rule 28
	'['            reduce using rule 28
	']'            reduce using rule 28
	'^'            reduce using rule 28
	'exists'       reduce using rule 28
	'forall'       reduce using rule 28
	'|'            reduce using rule 28
	'||'           reduce using rule 28
	'~'            reduce using rule 28
	L_charac       reduce using rule 28
	L_doubl        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28
	L_Unsigned     reduce using rule 28
	L_Long         reduce using rule 28
	L_UnsignedLong reduce using rule 28
	L_Hexadecimal  reduce using rule 28
	L_HexUnsigned  reduce using rule 28
	L_HexLong      reduce using rule 28
	L_HexUnsLong   reduce using rule 28
	L_Octal        reduce using rule 28
	L_OctalUnsignedreduce using rule 28
	L_OctalLong    reduce using rule 28
	L_OctalUnsLong reduce using rule 28
	L_CDouble      reduce using rule 28
	L_CFloat       reduce using rule 28
	L_CLongDouble  reduce using rule 28
	L_CIdent       reduce using rule 28
	%eof           reduce using rule 28


State 79

	HexUnsigned -> L_HexUnsigned .                      (rule 29)

	'!'            reduce using rule 29
	'!='           reduce using rule 29
	'%'            reduce using rule 29
	'&'            reduce using rule 29
	'&&'           reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	'*'            reduce using rule 29
	'+'            reduce using rule 29
	'++'           reduce using rule 29
	','            reduce using rule 29
	'-'            reduce using rule 29
	'--'           reduce using rule 29
	'->'           reduce using rule 29
	'.'            reduce using rule 29
	'/'            reduce using rule 29
	'<'            reduce using rule 29
	'<<'           reduce using rule 29
	'<='           reduce using rule 29
	'=='           reduce using rule 29
	'==>'          reduce using rule 29
	'>'            reduce using rule 29
	'>='           reduce using rule 29
	'>>'           reduce using rule 29
	'['            reduce using rule 29
	']'            reduce using rule 29
	'^'            reduce using rule 29
	'exists'       reduce using rule 29
	'forall'       reduce using rule 29
	'|'            reduce using rule 29
	'||'           reduce using rule 29
	'~'            reduce using rule 29
	L_charac       reduce using rule 29
	L_doubl        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29
	L_Unsigned     reduce using rule 29
	L_Long         reduce using rule 29
	L_UnsignedLong reduce using rule 29
	L_Hexadecimal  reduce using rule 29
	L_HexUnsigned  reduce using rule 29
	L_HexLong      reduce using rule 29
	L_HexUnsLong   reduce using rule 29
	L_Octal        reduce using rule 29
	L_OctalUnsignedreduce using rule 29
	L_OctalLong    reduce using rule 29
	L_OctalUnsLong reduce using rule 29
	L_CDouble      reduce using rule 29
	L_CFloat       reduce using rule 29
	L_CLongDouble  reduce using rule 29
	L_CIdent       reduce using rule 29
	%eof           reduce using rule 29


State 80

	HexLong -> L_HexLong .                              (rule 30)

	'!'            reduce using rule 30
	'!='           reduce using rule 30
	'%'            reduce using rule 30
	'&'            reduce using rule 30
	'&&'           reduce using rule 30
	'('            reduce using rule 30
	')'            reduce using rule 30
	'*'            reduce using rule 30
	'+'            reduce using rule 30
	'++'           reduce using rule 30
	','            reduce using rule 30
	'-'            reduce using rule 30
	'--'           reduce using rule 30
	'->'           reduce using rule 30
	'.'            reduce using rule 30
	'/'            reduce using rule 30
	'<'            reduce using rule 30
	'<<'           reduce using rule 30
	'<='           reduce using rule 30
	'=='           reduce using rule 30
	'==>'          reduce using rule 30
	'>'            reduce using rule 30
	'>='           reduce using rule 30
	'>>'           reduce using rule 30
	'['            reduce using rule 30
	']'            reduce using rule 30
	'^'            reduce using rule 30
	'exists'       reduce using rule 30
	'forall'       reduce using rule 30
	'|'            reduce using rule 30
	'||'           reduce using rule 30
	'~'            reduce using rule 30
	L_charac       reduce using rule 30
	L_doubl        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30
	L_Unsigned     reduce using rule 30
	L_Long         reduce using rule 30
	L_UnsignedLong reduce using rule 30
	L_Hexadecimal  reduce using rule 30
	L_HexUnsigned  reduce using rule 30
	L_HexLong      reduce using rule 30
	L_HexUnsLong   reduce using rule 30
	L_Octal        reduce using rule 30
	L_OctalUnsignedreduce using rule 30
	L_OctalLong    reduce using rule 30
	L_OctalUnsLong reduce using rule 30
	L_CDouble      reduce using rule 30
	L_CFloat       reduce using rule 30
	L_CLongDouble  reduce using rule 30
	L_CIdent       reduce using rule 30
	%eof           reduce using rule 30


State 81

	HexUnsLong -> L_HexUnsLong .                        (rule 31)

	'!'            reduce using rule 31
	'!='           reduce using rule 31
	'%'            reduce using rule 31
	'&'            reduce using rule 31
	'&&'           reduce using rule 31
	'('            reduce using rule 31
	')'            reduce using rule 31
	'*'            reduce using rule 31
	'+'            reduce using rule 31
	'++'           reduce using rule 31
	','            reduce using rule 31
	'-'            reduce using rule 31
	'--'           reduce using rule 31
	'->'           reduce using rule 31
	'.'            reduce using rule 31
	'/'            reduce using rule 31
	'<'            reduce using rule 31
	'<<'           reduce using rule 31
	'<='           reduce using rule 31
	'=='           reduce using rule 31
	'==>'          reduce using rule 31
	'>'            reduce using rule 31
	'>='           reduce using rule 31
	'>>'           reduce using rule 31
	'['            reduce using rule 31
	']'            reduce using rule 31
	'^'            reduce using rule 31
	'exists'       reduce using rule 31
	'forall'       reduce using rule 31
	'|'            reduce using rule 31
	'||'           reduce using rule 31
	'~'            reduce using rule 31
	L_charac       reduce using rule 31
	L_doubl        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31
	L_Unsigned     reduce using rule 31
	L_Long         reduce using rule 31
	L_UnsignedLong reduce using rule 31
	L_Hexadecimal  reduce using rule 31
	L_HexUnsigned  reduce using rule 31
	L_HexLong      reduce using rule 31
	L_HexUnsLong   reduce using rule 31
	L_Octal        reduce using rule 31
	L_OctalUnsignedreduce using rule 31
	L_OctalLong    reduce using rule 31
	L_OctalUnsLong reduce using rule 31
	L_CDouble      reduce using rule 31
	L_CFloat       reduce using rule 31
	L_CLongDouble  reduce using rule 31
	L_CIdent       reduce using rule 31
	%eof           reduce using rule 31


State 82

	Octal -> L_Octal .                                  (rule 32)

	'!'            reduce using rule 32
	'!='           reduce using rule 32
	'%'            reduce using rule 32
	'&'            reduce using rule 32
	'&&'           reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	'*'            reduce using rule 32
	'+'            reduce using rule 32
	'++'           reduce using rule 32
	','            reduce using rule 32
	'-'            reduce using rule 32
	'--'           reduce using rule 32
	'->'           reduce using rule 32
	'.'            reduce using rule 32
	'/'            reduce using rule 32
	'<'            reduce using rule 32
	'<<'           reduce using rule 32
	'<='           reduce using rule 32
	'=='           reduce using rule 32
	'==>'          reduce using rule 32
	'>'            reduce using rule 32
	'>='           reduce using rule 32
	'>>'           reduce using rule 32
	'['            reduce using rule 32
	']'            reduce using rule 32
	'^'            reduce using rule 32
	'exists'       reduce using rule 32
	'forall'       reduce using rule 32
	'|'            reduce using rule 32
	'||'           reduce using rule 32
	'~'            reduce using rule 32
	L_charac       reduce using rule 32
	L_doubl        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32
	L_Unsigned     reduce using rule 32
	L_Long         reduce using rule 32
	L_UnsignedLong reduce using rule 32
	L_Hexadecimal  reduce using rule 32
	L_HexUnsigned  reduce using rule 32
	L_HexLong      reduce using rule 32
	L_HexUnsLong   reduce using rule 32
	L_Octal        reduce using rule 32
	L_OctalUnsignedreduce using rule 32
	L_OctalLong    reduce using rule 32
	L_OctalUnsLong reduce using rule 32
	L_CDouble      reduce using rule 32
	L_CFloat       reduce using rule 32
	L_CLongDouble  reduce using rule 32
	L_CIdent       reduce using rule 32
	%eof           reduce using rule 32


State 83

	OctalUnsigned -> L_OctalUnsigned .                  (rule 33)

	'!'            reduce using rule 33
	'!='           reduce using rule 33
	'%'            reduce using rule 33
	'&'            reduce using rule 33
	'&&'           reduce using rule 33
	'('            reduce using rule 33
	')'            reduce using rule 33
	'*'            reduce using rule 33
	'+'            reduce using rule 33
	'++'           reduce using rule 33
	','            reduce using rule 33
	'-'            reduce using rule 33
	'--'           reduce using rule 33
	'->'           reduce using rule 33
	'.'            reduce using rule 33
	'/'            reduce using rule 33
	'<'            reduce using rule 33
	'<<'           reduce using rule 33
	'<='           reduce using rule 33
	'=='           reduce using rule 33
	'==>'          reduce using rule 33
	'>'            reduce using rule 33
	'>='           reduce using rule 33
	'>>'           reduce using rule 33
	'['            reduce using rule 33
	']'            reduce using rule 33
	'^'            reduce using rule 33
	'exists'       reduce using rule 33
	'forall'       reduce using rule 33
	'|'            reduce using rule 33
	'||'           reduce using rule 33
	'~'            reduce using rule 33
	L_charac       reduce using rule 33
	L_doubl        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33
	L_Unsigned     reduce using rule 33
	L_Long         reduce using rule 33
	L_UnsignedLong reduce using rule 33
	L_Hexadecimal  reduce using rule 33
	L_HexUnsigned  reduce using rule 33
	L_HexLong      reduce using rule 33
	L_HexUnsLong   reduce using rule 33
	L_Octal        reduce using rule 33
	L_OctalUnsignedreduce using rule 33
	L_OctalLong    reduce using rule 33
	L_OctalUnsLong reduce using rule 33
	L_CDouble      reduce using rule 33
	L_CFloat       reduce using rule 33
	L_CLongDouble  reduce using rule 33
	L_CIdent       reduce using rule 33
	%eof           reduce using rule 33


State 84

	OctalLong -> L_OctalLong .                          (rule 34)

	'!'            reduce using rule 34
	'!='           reduce using rule 34
	'%'            reduce using rule 34
	'&'            reduce using rule 34
	'&&'           reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	'++'           reduce using rule 34
	','            reduce using rule 34
	'-'            reduce using rule 34
	'--'           reduce using rule 34
	'->'           reduce using rule 34
	'.'            reduce using rule 34
	'/'            reduce using rule 34
	'<'            reduce using rule 34
	'<<'           reduce using rule 34
	'<='           reduce using rule 34
	'=='           reduce using rule 34
	'==>'          reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'>>'           reduce using rule 34
	'['            reduce using rule 34
	']'            reduce using rule 34
	'^'            reduce using rule 34
	'exists'       reduce using rule 34
	'forall'       reduce using rule 34
	'|'            reduce using rule 34
	'||'           reduce using rule 34
	'~'            reduce using rule 34
	L_charac       reduce using rule 34
	L_doubl        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34
	L_Unsigned     reduce using rule 34
	L_Long         reduce using rule 34
	L_UnsignedLong reduce using rule 34
	L_Hexadecimal  reduce using rule 34
	L_HexUnsigned  reduce using rule 34
	L_HexLong      reduce using rule 34
	L_HexUnsLong   reduce using rule 34
	L_Octal        reduce using rule 34
	L_OctalUnsignedreduce using rule 34
	L_OctalLong    reduce using rule 34
	L_OctalUnsLong reduce using rule 34
	L_CDouble      reduce using rule 34
	L_CFloat       reduce using rule 34
	L_CLongDouble  reduce using rule 34
	L_CIdent       reduce using rule 34
	%eof           reduce using rule 34


State 85

	OctalUnsLong -> L_OctalUnsLong .                    (rule 35)

	'!'            reduce using rule 35
	'!='           reduce using rule 35
	'%'            reduce using rule 35
	'&'            reduce using rule 35
	'&&'           reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	'++'           reduce using rule 35
	','            reduce using rule 35
	'-'            reduce using rule 35
	'--'           reduce using rule 35
	'->'           reduce using rule 35
	'.'            reduce using rule 35
	'/'            reduce using rule 35
	'<'            reduce using rule 35
	'<<'           reduce using rule 35
	'<='           reduce using rule 35
	'=='           reduce using rule 35
	'==>'          reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'>>'           reduce using rule 35
	'['            reduce using rule 35
	']'            reduce using rule 35
	'^'            reduce using rule 35
	'exists'       reduce using rule 35
	'forall'       reduce using rule 35
	'|'            reduce using rule 35
	'||'           reduce using rule 35
	'~'            reduce using rule 35
	L_charac       reduce using rule 35
	L_doubl        reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35
	L_Unsigned     reduce using rule 35
	L_Long         reduce using rule 35
	L_UnsignedLong reduce using rule 35
	L_Hexadecimal  reduce using rule 35
	L_HexUnsigned  reduce using rule 35
	L_HexLong      reduce using rule 35
	L_HexUnsLong   reduce using rule 35
	L_Octal        reduce using rule 35
	L_OctalUnsignedreduce using rule 35
	L_OctalLong    reduce using rule 35
	L_OctalUnsLong reduce using rule 35
	L_CDouble      reduce using rule 35
	L_CFloat       reduce using rule 35
	L_CLongDouble  reduce using rule 35
	L_CIdent       reduce using rule 35
	%eof           reduce using rule 35


State 86

	CDouble -> L_CDouble .                              (rule 36)

	'!'            reduce using rule 36
	'!='           reduce using rule 36
	'%'            reduce using rule 36
	'&'            reduce using rule 36
	'&&'           reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	'++'           reduce using rule 36
	','            reduce using rule 36
	'-'            reduce using rule 36
	'--'           reduce using rule 36
	'->'           reduce using rule 36
	'.'            reduce using rule 36
	'/'            reduce using rule 36
	'<'            reduce using rule 36
	'<<'           reduce using rule 36
	'<='           reduce using rule 36
	'=='           reduce using rule 36
	'==>'          reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'>>'           reduce using rule 36
	'['            reduce using rule 36
	']'            reduce using rule 36
	'^'            reduce using rule 36
	'exists'       reduce using rule 36
	'forall'       reduce using rule 36
	'|'            reduce using rule 36
	'||'           reduce using rule 36
	'~'            reduce using rule 36
	L_charac       reduce using rule 36
	L_doubl        reduce using rule 36
	L_integ        reduce using rule 36
	L_quoted       reduce using rule 36
	L_Unsigned     reduce using rule 36
	L_Long         reduce using rule 36
	L_UnsignedLong reduce using rule 36
	L_Hexadecimal  reduce using rule 36
	L_HexUnsigned  reduce using rule 36
	L_HexLong      reduce using rule 36
	L_HexUnsLong   reduce using rule 36
	L_Octal        reduce using rule 36
	L_OctalUnsignedreduce using rule 36
	L_OctalLong    reduce using rule 36
	L_OctalUnsLong reduce using rule 36
	L_CDouble      reduce using rule 36
	L_CFloat       reduce using rule 36
	L_CLongDouble  reduce using rule 36
	L_CIdent       reduce using rule 36
	%eof           reduce using rule 36


State 87

	CFloat -> L_CFloat .                                (rule 37)

	'!'            reduce using rule 37
	'!='           reduce using rule 37
	'%'            reduce using rule 37
	'&'            reduce using rule 37
	'&&'           reduce using rule 37
	'('            reduce using rule 37
	')'            reduce using rule 37
	'*'            reduce using rule 37
	'+'            reduce using rule 37
	'++'           reduce using rule 37
	','            reduce using rule 37
	'-'            reduce using rule 37
	'--'           reduce using rule 37
	'->'           reduce using rule 37
	'.'            reduce using rule 37
	'/'            reduce using rule 37
	'<'            reduce using rule 37
	'<<'           reduce using rule 37
	'<='           reduce using rule 37
	'=='           reduce using rule 37
	'==>'          reduce using rule 37
	'>'            reduce using rule 37
	'>='           reduce using rule 37
	'>>'           reduce using rule 37
	'['            reduce using rule 37
	']'            reduce using rule 37
	'^'            reduce using rule 37
	'exists'       reduce using rule 37
	'forall'       reduce using rule 37
	'|'            reduce using rule 37
	'||'           reduce using rule 37
	'~'            reduce using rule 37
	L_charac       reduce using rule 37
	L_doubl        reduce using rule 37
	L_integ        reduce using rule 37
	L_quoted       reduce using rule 37
	L_Unsigned     reduce using rule 37
	L_Long         reduce using rule 37
	L_UnsignedLong reduce using rule 37
	L_Hexadecimal  reduce using rule 37
	L_HexUnsigned  reduce using rule 37
	L_HexLong      reduce using rule 37
	L_HexUnsLong   reduce using rule 37
	L_Octal        reduce using rule 37
	L_OctalUnsignedreduce using rule 37
	L_OctalLong    reduce using rule 37
	L_OctalUnsLong reduce using rule 37
	L_CDouble      reduce using rule 37
	L_CFloat       reduce using rule 37
	L_CLongDouble  reduce using rule 37
	L_CIdent       reduce using rule 37
	%eof           reduce using rule 37


State 88

	CLongDouble -> L_CLongDouble .                      (rule 38)

	'!'            reduce using rule 38
	'!='           reduce using rule 38
	'%'            reduce using rule 38
	'&'            reduce using rule 38
	'&&'           reduce using rule 38
	'('            reduce using rule 38
	')'            reduce using rule 38
	'*'            reduce using rule 38
	'+'            reduce using rule 38
	'++'           reduce using rule 38
	','            reduce using rule 38
	'-'            reduce using rule 38
	'--'           reduce using rule 38
	'->'           reduce using rule 38
	'.'            reduce using rule 38
	'/'            reduce using rule 38
	'<'            reduce using rule 38
	'<<'           reduce using rule 38
	'<='           reduce using rule 38
	'=='           reduce using rule 38
	'==>'          reduce using rule 38
	'>'            reduce using rule 38
	'>='           reduce using rule 38
	'>>'           reduce using rule 38
	'['            reduce using rule 38
	']'            reduce using rule 38
	'^'            reduce using rule 38
	'exists'       reduce using rule 38
	'forall'       reduce using rule 38
	'|'            reduce using rule 38
	'||'           reduce using rule 38
	'~'            reduce using rule 38
	L_charac       reduce using rule 38
	L_doubl        reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38
	L_Unsigned     reduce using rule 38
	L_Long         reduce using rule 38
	L_UnsignedLong reduce using rule 38
	L_Hexadecimal  reduce using rule 38
	L_HexUnsigned  reduce using rule 38
	L_HexLong      reduce using rule 38
	L_HexUnsLong   reduce using rule 38
	L_Octal        reduce using rule 38
	L_OctalUnsignedreduce using rule 38
	L_OctalLong    reduce using rule 38
	L_OctalUnsLong reduce using rule 38
	L_CDouble      reduce using rule 38
	L_CFloat       reduce using rule 38
	L_CLongDouble  reduce using rule 38
	L_CIdent       reduce using rule 38
	%eof           reduce using rule 38


State 89

	CIdent -> L_CIdent .                                (rule 39)

	'!'            reduce using rule 39
	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	'++'           reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'--'           reduce using rule 39
	'->'           reduce using rule 39
	'.'            reduce using rule 39
	'/'            reduce using rule 39
	'<'            reduce using rule 39
	'<<'           reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'==>'          reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'>>'           reduce using rule 39
	'['            reduce using rule 39
	']'            reduce using rule 39
	'^'            reduce using rule 39
	'exists'       reduce using rule 39
	'forall'       reduce using rule 39
	'|'            reduce using rule 39
	'||'           reduce using rule 39
	'~'            reduce using rule 39
	L_charac       reduce using rule 39
	L_doubl        reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39
	L_Unsigned     reduce using rule 39
	L_Long         reduce using rule 39
	L_UnsignedLong reduce using rule 39
	L_Hexadecimal  reduce using rule 39
	L_HexUnsigned  reduce using rule 39
	L_HexLong      reduce using rule 39
	L_HexUnsLong   reduce using rule 39
	L_Octal        reduce using rule 39
	L_OctalUnsignedreduce using rule 39
	L_OctalLong    reduce using rule 39
	L_OctalUnsLong reduce using rule 39
	L_CDouble      reduce using rule 39
	L_CFloat       reduce using rule 39
	L_CLongDouble  reduce using rule 39
	L_CIdent       reduce using rule 39
	%eof           reduce using rule 39


State 90

	%start_pConstant -> Constant .                      (rule 18)

	%eof           accept


State 91

	ListCIdent -> CIdent .                              (rule 94)
	ListCIdent -> CIdent . ',' ListCIdent               (rule 95)

	','            shift, and enter state 139
	'|'            reduce using rule 94
	%eof           reduce using rule 94


State 92

	%start_pListCIdent -> ListCIdent .                  (rule 17)

	%eof           accept


State 93

	%start_pQuant -> Quant .                            (rule 16)

	%eof           accept


State 94

	%start_pExp15 -> Exp15 .                            (rule 15)

	%eof           accept


State 95

	%start_pExp14 -> Exp14 .                            (rule 14)
	Exp14 -> Exp14 . '[' Exp ']'                        (rule 79)
	Exp14 -> Exp14 . '(' ')'                            (rule 80)
	Exp14 -> Exp14 . '(' ListExp ')'                    (rule 81)
	Exp14 -> Exp14 . '.' CIdent                         (rule 82)
	Exp14 -> Exp14 . '->' CIdent                        (rule 83)
	Exp14 -> Exp14 . '++'                               (rule 84)
	Exp14 -> Exp14 . '--'                               (rule 85)

	'('            shift, and enter state 133
	'++'           shift, and enter state 134
	'--'           shift, and enter state 135
	'->'           shift, and enter state 136
	'.'            shift, and enter state 137
	'['            shift, and enter state 138
	%eof           accept


State 96

	%start_pExp13 -> Exp13 .                            (rule 13)

	%eof           accept


State 97

	%start_pExp12 -> Exp12 .                            (rule 12)
	Exp12 -> Exp12 . '*' Exp13                          (rule 71)
	Exp12 -> Exp12 . '/' Exp13                          (rule 72)
	Exp12 -> Exp12 . '%' Exp13                          (rule 73)

	'%'            shift, and enter state 130
	'*'            shift, and enter state 131
	'/'            shift, and enter state 132
	%eof           accept


State 98

	%start_pExp11 -> Exp11 .                            (rule 11)
	Exp11 -> Exp11 . '+' Exp12                          (rule 68)
	Exp11 -> Exp11 . '-' Exp12                          (rule 69)

	'+'            shift, and enter state 128
	'-'            shift, and enter state 129
	%eof           accept


State 99

	%start_pExp10 -> Exp10 .                            (rule 10)
	Exp10 -> Exp10 . '<<' Exp11                         (rule 65)
	Exp10 -> Exp10 . '>>' Exp11                         (rule 66)

	'<<'           shift, and enter state 126
	'>>'           shift, and enter state 127
	%eof           accept


State 100

	%start_pExp9 -> Exp9 .                              (rule 9)
	Exp9 -> Exp9 . '<=' Exp10                           (rule 62)
	Exp9 -> Exp9 . '>=' Exp10                           (rule 63)

	'<='           shift, and enter state 124
	'>='           shift, and enter state 125
	%eof           accept


State 101

	%start_pExp8 -> Exp8 .                              (rule 8)
	Exp8 -> Exp8 . '<' Exp9                             (rule 59)
	Exp8 -> Exp8 . '>' Exp9                             (rule 60)

	'<'            shift, and enter state 122
	'>'            shift, and enter state 123
	%eof           accept


State 102

	%start_pExp7 -> Exp7 .                              (rule 7)
	Exp7 -> Exp7 . '==' Exp8                            (rule 56)
	Exp7 -> Exp7 . '!=' Exp8                            (rule 57)

	'!='           shift, and enter state 120
	'=='           shift, and enter state 121
	%eof           accept


State 103

	%start_pExp6 -> Exp6 .                              (rule 6)
	Exp6 -> Exp6 . '&' Exp7                             (rule 54)

	'&'            shift, and enter state 119
	%eof           accept


State 104

	%start_pExp5 -> Exp5 .                              (rule 5)
	Exp5 -> Exp5 . '^' Exp6                             (rule 52)

	'^'            shift, and enter state 118
	%eof           accept


State 105

	%start_pExp4 -> Exp4 .                              (rule 4)
	Exp4 -> Exp4 . '|' Exp5                             (rule 50)

	'|'            shift, and enter state 117
	%eof           accept


State 106

	%start_pExp3 -> Exp3 .                              (rule 3)
	Exp3 -> Exp3 . '&&' Exp4                            (rule 48)

	'&&'           shift, and enter state 116
	%eof           accept


State 107

	%start_pExp2 -> Exp2 .                              (rule 2)
	Exp2 -> Exp2 . '||' Exp3                            (rule 46)

	'||'           shift, and enter state 115
	%eof           accept


State 108

	%start_pExp -> Exp .                                (rule 1)

	%eof           accept


State 109

	Exp -> Exp1 . '==>' Exp2                            (rule 44)
	Exp -> Exp1 .                                       (rule 45)

	'!'            reduce using rule 45
	'!='           reduce using rule 45
	'%'            reduce using rule 45
	'&'            reduce using rule 45
	'&&'           reduce using rule 45
	'('            reduce using rule 45
	')'            reduce using rule 45
	'*'            reduce using rule 45
	'+'            reduce using rule 45
	'++'           reduce using rule 45
	','            reduce using rule 45
	'-'            reduce using rule 45
	'--'           reduce using rule 45
	'->'           reduce using rule 45
	'.'            reduce using rule 45
	'/'            reduce using rule 45
	'<'            reduce using rule 45
	'<<'           reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'==>'          shift, and enter state 114
			(reduce using rule 45)

	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'>>'           reduce using rule 45
	'['            reduce using rule 45
	']'            reduce using rule 45
	'^'            reduce using rule 45
	'exists'       reduce using rule 45
	'forall'       reduce using rule 45
	'|'            reduce using rule 45
	'||'           reduce using rule 45
	'~'            reduce using rule 45
	L_charac       reduce using rule 45
	L_doubl        reduce using rule 45
	L_integ        reduce using rule 45
	L_quoted       reduce using rule 45
	L_Unsigned     reduce using rule 45
	L_Long         reduce using rule 45
	L_UnsignedLong reduce using rule 45
	L_Hexadecimal  reduce using rule 45
	L_HexUnsigned  reduce using rule 45
	L_HexLong      reduce using rule 45
	L_HexUnsLong   reduce using rule 45
	L_Octal        reduce using rule 45
	L_OctalUnsignedreduce using rule 45
	L_OctalLong    reduce using rule 45
	L_OctalUnsLong reduce using rule 45
	L_CDouble      reduce using rule 45
	L_CFloat       reduce using rule 45
	L_CLongDouble  reduce using rule 45
	L_CIdent       reduce using rule 45
	%eof           reduce using rule 45


State 110

	%start_pListExp -> ListExp .                        (rule 0)

	%eof           accept


State 111

	ListExp -> Exp . ListExp                            (rule 40)
	ListExp -> Exp .                                    (rule 42)
	ListExp -> Exp . ',' ListExp                        (rule 43)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	')'            reduce using rule 42
			(reduce using rule 41)

	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	','            shift, and enter state 113
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89
	%eof           reduce using rule 42
			(reduce using rule 41)


	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	ListExp        goto state 112
	Exp            goto state 111
	Exp2           goto state 49
	Exp3           goto state 50
	Exp4           goto state 51
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Exp1           goto state 109
	Unary_operator goto state 66

State 112

	ListExp -> Exp ListExp .                            (rule 40)

	')'            reduce using rule 40
	%eof           reduce using rule 40


State 113

	ListExp -> Exp ',' . ListExp                        (rule 43)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	')'            reduce using rule 41
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89
	%eof           reduce using rule 41

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	ListExp        goto state 172
	Exp            goto state 111
	Exp2           goto state 49
	Exp3           goto state 50
	Exp4           goto state 51
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Exp1           goto state 109
	Unary_operator goto state 66

State 114

	Exp -> Exp1 '==>' . Exp2                            (rule 44)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp2           goto state 171
	Exp3           goto state 50
	Exp4           goto state 51
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 115

	Exp2 -> Exp2 '||' . Exp3                            (rule 46)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp3           goto state 170
	Exp4           goto state 51
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 116

	Exp3 -> Exp3 '&&' . Exp4                            (rule 48)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp4           goto state 169
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 117

	Exp4 -> Exp4 '|' . Exp5                             (rule 50)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp5           goto state 168
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 118

	Exp5 -> Exp5 '^' . Exp6                             (rule 52)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp6           goto state 167
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 119

	Exp6 -> Exp6 '&' . Exp7                             (rule 54)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp7           goto state 166
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 120

	Exp7 -> Exp7 '!=' . Exp8                            (rule 57)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp8           goto state 165
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 121

	Exp7 -> Exp7 '==' . Exp8                            (rule 56)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp8           goto state 164
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 122

	Exp8 -> Exp8 '<' . Exp9                             (rule 59)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp9           goto state 163
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 123

	Exp8 -> Exp8 '>' . Exp9                             (rule 60)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp9           goto state 162
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 124

	Exp9 -> Exp9 '<=' . Exp10                           (rule 62)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp10          goto state 161
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 125

	Exp9 -> Exp9 '>=' . Exp10                           (rule 63)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp10          goto state 160
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 126

	Exp10 -> Exp10 '<<' . Exp11                         (rule 65)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp11          goto state 159
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 127

	Exp10 -> Exp10 '>>' . Exp11                         (rule 66)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp11          goto state 158
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 128

	Exp11 -> Exp11 '+' . Exp12                          (rule 68)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp12          goto state 157
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 129

	Exp11 -> Exp11 '-' . Exp12                          (rule 69)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp12          goto state 156
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 130

	Exp12 -> Exp12 '%' . Exp13                          (rule 73)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp13          goto state 155
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 131

	Exp12 -> Exp12 '*' . Exp13                          (rule 71)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp13          goto state 154
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 132

	Exp12 -> Exp12 '/' . Exp13                          (rule 72)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp13          goto state 153
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Unary_operator goto state 66

State 133

	Exp14 -> Exp14 '(' . ')'                            (rule 80)
	Exp14 -> Exp14 '(' . ListExp ')'                    (rule 81)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	')'            shift, and enter state 152
			(reduce using rule 41)

	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	ListExp        goto state 151
	Exp            goto state 111
	Exp2           goto state 49
	Exp3           goto state 50
	Exp4           goto state 51
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Exp1           goto state 109
	Unary_operator goto state 66

State 134

	Exp14 -> Exp14 '++' .                               (rule 84)

	'!'            reduce using rule 84
	'!='           reduce using rule 84
	'%'            reduce using rule 84
	'&'            reduce using rule 84
	'&&'           reduce using rule 84
	'('            reduce using rule 84
	')'            reduce using rule 84
	'*'            reduce using rule 84
	'+'            reduce using rule 84
	'++'           reduce using rule 84
	','            reduce using rule 84
	'-'            reduce using rule 84
	'--'           reduce using rule 84
	'->'           reduce using rule 84
	'.'            reduce using rule 84
	'/'            reduce using rule 84
	'<'            reduce using rule 84
	'<<'           reduce using rule 84
	'<='           reduce using rule 84
	'=='           reduce using rule 84
	'==>'          reduce using rule 84
	'>'            reduce using rule 84
	'>='           reduce using rule 84
	'>>'           reduce using rule 84
	'['            reduce using rule 84
	']'            reduce using rule 84
	'^'            reduce using rule 84
	'exists'       reduce using rule 84
	'forall'       reduce using rule 84
	'|'            reduce using rule 84
	'||'           reduce using rule 84
	'~'            reduce using rule 84
	L_charac       reduce using rule 84
	L_doubl        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84
	L_Unsigned     reduce using rule 84
	L_Long         reduce using rule 84
	L_UnsignedLong reduce using rule 84
	L_Hexadecimal  reduce using rule 84
	L_HexUnsigned  reduce using rule 84
	L_HexLong      reduce using rule 84
	L_HexUnsLong   reduce using rule 84
	L_Octal        reduce using rule 84
	L_OctalUnsignedreduce using rule 84
	L_OctalLong    reduce using rule 84
	L_OctalUnsLong reduce using rule 84
	L_CDouble      reduce using rule 84
	L_CFloat       reduce using rule 84
	L_CLongDouble  reduce using rule 84
	L_CIdent       reduce using rule 84
	%eof           reduce using rule 84


State 135

	Exp14 -> Exp14 '--' .                               (rule 85)

	'!'            reduce using rule 85
	'!='           reduce using rule 85
	'%'            reduce using rule 85
	'&'            reduce using rule 85
	'&&'           reduce using rule 85
	'('            reduce using rule 85
	')'            reduce using rule 85
	'*'            reduce using rule 85
	'+'            reduce using rule 85
	'++'           reduce using rule 85
	','            reduce using rule 85
	'-'            reduce using rule 85
	'--'           reduce using rule 85
	'->'           reduce using rule 85
	'.'            reduce using rule 85
	'/'            reduce using rule 85
	'<'            reduce using rule 85
	'<<'           reduce using rule 85
	'<='           reduce using rule 85
	'=='           reduce using rule 85
	'==>'          reduce using rule 85
	'>'            reduce using rule 85
	'>='           reduce using rule 85
	'>>'           reduce using rule 85
	'['            reduce using rule 85
	']'            reduce using rule 85
	'^'            reduce using rule 85
	'exists'       reduce using rule 85
	'forall'       reduce using rule 85
	'|'            reduce using rule 85
	'||'           reduce using rule 85
	'~'            reduce using rule 85
	L_charac       reduce using rule 85
	L_doubl        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85
	L_Unsigned     reduce using rule 85
	L_Long         reduce using rule 85
	L_UnsignedLong reduce using rule 85
	L_Hexadecimal  reduce using rule 85
	L_HexUnsigned  reduce using rule 85
	L_HexLong      reduce using rule 85
	L_HexUnsLong   reduce using rule 85
	L_Octal        reduce using rule 85
	L_OctalUnsignedreduce using rule 85
	L_OctalLong    reduce using rule 85
	L_OctalUnsLong reduce using rule 85
	L_CDouble      reduce using rule 85
	L_CFloat       reduce using rule 85
	L_CLongDouble  reduce using rule 85
	L_CIdent       reduce using rule 85
	%eof           reduce using rule 85


State 136

	Exp14 -> Exp14 '->' . CIdent                        (rule 83)

	L_CIdent       shift, and enter state 89

	CIdent         goto state 150

State 137

	Exp14 -> Exp14 '.' . CIdent                         (rule 82)

	L_CIdent       shift, and enter state 89

	CIdent         goto state 149

State 138

	Exp14 -> Exp14 '[' . Exp ']'                        (rule 79)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp            goto state 148
	Exp2           goto state 49
	Exp3           goto state 50
	Exp4           goto state 51
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Exp1           goto state 109
	Unary_operator goto state 66

State 139

	ListCIdent -> CIdent ',' . ListCIdent               (rule 95)

	L_CIdent       shift, and enter state 89

	CIdent         goto state 91
	ListCIdent     goto state 147

State 140

	Exp13 -> '--' Exp14 .                               (rule 76)
	Exp14 -> Exp14 . '[' Exp ']'                        (rule 79)
	Exp14 -> Exp14 . '(' ')'                            (rule 80)
	Exp14 -> Exp14 . '(' ListExp ')'                    (rule 81)
	Exp14 -> Exp14 . '.' CIdent                         (rule 82)
	Exp14 -> Exp14 . '->' CIdent                        (rule 83)
	Exp14 -> Exp14 . '++'                               (rule 84)
	Exp14 -> Exp14 . '--'                               (rule 85)

	'!'            reduce using rule 76
	'!='           reduce using rule 76
	'%'            reduce using rule 76
	'&'            reduce using rule 76
	'&&'           reduce using rule 76
	'('            shift, and enter state 133
			(reduce using rule 76)

	')'            reduce using rule 76
	'*'            reduce using rule 76
	'+'            reduce using rule 76
	'++'           shift, and enter state 134
			(reduce using rule 76)

	','            reduce using rule 76
	'-'            reduce using rule 76
	'--'           shift, and enter state 135
			(reduce using rule 76)

	'->'           shift, and enter state 136
			(reduce using rule 76)

	'.'            shift, and enter state 137
			(reduce using rule 76)

	'/'            reduce using rule 76
	'<'            reduce using rule 76
	'<<'           reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'==>'          reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	'>>'           reduce using rule 76
	'['            shift, and enter state 138
			(reduce using rule 76)

	']'            reduce using rule 76
	'^'            reduce using rule 76
	'exists'       reduce using rule 76
	'forall'       reduce using rule 76
	'|'            reduce using rule 76
	'||'           reduce using rule 76
	'~'            reduce using rule 76
	L_charac       reduce using rule 76
	L_doubl        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76
	L_Unsigned     reduce using rule 76
	L_Long         reduce using rule 76
	L_UnsignedLong reduce using rule 76
	L_Hexadecimal  reduce using rule 76
	L_HexUnsigned  reduce using rule 76
	L_HexLong      reduce using rule 76
	L_HexUnsLong   reduce using rule 76
	L_Octal        reduce using rule 76
	L_OctalUnsignedreduce using rule 76
	L_OctalLong    reduce using rule 76
	L_OctalUnsLong reduce using rule 76
	L_CDouble      reduce using rule 76
	L_CFloat       reduce using rule 76
	L_CLongDouble  reduce using rule 76
	L_CIdent       reduce using rule 76
	%eof           reduce using rule 76


State 141

	Exp13 -> '++' Exp14 .                               (rule 75)
	Exp14 -> Exp14 . '[' Exp ']'                        (rule 79)
	Exp14 -> Exp14 . '(' ')'                            (rule 80)
	Exp14 -> Exp14 . '(' ListExp ')'                    (rule 81)
	Exp14 -> Exp14 . '.' CIdent                         (rule 82)
	Exp14 -> Exp14 . '->' CIdent                        (rule 83)
	Exp14 -> Exp14 . '++'                               (rule 84)
	Exp14 -> Exp14 . '--'                               (rule 85)

	'!'            reduce using rule 75
	'!='           reduce using rule 75
	'%'            reduce using rule 75
	'&'            reduce using rule 75
	'&&'           reduce using rule 75
	'('            shift, and enter state 133
			(reduce using rule 75)

	')'            reduce using rule 75
	'*'            reduce using rule 75
	'+'            reduce using rule 75
	'++'           shift, and enter state 134
			(reduce using rule 75)

	','            reduce using rule 75
	'-'            reduce using rule 75
	'--'           shift, and enter state 135
			(reduce using rule 75)

	'->'           shift, and enter state 136
			(reduce using rule 75)

	'.'            shift, and enter state 137
			(reduce using rule 75)

	'/'            reduce using rule 75
	'<'            reduce using rule 75
	'<<'           reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'==>'          reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	'>>'           reduce using rule 75
	'['            shift, and enter state 138
			(reduce using rule 75)

	']'            reduce using rule 75
	'^'            reduce using rule 75
	'exists'       reduce using rule 75
	'forall'       reduce using rule 75
	'|'            reduce using rule 75
	'||'           reduce using rule 75
	'~'            reduce using rule 75
	L_charac       reduce using rule 75
	L_doubl        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75
	L_Unsigned     reduce using rule 75
	L_Long         reduce using rule 75
	L_UnsignedLong reduce using rule 75
	L_Hexadecimal  reduce using rule 75
	L_HexUnsigned  reduce using rule 75
	L_HexLong      reduce using rule 75
	L_HexUnsLong   reduce using rule 75
	L_Octal        reduce using rule 75
	L_OctalUnsignedreduce using rule 75
	L_OctalLong    reduce using rule 75
	L_OctalUnsLong reduce using rule 75
	L_CDouble      reduce using rule 75
	L_CFloat       reduce using rule 75
	L_CLongDouble  reduce using rule 75
	L_CIdent       reduce using rule 75
	%eof           reduce using rule 75


State 142

	Exp15 -> '(' Exp . ')'                              (rule 91)

	')'            shift, and enter state 146


State 143

	Exp13 -> Unary_operator Exp13 .                     (rule 77)

	'!'            reduce using rule 77
	'!='           reduce using rule 77
	'%'            reduce using rule 77
	'&'            reduce using rule 77
	'&&'           reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'+'            reduce using rule 77
	'++'           reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'--'           reduce using rule 77
	'->'           reduce using rule 77
	'.'            reduce using rule 77
	'/'            reduce using rule 77
	'<'            reduce using rule 77
	'<<'           reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'==>'          reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'>>'           reduce using rule 77
	'['            reduce using rule 77
	']'            reduce using rule 77
	'^'            reduce using rule 77
	'exists'       reduce using rule 77
	'forall'       reduce using rule 77
	'|'            reduce using rule 77
	'||'           reduce using rule 77
	'~'            reduce using rule 77
	L_charac       reduce using rule 77
	L_doubl        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77
	L_Unsigned     reduce using rule 77
	L_Long         reduce using rule 77
	L_UnsignedLong reduce using rule 77
	L_Hexadecimal  reduce using rule 77
	L_HexUnsigned  reduce using rule 77
	L_HexLong      reduce using rule 77
	L_HexUnsLong   reduce using rule 77
	L_Octal        reduce using rule 77
	L_OctalUnsignedreduce using rule 77
	L_OctalLong    reduce using rule 77
	L_OctalUnsLong reduce using rule 77
	L_CDouble      reduce using rule 77
	L_CFloat       reduce using rule 77
	L_CLongDouble  reduce using rule 77
	L_CIdent       reduce using rule 77
	%eof           reduce using rule 77


State 144

	Exp15 -> Quant ListCIdent . '|' Exp                 (rule 87)

	'|'            shift, and enter state 145


State 145

	Exp15 -> Quant ListCIdent '|' . Exp                 (rule 87)

	'!'            shift, and enter state 24
	'&'            shift, and enter state 25
	'('            shift, and enter state 67
	'*'            shift, and enter state 26
	'+'            shift, and enter state 27
	'++'           shift, and enter state 68
	'-'            shift, and enter state 28
	'--'           shift, and enter state 69
	'exists'       shift, and enter state 70
	'forall'       shift, and enter state 71
	'~'            shift, and enter state 29
	L_charac       shift, and enter state 22
	L_doubl        shift, and enter state 72
	L_integ        shift, and enter state 73
	L_quoted       shift, and enter state 74
	L_Unsigned     shift, and enter state 75
	L_Long         shift, and enter state 76
	L_UnsignedLong shift, and enter state 77
	L_Hexadecimal  shift, and enter state 78
	L_HexUnsigned  shift, and enter state 79
	L_HexLong      shift, and enter state 80
	L_HexUnsLong   shift, and enter state 81
	L_Octal        shift, and enter state 82
	L_OctalUnsignedshift, and enter state 83
	L_OctalLong    shift, and enter state 84
	L_OctalUnsLong shift, and enter state 85
	L_CDouble      shift, and enter state 86
	L_CFloat       shift, and enter state 87
	L_CLongDouble  shift, and enter state 88
	L_CIdent       shift, and enter state 89

	Char           goto state 30
	Double         goto state 31
	Integer        goto state 32
	String         goto state 33
	Unsigned       goto state 34
	Long           goto state 35
	UnsignedLong   goto state 36
	Hexadecimal    goto state 37
	HexUnsigned    goto state 38
	HexLong        goto state 39
	HexUnsLong     goto state 40
	Octal          goto state 41
	OctalUnsigned  goto state 42
	OctalLong      goto state 43
	OctalUnsLong   goto state 44
	CDouble        goto state 45
	CFloat         goto state 46
	CLongDouble    goto state 47
	CIdent         goto state 48
	Exp            goto state 175
	Exp2           goto state 49
	Exp3           goto state 50
	Exp4           goto state 51
	Exp5           goto state 52
	Exp6           goto state 53
	Exp7           goto state 54
	Exp8           goto state 55
	Exp9           goto state 56
	Exp10          goto state 57
	Exp11          goto state 58
	Exp12          goto state 59
	Exp13          goto state 60
	Exp14          goto state 61
	Exp15          goto state 62
	Quant          goto state 63
	Constant       goto state 64
	Exp1           goto state 109
	Unary_operator goto state 66

State 146

	Exp15 -> '(' Exp ')' .                              (rule 91)

	'!'            reduce using rule 91
	'!='           reduce using rule 91
	'%'            reduce using rule 91
	'&'            reduce using rule 91
	'&&'           reduce using rule 91
	'('            reduce using rule 91
	')'            reduce using rule 91
	'*'            reduce using rule 91
	'+'            reduce using rule 91
	'++'           reduce using rule 91
	','            reduce using rule 91
	'-'            reduce using rule 91
	'--'           reduce using rule 91
	'->'           reduce using rule 91
	'.'            reduce using rule 91
	'/'            reduce using rule 91
	'<'            reduce using rule 91
	'<<'           reduce using rule 91
	'<='           reduce using rule 91
	'=='           reduce using rule 91
	'==>'          reduce using rule 91
	'>'            reduce using rule 91
	'>='           reduce using rule 91
	'>>'           reduce using rule 91
	'['            reduce using rule 91
	']'            reduce using rule 91
	'^'            reduce using rule 91
	'exists'       reduce using rule 91
	'forall'       reduce using rule 91
	'|'            reduce using rule 91
	'||'           reduce using rule 91
	'~'            reduce using rule 91
	L_charac       reduce using rule 91
	L_doubl        reduce using rule 91
	L_integ        reduce using rule 91
	L_quoted       reduce using rule 91
	L_Unsigned     reduce using rule 91
	L_Long         reduce using rule 91
	L_UnsignedLong reduce using rule 91
	L_Hexadecimal  reduce using rule 91
	L_HexUnsigned  reduce using rule 91
	L_HexLong      reduce using rule 91
	L_HexUnsLong   reduce using rule 91
	L_Octal        reduce using rule 91
	L_OctalUnsignedreduce using rule 91
	L_OctalLong    reduce using rule 91
	L_OctalUnsLong reduce using rule 91
	L_CDouble      reduce using rule 91
	L_CFloat       reduce using rule 91
	L_CLongDouble  reduce using rule 91
	L_CIdent       reduce using rule 91
	%eof           reduce using rule 91


State 147

	ListCIdent -> CIdent ',' ListCIdent .               (rule 95)

	'|'            reduce using rule 95
	%eof           reduce using rule 95


State 148

	Exp14 -> Exp14 '[' Exp . ']'                        (rule 79)

	']'            shift, and enter state 174


State 149

	Exp14 -> Exp14 '.' CIdent .                         (rule 82)

	'!'            reduce using rule 82
	'!='           reduce using rule 82
	'%'            reduce using rule 82
	'&'            reduce using rule 82
	'&&'           reduce using rule 82
	'('            reduce using rule 82
	')'            reduce using rule 82
	'*'            reduce using rule 82
	'+'            reduce using rule 82
	'++'           reduce using rule 82
	','            reduce using rule 82
	'-'            reduce using rule 82
	'--'           reduce using rule 82
	'->'           reduce using rule 82
	'.'            reduce using rule 82
	'/'            reduce using rule 82
	'<'            reduce using rule 82
	'<<'           reduce using rule 82
	'<='           reduce using rule 82
	'=='           reduce using rule 82
	'==>'          reduce using rule 82
	'>'            reduce using rule 82
	'>='           reduce using rule 82
	'>>'           reduce using rule 82
	'['            reduce using rule 82
	']'            reduce using rule 82
	'^'            reduce using rule 82
	'exists'       reduce using rule 82
	'forall'       reduce using rule 82
	'|'            reduce using rule 82
	'||'           reduce using rule 82
	'~'            reduce using rule 82
	L_charac       reduce using rule 82
	L_doubl        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82
	L_Unsigned     reduce using rule 82
	L_Long         reduce using rule 82
	L_UnsignedLong reduce using rule 82
	L_Hexadecimal  reduce using rule 82
	L_HexUnsigned  reduce using rule 82
	L_HexLong      reduce using rule 82
	L_HexUnsLong   reduce using rule 82
	L_Octal        reduce using rule 82
	L_OctalUnsignedreduce using rule 82
	L_OctalLong    reduce using rule 82
	L_OctalUnsLong reduce using rule 82
	L_CDouble      reduce using rule 82
	L_CFloat       reduce using rule 82
	L_CLongDouble  reduce using rule 82
	L_CIdent       reduce using rule 82
	%eof           reduce using rule 82


State 150

	Exp14 -> Exp14 '->' CIdent .                        (rule 83)

	'!'            reduce using rule 83
	'!='           reduce using rule 83
	'%'            reduce using rule 83
	'&'            reduce using rule 83
	'&&'           reduce using rule 83
	'('            reduce using rule 83
	')'            reduce using rule 83
	'*'            reduce using rule 83
	'+'            reduce using rule 83
	'++'           reduce using rule 83
	','            reduce using rule 83
	'-'            reduce using rule 83
	'--'           reduce using rule 83
	'->'           reduce using rule 83
	'.'            reduce using rule 83
	'/'            reduce using rule 83
	'<'            reduce using rule 83
	'<<'           reduce using rule 83
	'<='           reduce using rule 83
	'=='           reduce using rule 83
	'==>'          reduce using rule 83
	'>'            reduce using rule 83
	'>='           reduce using rule 83
	'>>'           reduce using rule 83
	'['            reduce using rule 83
	']'            reduce using rule 83
	'^'            reduce using rule 83
	'exists'       reduce using rule 83
	'forall'       reduce using rule 83
	'|'            reduce using rule 83
	'||'           reduce using rule 83
	'~'            reduce using rule 83
	L_charac       reduce using rule 83
	L_doubl        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83
	L_Unsigned     reduce using rule 83
	L_Long         reduce using rule 83
	L_UnsignedLong reduce using rule 83
	L_Hexadecimal  reduce using rule 83
	L_HexUnsigned  reduce using rule 83
	L_HexLong      reduce using rule 83
	L_HexUnsLong   reduce using rule 83
	L_Octal        reduce using rule 83
	L_OctalUnsignedreduce using rule 83
	L_OctalLong    reduce using rule 83
	L_OctalUnsLong reduce using rule 83
	L_CDouble      reduce using rule 83
	L_CFloat       reduce using rule 83
	L_CLongDouble  reduce using rule 83
	L_CIdent       reduce using rule 83
	%eof           reduce using rule 83


State 151

	Exp14 -> Exp14 '(' ListExp . ')'                    (rule 81)

	')'            shift, and enter state 173


State 152

	Exp14 -> Exp14 '(' ')' .                            (rule 80)

	'!'            reduce using rule 80
	'!='           reduce using rule 80
	'%'            reduce using rule 80
	'&'            reduce using rule 80
	'&&'           reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	'++'           reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	'--'           reduce using rule 80
	'->'           reduce using rule 80
	'.'            reduce using rule 80
	'/'            reduce using rule 80
	'<'            reduce using rule 80
	'<<'           reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'==>'          reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'>>'           reduce using rule 80
	'['            reduce using rule 80
	']'            reduce using rule 80
	'^'            reduce using rule 80
	'exists'       reduce using rule 80
	'forall'       reduce using rule 80
	'|'            reduce using rule 80
	'||'           reduce using rule 80
	'~'            reduce using rule 80
	L_charac       reduce using rule 80
	L_doubl        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80
	L_Unsigned     reduce using rule 80
	L_Long         reduce using rule 80
	L_UnsignedLong reduce using rule 80
	L_Hexadecimal  reduce using rule 80
	L_HexUnsigned  reduce using rule 80
	L_HexLong      reduce using rule 80
	L_HexUnsLong   reduce using rule 80
	L_Octal        reduce using rule 80
	L_OctalUnsignedreduce using rule 80
	L_OctalLong    reduce using rule 80
	L_OctalUnsLong reduce using rule 80
	L_CDouble      reduce using rule 80
	L_CFloat       reduce using rule 80
	L_CLongDouble  reduce using rule 80
	L_CIdent       reduce using rule 80
	%eof           reduce using rule 80


State 153

	Exp12 -> Exp12 '/' Exp13 .                          (rule 72)

	'!'            reduce using rule 72
	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&'            reduce using rule 72
	'&&'           reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	'++'           reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'--'           reduce using rule 72
	'->'           reduce using rule 72
	'.'            reduce using rule 72
	'/'            reduce using rule 72
	'<'            reduce using rule 72
	'<<'           reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'==>'          reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'>>'           reduce using rule 72
	'['            reduce using rule 72
	']'            reduce using rule 72
	'^'            reduce using rule 72
	'exists'       reduce using rule 72
	'forall'       reduce using rule 72
	'|'            reduce using rule 72
	'||'           reduce using rule 72
	'~'            reduce using rule 72
	L_charac       reduce using rule 72
	L_doubl        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72
	L_Unsigned     reduce using rule 72
	L_Long         reduce using rule 72
	L_UnsignedLong reduce using rule 72
	L_Hexadecimal  reduce using rule 72
	L_HexUnsigned  reduce using rule 72
	L_HexLong      reduce using rule 72
	L_HexUnsLong   reduce using rule 72
	L_Octal        reduce using rule 72
	L_OctalUnsignedreduce using rule 72
	L_OctalLong    reduce using rule 72
	L_OctalUnsLong reduce using rule 72
	L_CDouble      reduce using rule 72
	L_CFloat       reduce using rule 72
	L_CLongDouble  reduce using rule 72
	L_CIdent       reduce using rule 72
	%eof           reduce using rule 72


State 154

	Exp12 -> Exp12 '*' Exp13 .                          (rule 71)

	'!'            reduce using rule 71
	'!='           reduce using rule 71
	'%'            reduce using rule 71
	'&'            reduce using rule 71
	'&&'           reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	'++'           reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'--'           reduce using rule 71
	'->'           reduce using rule 71
	'.'            reduce using rule 71
	'/'            reduce using rule 71
	'<'            reduce using rule 71
	'<<'           reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'==>'          reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'>>'           reduce using rule 71
	'['            reduce using rule 71
	']'            reduce using rule 71
	'^'            reduce using rule 71
	'exists'       reduce using rule 71
	'forall'       reduce using rule 71
	'|'            reduce using rule 71
	'||'           reduce using rule 71
	'~'            reduce using rule 71
	L_charac       reduce using rule 71
	L_doubl        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71
	L_Unsigned     reduce using rule 71
	L_Long         reduce using rule 71
	L_UnsignedLong reduce using rule 71
	L_Hexadecimal  reduce using rule 71
	L_HexUnsigned  reduce using rule 71
	L_HexLong      reduce using rule 71
	L_HexUnsLong   reduce using rule 71
	L_Octal        reduce using rule 71
	L_OctalUnsignedreduce using rule 71
	L_OctalLong    reduce using rule 71
	L_OctalUnsLong reduce using rule 71
	L_CDouble      reduce using rule 71
	L_CFloat       reduce using rule 71
	L_CLongDouble  reduce using rule 71
	L_CIdent       reduce using rule 71
	%eof           reduce using rule 71


State 155

	Exp12 -> Exp12 '%' Exp13 .                          (rule 73)

	'!'            reduce using rule 73
	'!='           reduce using rule 73
	'%'            reduce using rule 73
	'&'            reduce using rule 73
	'&&'           reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	'++'           reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'--'           reduce using rule 73
	'->'           reduce using rule 73
	'.'            reduce using rule 73
	'/'            reduce using rule 73
	'<'            reduce using rule 73
	'<<'           reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'==>'          reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'>>'           reduce using rule 73
	'['            reduce using rule 73
	']'            reduce using rule 73
	'^'            reduce using rule 73
	'exists'       reduce using rule 73
	'forall'       reduce using rule 73
	'|'            reduce using rule 73
	'||'           reduce using rule 73
	'~'            reduce using rule 73
	L_charac       reduce using rule 73
	L_doubl        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73
	L_Unsigned     reduce using rule 73
	L_Long         reduce using rule 73
	L_UnsignedLong reduce using rule 73
	L_Hexadecimal  reduce using rule 73
	L_HexUnsigned  reduce using rule 73
	L_HexLong      reduce using rule 73
	L_HexUnsLong   reduce using rule 73
	L_Octal        reduce using rule 73
	L_OctalUnsignedreduce using rule 73
	L_OctalLong    reduce using rule 73
	L_OctalUnsLong reduce using rule 73
	L_CDouble      reduce using rule 73
	L_CFloat       reduce using rule 73
	L_CLongDouble  reduce using rule 73
	L_CIdent       reduce using rule 73
	%eof           reduce using rule 73


State 156

	Exp11 -> Exp11 '-' Exp12 .                          (rule 69)
	Exp12 -> Exp12 . '*' Exp13                          (rule 71)
	Exp12 -> Exp12 . '/' Exp13                          (rule 72)
	Exp12 -> Exp12 . '%' Exp13                          (rule 73)

	'!'            reduce using rule 69
	'!='           reduce using rule 69
	'%'            shift, and enter state 130
			(reduce using rule 69)

	'&'            reduce using rule 69
	'&&'           reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	'*'            shift, and enter state 131
			(reduce using rule 69)

	'+'            reduce using rule 69
	'++'           reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'--'           reduce using rule 69
	'->'           reduce using rule 69
	'.'            reduce using rule 69
	'/'            shift, and enter state 132
			(reduce using rule 69)

	'<'            reduce using rule 69
	'<<'           reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'==>'          reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'>>'           reduce using rule 69
	'['            reduce using rule 69
	']'            reduce using rule 69
	'^'            reduce using rule 69
	'exists'       reduce using rule 69
	'forall'       reduce using rule 69
	'|'            reduce using rule 69
	'||'           reduce using rule 69
	'~'            reduce using rule 69
	L_charac       reduce using rule 69
	L_doubl        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69
	L_Unsigned     reduce using rule 69
	L_Long         reduce using rule 69
	L_UnsignedLong reduce using rule 69
	L_Hexadecimal  reduce using rule 69
	L_HexUnsigned  reduce using rule 69
	L_HexLong      reduce using rule 69
	L_HexUnsLong   reduce using rule 69
	L_Octal        reduce using rule 69
	L_OctalUnsignedreduce using rule 69
	L_OctalLong    reduce using rule 69
	L_OctalUnsLong reduce using rule 69
	L_CDouble      reduce using rule 69
	L_CFloat       reduce using rule 69
	L_CLongDouble  reduce using rule 69
	L_CIdent       reduce using rule 69
	%eof           reduce using rule 69


State 157

	Exp11 -> Exp11 '+' Exp12 .                          (rule 68)
	Exp12 -> Exp12 . '*' Exp13                          (rule 71)
	Exp12 -> Exp12 . '/' Exp13                          (rule 72)
	Exp12 -> Exp12 . '%' Exp13                          (rule 73)

	'!'            reduce using rule 68
	'!='           reduce using rule 68
	'%'            shift, and enter state 130
			(reduce using rule 68)

	'&'            reduce using rule 68
	'&&'           reduce using rule 68
	'('            reduce using rule 68
	')'            reduce using rule 68
	'*'            shift, and enter state 131
			(reduce using rule 68)

	'+'            reduce using rule 68
	'++'           reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'--'           reduce using rule 68
	'->'           reduce using rule 68
	'.'            reduce using rule 68
	'/'            shift, and enter state 132
			(reduce using rule 68)

	'<'            reduce using rule 68
	'<<'           reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'==>'          reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'>>'           reduce using rule 68
	'['            reduce using rule 68
	']'            reduce using rule 68
	'^'            reduce using rule 68
	'exists'       reduce using rule 68
	'forall'       reduce using rule 68
	'|'            reduce using rule 68
	'||'           reduce using rule 68
	'~'            reduce using rule 68
	L_charac       reduce using rule 68
	L_doubl        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68
	L_Unsigned     reduce using rule 68
	L_Long         reduce using rule 68
	L_UnsignedLong reduce using rule 68
	L_Hexadecimal  reduce using rule 68
	L_HexUnsigned  reduce using rule 68
	L_HexLong      reduce using rule 68
	L_HexUnsLong   reduce using rule 68
	L_Octal        reduce using rule 68
	L_OctalUnsignedreduce using rule 68
	L_OctalLong    reduce using rule 68
	L_OctalUnsLong reduce using rule 68
	L_CDouble      reduce using rule 68
	L_CFloat       reduce using rule 68
	L_CLongDouble  reduce using rule 68
	L_CIdent       reduce using rule 68
	%eof           reduce using rule 68


State 158

	Exp10 -> Exp10 '>>' Exp11 .                         (rule 66)
	Exp11 -> Exp11 . '+' Exp12                          (rule 68)
	Exp11 -> Exp11 . '-' Exp12                          (rule 69)

	'!'            reduce using rule 66
	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&'            reduce using rule 66
	'&&'           reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            shift, and enter state 128
			(reduce using rule 66)

	'++'           reduce using rule 66
	','            reduce using rule 66
	'-'            shift, and enter state 129
			(reduce using rule 66)

	'--'           reduce using rule 66
	'->'           reduce using rule 66
	'.'            reduce using rule 66
	'/'            reduce using rule 66
	'<'            reduce using rule 66
	'<<'           reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'==>'          reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'>>'           reduce using rule 66
	'['            reduce using rule 66
	']'            reduce using rule 66
	'^'            reduce using rule 66
	'exists'       reduce using rule 66
	'forall'       reduce using rule 66
	'|'            reduce using rule 66
	'||'           reduce using rule 66
	'~'            reduce using rule 66
	L_charac       reduce using rule 66
	L_doubl        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66
	L_Unsigned     reduce using rule 66
	L_Long         reduce using rule 66
	L_UnsignedLong reduce using rule 66
	L_Hexadecimal  reduce using rule 66
	L_HexUnsigned  reduce using rule 66
	L_HexLong      reduce using rule 66
	L_HexUnsLong   reduce using rule 66
	L_Octal        reduce using rule 66
	L_OctalUnsignedreduce using rule 66
	L_OctalLong    reduce using rule 66
	L_OctalUnsLong reduce using rule 66
	L_CDouble      reduce using rule 66
	L_CFloat       reduce using rule 66
	L_CLongDouble  reduce using rule 66
	L_CIdent       reduce using rule 66
	%eof           reduce using rule 66


State 159

	Exp10 -> Exp10 '<<' Exp11 .                         (rule 65)
	Exp11 -> Exp11 . '+' Exp12                          (rule 68)
	Exp11 -> Exp11 . '-' Exp12                          (rule 69)

	'!'            reduce using rule 65
	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&'            reduce using rule 65
	'&&'           reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            shift, and enter state 128
			(reduce using rule 65)

	'++'           reduce using rule 65
	','            reduce using rule 65
	'-'            shift, and enter state 129
			(reduce using rule 65)

	'--'           reduce using rule 65
	'->'           reduce using rule 65
	'.'            reduce using rule 65
	'/'            reduce using rule 65
	'<'            reduce using rule 65
	'<<'           reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'==>'          reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'>>'           reduce using rule 65
	'['            reduce using rule 65
	']'            reduce using rule 65
	'^'            reduce using rule 65
	'exists'       reduce using rule 65
	'forall'       reduce using rule 65
	'|'            reduce using rule 65
	'||'           reduce using rule 65
	'~'            reduce using rule 65
	L_charac       reduce using rule 65
	L_doubl        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65
	L_Unsigned     reduce using rule 65
	L_Long         reduce using rule 65
	L_UnsignedLong reduce using rule 65
	L_Hexadecimal  reduce using rule 65
	L_HexUnsigned  reduce using rule 65
	L_HexLong      reduce using rule 65
	L_HexUnsLong   reduce using rule 65
	L_Octal        reduce using rule 65
	L_OctalUnsignedreduce using rule 65
	L_OctalLong    reduce using rule 65
	L_OctalUnsLong reduce using rule 65
	L_CDouble      reduce using rule 65
	L_CFloat       reduce using rule 65
	L_CLongDouble  reduce using rule 65
	L_CIdent       reduce using rule 65
	%eof           reduce using rule 65


State 160

	Exp9 -> Exp9 '>=' Exp10 .                           (rule 63)
	Exp10 -> Exp10 . '<<' Exp11                         (rule 65)
	Exp10 -> Exp10 . '>>' Exp11                         (rule 66)

	'!'            reduce using rule 63
	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&'            reduce using rule 63
	'&&'           reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	'++'           reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'--'           reduce using rule 63
	'->'           reduce using rule 63
	'.'            reduce using rule 63
	'/'            reduce using rule 63
	'<'            reduce using rule 63
	'<<'           shift, and enter state 126
			(reduce using rule 63)

	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'==>'          reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'>>'           shift, and enter state 127
			(reduce using rule 63)

	'['            reduce using rule 63
	']'            reduce using rule 63
	'^'            reduce using rule 63
	'exists'       reduce using rule 63
	'forall'       reduce using rule 63
	'|'            reduce using rule 63
	'||'           reduce using rule 63
	'~'            reduce using rule 63
	L_charac       reduce using rule 63
	L_doubl        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63
	L_Unsigned     reduce using rule 63
	L_Long         reduce using rule 63
	L_UnsignedLong reduce using rule 63
	L_Hexadecimal  reduce using rule 63
	L_HexUnsigned  reduce using rule 63
	L_HexLong      reduce using rule 63
	L_HexUnsLong   reduce using rule 63
	L_Octal        reduce using rule 63
	L_OctalUnsignedreduce using rule 63
	L_OctalLong    reduce using rule 63
	L_OctalUnsLong reduce using rule 63
	L_CDouble      reduce using rule 63
	L_CFloat       reduce using rule 63
	L_CLongDouble  reduce using rule 63
	L_CIdent       reduce using rule 63
	%eof           reduce using rule 63


State 161

	Exp9 -> Exp9 '<=' Exp10 .                           (rule 62)
	Exp10 -> Exp10 . '<<' Exp11                         (rule 65)
	Exp10 -> Exp10 . '>>' Exp11                         (rule 66)

	'!'            reduce using rule 62
	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&'            reduce using rule 62
	'&&'           reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	'++'           reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'--'           reduce using rule 62
	'->'           reduce using rule 62
	'.'            reduce using rule 62
	'/'            reduce using rule 62
	'<'            reduce using rule 62
	'<<'           shift, and enter state 126
			(reduce using rule 62)

	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'==>'          reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'>>'           shift, and enter state 127
			(reduce using rule 62)

	'['            reduce using rule 62
	']'            reduce using rule 62
	'^'            reduce using rule 62
	'exists'       reduce using rule 62
	'forall'       reduce using rule 62
	'|'            reduce using rule 62
	'||'           reduce using rule 62
	'~'            reduce using rule 62
	L_charac       reduce using rule 62
	L_doubl        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62
	L_Unsigned     reduce using rule 62
	L_Long         reduce using rule 62
	L_UnsignedLong reduce using rule 62
	L_Hexadecimal  reduce using rule 62
	L_HexUnsigned  reduce using rule 62
	L_HexLong      reduce using rule 62
	L_HexUnsLong   reduce using rule 62
	L_Octal        reduce using rule 62
	L_OctalUnsignedreduce using rule 62
	L_OctalLong    reduce using rule 62
	L_OctalUnsLong reduce using rule 62
	L_CDouble      reduce using rule 62
	L_CFloat       reduce using rule 62
	L_CLongDouble  reduce using rule 62
	L_CIdent       reduce using rule 62
	%eof           reduce using rule 62


State 162

	Exp8 -> Exp8 '>' Exp9 .                             (rule 60)
	Exp9 -> Exp9 . '<=' Exp10                           (rule 62)
	Exp9 -> Exp9 . '>=' Exp10                           (rule 63)

	'!'            reduce using rule 60
	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&'            reduce using rule 60
	'&&'           reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	'++'           reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'--'           reduce using rule 60
	'->'           reduce using rule 60
	'.'            reduce using rule 60
	'/'            reduce using rule 60
	'<'            reduce using rule 60
	'<<'           reduce using rule 60
	'<='           shift, and enter state 124
			(reduce using rule 60)

	'=='           reduce using rule 60
	'==>'          reduce using rule 60
	'>'            reduce using rule 60
	'>='           shift, and enter state 125
			(reduce using rule 60)

	'>>'           reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'^'            reduce using rule 60
	'exists'       reduce using rule 60
	'forall'       reduce using rule 60
	'|'            reduce using rule 60
	'||'           reduce using rule 60
	'~'            reduce using rule 60
	L_charac       reduce using rule 60
	L_doubl        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60
	L_Unsigned     reduce using rule 60
	L_Long         reduce using rule 60
	L_UnsignedLong reduce using rule 60
	L_Hexadecimal  reduce using rule 60
	L_HexUnsigned  reduce using rule 60
	L_HexLong      reduce using rule 60
	L_HexUnsLong   reduce using rule 60
	L_Octal        reduce using rule 60
	L_OctalUnsignedreduce using rule 60
	L_OctalLong    reduce using rule 60
	L_OctalUnsLong reduce using rule 60
	L_CDouble      reduce using rule 60
	L_CFloat       reduce using rule 60
	L_CLongDouble  reduce using rule 60
	L_CIdent       reduce using rule 60
	%eof           reduce using rule 60


State 163

	Exp8 -> Exp8 '<' Exp9 .                             (rule 59)
	Exp9 -> Exp9 . '<=' Exp10                           (rule 62)
	Exp9 -> Exp9 . '>=' Exp10                           (rule 63)

	'!'            reduce using rule 59
	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&'            reduce using rule 59
	'&&'           reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	'++'           reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'--'           reduce using rule 59
	'->'           reduce using rule 59
	'.'            reduce using rule 59
	'/'            reduce using rule 59
	'<'            reduce using rule 59
	'<<'           reduce using rule 59
	'<='           shift, and enter state 124
			(reduce using rule 59)

	'=='           reduce using rule 59
	'==>'          reduce using rule 59
	'>'            reduce using rule 59
	'>='           shift, and enter state 125
			(reduce using rule 59)

	'>>'           reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'^'            reduce using rule 59
	'exists'       reduce using rule 59
	'forall'       reduce using rule 59
	'|'            reduce using rule 59
	'||'           reduce using rule 59
	'~'            reduce using rule 59
	L_charac       reduce using rule 59
	L_doubl        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59
	L_Unsigned     reduce using rule 59
	L_Long         reduce using rule 59
	L_UnsignedLong reduce using rule 59
	L_Hexadecimal  reduce using rule 59
	L_HexUnsigned  reduce using rule 59
	L_HexLong      reduce using rule 59
	L_HexUnsLong   reduce using rule 59
	L_Octal        reduce using rule 59
	L_OctalUnsignedreduce using rule 59
	L_OctalLong    reduce using rule 59
	L_OctalUnsLong reduce using rule 59
	L_CDouble      reduce using rule 59
	L_CFloat       reduce using rule 59
	L_CLongDouble  reduce using rule 59
	L_CIdent       reduce using rule 59
	%eof           reduce using rule 59


State 164

	Exp7 -> Exp7 '==' Exp8 .                            (rule 56)
	Exp8 -> Exp8 . '<' Exp9                             (rule 59)
	Exp8 -> Exp8 . '>' Exp9                             (rule 60)

	'!'            reduce using rule 56
	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	'++'           reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'--'           reduce using rule 56
	'->'           reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	'<'            shift, and enter state 122
			(reduce using rule 56)

	'<<'           reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'==>'          reduce using rule 56
	'>'            shift, and enter state 123
			(reduce using rule 56)

	'>='           reduce using rule 56
	'>>'           reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	'^'            reduce using rule 56
	'exists'       reduce using rule 56
	'forall'       reduce using rule 56
	'|'            reduce using rule 56
	'||'           reduce using rule 56
	'~'            reduce using rule 56
	L_charac       reduce using rule 56
	L_doubl        reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56
	L_Unsigned     reduce using rule 56
	L_Long         reduce using rule 56
	L_UnsignedLong reduce using rule 56
	L_Hexadecimal  reduce using rule 56
	L_HexUnsigned  reduce using rule 56
	L_HexLong      reduce using rule 56
	L_HexUnsLong   reduce using rule 56
	L_Octal        reduce using rule 56
	L_OctalUnsignedreduce using rule 56
	L_OctalLong    reduce using rule 56
	L_OctalUnsLong reduce using rule 56
	L_CDouble      reduce using rule 56
	L_CFloat       reduce using rule 56
	L_CLongDouble  reduce using rule 56
	L_CIdent       reduce using rule 56
	%eof           reduce using rule 56


State 165

	Exp7 -> Exp7 '!=' Exp8 .                            (rule 57)
	Exp8 -> Exp8 . '<' Exp9                             (rule 59)
	Exp8 -> Exp8 . '>' Exp9                             (rule 60)

	'!'            reduce using rule 57
	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&'            reduce using rule 57
	'&&'           reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	'++'           reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'--'           reduce using rule 57
	'->'           reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	'<'            shift, and enter state 122
			(reduce using rule 57)

	'<<'           reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'==>'          reduce using rule 57
	'>'            shift, and enter state 123
			(reduce using rule 57)

	'>='           reduce using rule 57
	'>>'           reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	'^'            reduce using rule 57
	'exists'       reduce using rule 57
	'forall'       reduce using rule 57
	'|'            reduce using rule 57
	'||'           reduce using rule 57
	'~'            reduce using rule 57
	L_charac       reduce using rule 57
	L_doubl        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57
	L_Unsigned     reduce using rule 57
	L_Long         reduce using rule 57
	L_UnsignedLong reduce using rule 57
	L_Hexadecimal  reduce using rule 57
	L_HexUnsigned  reduce using rule 57
	L_HexLong      reduce using rule 57
	L_HexUnsLong   reduce using rule 57
	L_Octal        reduce using rule 57
	L_OctalUnsignedreduce using rule 57
	L_OctalLong    reduce using rule 57
	L_OctalUnsLong reduce using rule 57
	L_CDouble      reduce using rule 57
	L_CFloat       reduce using rule 57
	L_CLongDouble  reduce using rule 57
	L_CIdent       reduce using rule 57
	%eof           reduce using rule 57


State 166

	Exp6 -> Exp6 '&' Exp7 .                             (rule 54)
	Exp7 -> Exp7 . '==' Exp8                            (rule 56)
	Exp7 -> Exp7 . '!=' Exp8                            (rule 57)

	'!'            reduce using rule 54
	'!='           shift, and enter state 120
			(reduce using rule 54)

	'%'            reduce using rule 54
	'&'            reduce using rule 54
	'&&'           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	'++'           reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'--'           reduce using rule 54
	'->'           reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	'<'            reduce using rule 54
	'<<'           reduce using rule 54
	'<='           reduce using rule 54
	'=='           shift, and enter state 121
			(reduce using rule 54)

	'==>'          reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'>>'           reduce using rule 54
	'['            reduce using rule 54
	']'            reduce using rule 54
	'^'            reduce using rule 54
	'exists'       reduce using rule 54
	'forall'       reduce using rule 54
	'|'            reduce using rule 54
	'||'           reduce using rule 54
	'~'            reduce using rule 54
	L_charac       reduce using rule 54
	L_doubl        reduce using rule 54
	L_integ        reduce using rule 54
	L_quoted       reduce using rule 54
	L_Unsigned     reduce using rule 54
	L_Long         reduce using rule 54
	L_UnsignedLong reduce using rule 54
	L_Hexadecimal  reduce using rule 54
	L_HexUnsigned  reduce using rule 54
	L_HexLong      reduce using rule 54
	L_HexUnsLong   reduce using rule 54
	L_Octal        reduce using rule 54
	L_OctalUnsignedreduce using rule 54
	L_OctalLong    reduce using rule 54
	L_OctalUnsLong reduce using rule 54
	L_CDouble      reduce using rule 54
	L_CFloat       reduce using rule 54
	L_CLongDouble  reduce using rule 54
	L_CIdent       reduce using rule 54
	%eof           reduce using rule 54


State 167

	Exp5 -> Exp5 '^' Exp6 .                             (rule 52)
	Exp6 -> Exp6 . '&' Exp7                             (rule 54)

	'!'            reduce using rule 52
	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&'            shift, and enter state 119
			(reduce using rule 52)

	'&&'           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	'++'           reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'--'           reduce using rule 52
	'->'           reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	'<'            reduce using rule 52
	'<<'           reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'==>'          reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'>>'           reduce using rule 52
	'['            reduce using rule 52
	']'            reduce using rule 52
	'^'            reduce using rule 52
	'exists'       reduce using rule 52
	'forall'       reduce using rule 52
	'|'            reduce using rule 52
	'||'           reduce using rule 52
	'~'            reduce using rule 52
	L_charac       reduce using rule 52
	L_doubl        reduce using rule 52
	L_integ        reduce using rule 52
	L_quoted       reduce using rule 52
	L_Unsigned     reduce using rule 52
	L_Long         reduce using rule 52
	L_UnsignedLong reduce using rule 52
	L_Hexadecimal  reduce using rule 52
	L_HexUnsigned  reduce using rule 52
	L_HexLong      reduce using rule 52
	L_HexUnsLong   reduce using rule 52
	L_Octal        reduce using rule 52
	L_OctalUnsignedreduce using rule 52
	L_OctalLong    reduce using rule 52
	L_OctalUnsLong reduce using rule 52
	L_CDouble      reduce using rule 52
	L_CFloat       reduce using rule 52
	L_CLongDouble  reduce using rule 52
	L_CIdent       reduce using rule 52
	%eof           reduce using rule 52


State 168

	Exp4 -> Exp4 '|' Exp5 .                             (rule 50)
	Exp5 -> Exp5 . '^' Exp6                             (rule 52)

	'!'            reduce using rule 50
	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	'++'           reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'--'           reduce using rule 50
	'->'           reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	'<'            reduce using rule 50
	'<<'           reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'==>'          reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'>>'           reduce using rule 50
	'['            reduce using rule 50
	']'            reduce using rule 50
	'^'            shift, and enter state 118
			(reduce using rule 50)

	'exists'       reduce using rule 50
	'forall'       reduce using rule 50
	'|'            reduce using rule 50
	'||'           reduce using rule 50
	'~'            reduce using rule 50
	L_charac       reduce using rule 50
	L_doubl        reduce using rule 50
	L_integ        reduce using rule 50
	L_quoted       reduce using rule 50
	L_Unsigned     reduce using rule 50
	L_Long         reduce using rule 50
	L_UnsignedLong reduce using rule 50
	L_Hexadecimal  reduce using rule 50
	L_HexUnsigned  reduce using rule 50
	L_HexLong      reduce using rule 50
	L_HexUnsLong   reduce using rule 50
	L_Octal        reduce using rule 50
	L_OctalUnsignedreduce using rule 50
	L_OctalLong    reduce using rule 50
	L_OctalUnsLong reduce using rule 50
	L_CDouble      reduce using rule 50
	L_CFloat       reduce using rule 50
	L_CLongDouble  reduce using rule 50
	L_CIdent       reduce using rule 50
	%eof           reduce using rule 50


State 169

	Exp3 -> Exp3 '&&' Exp4 .                            (rule 48)
	Exp4 -> Exp4 . '|' Exp5                             (rule 50)

	'!'            reduce using rule 48
	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'++'           reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'--'           reduce using rule 48
	'->'           reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	'<'            reduce using rule 48
	'<<'           reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'==>'          reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'>>'           reduce using rule 48
	'['            reduce using rule 48
	']'            reduce using rule 48
	'^'            reduce using rule 48
	'exists'       reduce using rule 48
	'forall'       reduce using rule 48
	'|'            shift, and enter state 117
			(reduce using rule 48)

	'||'           reduce using rule 48
	'~'            reduce using rule 48
	L_charac       reduce using rule 48
	L_doubl        reduce using rule 48
	L_integ        reduce using rule 48
	L_quoted       reduce using rule 48
	L_Unsigned     reduce using rule 48
	L_Long         reduce using rule 48
	L_UnsignedLong reduce using rule 48
	L_Hexadecimal  reduce using rule 48
	L_HexUnsigned  reduce using rule 48
	L_HexLong      reduce using rule 48
	L_HexUnsLong   reduce using rule 48
	L_Octal        reduce using rule 48
	L_OctalUnsignedreduce using rule 48
	L_OctalLong    reduce using rule 48
	L_OctalUnsLong reduce using rule 48
	L_CDouble      reduce using rule 48
	L_CFloat       reduce using rule 48
	L_CLongDouble  reduce using rule 48
	L_CIdent       reduce using rule 48
	%eof           reduce using rule 48


State 170

	Exp2 -> Exp2 '||' Exp3 .                            (rule 46)
	Exp3 -> Exp3 . '&&' Exp4                            (rule 48)

	'!'            reduce using rule 46
	'!='           reduce using rule 46
	'%'            reduce using rule 46
	'&'            reduce using rule 46
	'&&'           shift, and enter state 116
			(reduce using rule 46)

	'('            reduce using rule 46
	')'            reduce using rule 46
	'*'            reduce using rule 46
	'+'            reduce using rule 46
	'++'           reduce using rule 46
	','            reduce using rule 46
	'-'            reduce using rule 46
	'--'           reduce using rule 46
	'->'           reduce using rule 46
	'.'            reduce using rule 46
	'/'            reduce using rule 46
	'<'            reduce using rule 46
	'<<'           reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'==>'          reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'>>'           reduce using rule 46
	'['            reduce using rule 46
	']'            reduce using rule 46
	'^'            reduce using rule 46
	'exists'       reduce using rule 46
	'forall'       reduce using rule 46
	'|'            reduce using rule 46
	'||'           reduce using rule 46
	'~'            reduce using rule 46
	L_charac       reduce using rule 46
	L_doubl        reduce using rule 46
	L_integ        reduce using rule 46
	L_quoted       reduce using rule 46
	L_Unsigned     reduce using rule 46
	L_Long         reduce using rule 46
	L_UnsignedLong reduce using rule 46
	L_Hexadecimal  reduce using rule 46
	L_HexUnsigned  reduce using rule 46
	L_HexLong      reduce using rule 46
	L_HexUnsLong   reduce using rule 46
	L_Octal        reduce using rule 46
	L_OctalUnsignedreduce using rule 46
	L_OctalLong    reduce using rule 46
	L_OctalUnsLong reduce using rule 46
	L_CDouble      reduce using rule 46
	L_CFloat       reduce using rule 46
	L_CLongDouble  reduce using rule 46
	L_CIdent       reduce using rule 46
	%eof           reduce using rule 46


State 171

	Exp -> Exp1 '==>' Exp2 .                            (rule 44)
	Exp2 -> Exp2 . '||' Exp3                            (rule 46)

	'!'            reduce using rule 44
	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&'            reduce using rule 44
	'&&'           reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	'++'           reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'--'           reduce using rule 44
	'->'           reduce using rule 44
	'.'            reduce using rule 44
	'/'            reduce using rule 44
	'<'            reduce using rule 44
	'<<'           reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'==>'          reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'>>'           reduce using rule 44
	'['            reduce using rule 44
	']'            reduce using rule 44
	'^'            reduce using rule 44
	'exists'       reduce using rule 44
	'forall'       reduce using rule 44
	'|'            reduce using rule 44
	'||'           shift, and enter state 115
			(reduce using rule 44)

	'~'            reduce using rule 44
	L_charac       reduce using rule 44
	L_doubl        reduce using rule 44
	L_integ        reduce using rule 44
	L_quoted       reduce using rule 44
	L_Unsigned     reduce using rule 44
	L_Long         reduce using rule 44
	L_UnsignedLong reduce using rule 44
	L_Hexadecimal  reduce using rule 44
	L_HexUnsigned  reduce using rule 44
	L_HexLong      reduce using rule 44
	L_HexUnsLong   reduce using rule 44
	L_Octal        reduce using rule 44
	L_OctalUnsignedreduce using rule 44
	L_OctalLong    reduce using rule 44
	L_OctalUnsLong reduce using rule 44
	L_CDouble      reduce using rule 44
	L_CFloat       reduce using rule 44
	L_CLongDouble  reduce using rule 44
	L_CIdent       reduce using rule 44
	%eof           reduce using rule 44


State 172

	ListExp -> Exp ',' ListExp .                        (rule 43)

	')'            reduce using rule 43
	%eof           reduce using rule 43


State 173

	Exp14 -> Exp14 '(' ListExp ')' .                    (rule 81)

	'!'            reduce using rule 81
	'!='           reduce using rule 81
	'%'            reduce using rule 81
	'&'            reduce using rule 81
	'&&'           reduce using rule 81
	'('            reduce using rule 81
	')'            reduce using rule 81
	'*'            reduce using rule 81
	'+'            reduce using rule 81
	'++'           reduce using rule 81
	','            reduce using rule 81
	'-'            reduce using rule 81
	'--'           reduce using rule 81
	'->'           reduce using rule 81
	'.'            reduce using rule 81
	'/'            reduce using rule 81
	'<'            reduce using rule 81
	'<<'           reduce using rule 81
	'<='           reduce using rule 81
	'=='           reduce using rule 81
	'==>'          reduce using rule 81
	'>'            reduce using rule 81
	'>='           reduce using rule 81
	'>>'           reduce using rule 81
	'['            reduce using rule 81
	']'            reduce using rule 81
	'^'            reduce using rule 81
	'exists'       reduce using rule 81
	'forall'       reduce using rule 81
	'|'            reduce using rule 81
	'||'           reduce using rule 81
	'~'            reduce using rule 81
	L_charac       reduce using rule 81
	L_doubl        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81
	L_Unsigned     reduce using rule 81
	L_Long         reduce using rule 81
	L_UnsignedLong reduce using rule 81
	L_Hexadecimal  reduce using rule 81
	L_HexUnsigned  reduce using rule 81
	L_HexLong      reduce using rule 81
	L_HexUnsLong   reduce using rule 81
	L_Octal        reduce using rule 81
	L_OctalUnsignedreduce using rule 81
	L_OctalLong    reduce using rule 81
	L_OctalUnsLong reduce using rule 81
	L_CDouble      reduce using rule 81
	L_CFloat       reduce using rule 81
	L_CLongDouble  reduce using rule 81
	L_CIdent       reduce using rule 81
	%eof           reduce using rule 81


State 174

	Exp14 -> Exp14 '[' Exp ']' .                        (rule 79)

	'!'            reduce using rule 79
	'!='           reduce using rule 79
	'%'            reduce using rule 79
	'&'            reduce using rule 79
	'&&'           reduce using rule 79
	'('            reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'+'            reduce using rule 79
	'++'           reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'--'           reduce using rule 79
	'->'           reduce using rule 79
	'.'            reduce using rule 79
	'/'            reduce using rule 79
	'<'            reduce using rule 79
	'<<'           reduce using rule 79
	'<='           reduce using rule 79
	'=='           reduce using rule 79
	'==>'          reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	'>>'           reduce using rule 79
	'['            reduce using rule 79
	']'            reduce using rule 79
	'^'            reduce using rule 79
	'exists'       reduce using rule 79
	'forall'       reduce using rule 79
	'|'            reduce using rule 79
	'||'           reduce using rule 79
	'~'            reduce using rule 79
	L_charac       reduce using rule 79
	L_doubl        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79
	L_Unsigned     reduce using rule 79
	L_Long         reduce using rule 79
	L_UnsignedLong reduce using rule 79
	L_Hexadecimal  reduce using rule 79
	L_HexUnsigned  reduce using rule 79
	L_HexLong      reduce using rule 79
	L_HexUnsLong   reduce using rule 79
	L_Octal        reduce using rule 79
	L_OctalUnsignedreduce using rule 79
	L_OctalLong    reduce using rule 79
	L_OctalUnsLong reduce using rule 79
	L_CDouble      reduce using rule 79
	L_CFloat       reduce using rule 79
	L_CLongDouble  reduce using rule 79
	L_CIdent       reduce using rule 79
	%eof           reduce using rule 79


State 175

	Exp15 -> Quant ListCIdent '|' Exp .                 (rule 87)

	'!'            reduce using rule 87
	'!='           reduce using rule 87
	'%'            reduce using rule 87
	'&'            reduce using rule 87
	'&&'           reduce using rule 87
	'('            reduce using rule 87
	')'            reduce using rule 87
	'*'            reduce using rule 87
	'+'            reduce using rule 87
	'++'           reduce using rule 87
	','            reduce using rule 87
	'-'            reduce using rule 87
	'--'           reduce using rule 87
	'->'           reduce using rule 87
	'.'            reduce using rule 87
	'/'            reduce using rule 87
	'<'            reduce using rule 87
	'<<'           reduce using rule 87
	'<='           reduce using rule 87
	'=='           reduce using rule 87
	'==>'          reduce using rule 87
	'>'            reduce using rule 87
	'>='           reduce using rule 87
	'>>'           reduce using rule 87
	'['            reduce using rule 87
	']'            reduce using rule 87
	'^'            reduce using rule 87
	'exists'       reduce using rule 87
	'forall'       reduce using rule 87
	'|'            reduce using rule 87
	'||'           reduce using rule 87
	'~'            reduce using rule 87
	L_charac       reduce using rule 87
	L_doubl        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87
	L_Unsigned     reduce using rule 87
	L_Long         reduce using rule 87
	L_UnsignedLong reduce using rule 87
	L_Hexadecimal  reduce using rule 87
	L_HexUnsigned  reduce using rule 87
	L_HexLong      reduce using rule 87
	L_HexUnsLong   reduce using rule 87
	L_Octal        reduce using rule 87
	L_OctalUnsignedreduce using rule 87
	L_OctalLong    reduce using rule 87
	L_OctalUnsLong reduce using rule 87
	L_CDouble      reduce using rule 87
	L_CFloat       reduce using rule 87
	L_CLongDouble  reduce using rule 87
	L_CIdent       reduce using rule 87
	%eof           reduce using rule 87


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 120
Number of terminals: 51
Number of non-terminals: 61
Number of states: 176
